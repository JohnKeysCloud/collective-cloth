/*! For license information please see index.bundle.js.LICENSE.txt */
(()=>{"use strict";var t={d:(e,n)=>{for(var r in n)t.o(n,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:n[r]})}};function e(t){if(!t)throw new Error("Invalid modal state object passed to toggleModalState function.");if(!t.closeButtonState)throw new Error("Invalid close button state object passed to toggleModalState function.");t.listenerAttached=!t.listenerAttached,t.closeButtonState.listenerAttached=!t.closeButtonState.listenerAttached}function n(t){"true"===t.getAttribute("aria-hidden")?(t.setAttribute("aria-hidden","false"),t.setAttribute("aria-modal","true")):(t.setAttribute("aria-hidden","true"),t.setAttribute("aria-modal","false"))}function r(t){var r;!function(t){if(!t)throw new Error("Invalid argument passed to createDialogController function.");if(!(t instanceof HTMLElement))throw new Error("The provided argument is not a valid HTML element.");if("DIALOG"!==t.tagName)throw new Error("The element you passed in is not a dialog element.")}(t),(r=t).setAttribute("aria-modal","false"),r.setAttribute("aria-hidden","true");var a,o=(a=t).id?"#".concat(a.id):a.className?".".concat(a.className.split(" ").join(".")):"specified element",i=t.querySelector(".ds-close-button");(function(t,e){if(!t)throw new Error("Close button not found for the modal element: ".concat(e,"… Double check to ensure it has a class of '.ds-close-button'."));if("BUTTON"!==t.tagName)throw new Error("The close button for the modal element: ".concat(e," is not a button element."))})(i,o),function(t){t.setAttribute("aria-label","Close Dialog")}(i);var c={listenerAttached:!1,closeButtonState:{listenerAttached:!1}},s=function r(){t.classList.remove("closing"),t.close(),n(t),i.removeEventListener("click",l),t.removeEventListener("animationend",r),e(c)},l=function(){t.classList.add("closing"),t.addEventListener("animationend",s)};return{openDialog:function(){!function(){if(t.open)throw new Error("The following dialog is already open: ".concat(o,"."));if(c.listenerAttached)throw new Error("A listener is already attached to this dialog element: ".concat(o,"."));if(c.closeButtonState.listenerAttached)throw new Error("A listener is already attached to the close button of the dialog element: ".concat(o,"."))}(),t.showModal(),n(t),i.addEventListener("click",l),e(c)},closeDialog:l}}function a(t){t.preventDefault();var e=this.getAttribute("href"),n=document.querySelector(e);if(n){var r=document.querySelector("header").offsetHeight,a=n.getBoundingClientRect().top+window.scrollY-r;window.scrollTo({top:a,behavior:"smooth"})}}function o(t){var e=document.querySelector(t);if(e)return e;console.error("Element not found for selector: ".concat(t))}t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"==typeof window)return window}}(),t.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),(()=>{var e;t.g.importScripts&&(e=t.g.location+"");var n=t.g.document;if(!e&&n&&(n.currentScript&&(e=n.currentScript.src),!e)){var r=n.getElementsByTagName("script");if(r.length)for(var a=r.length-1;a>-1&&(!e||!/^http(s?):/.test(e));)e=r[a--].src}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=e})(),t.d({},{S:()=>pt});var i={animating:!1};function c(t){var e=o("nav");t?t&&(e.classList.remove("expanded"),i.animating=!1):(e.classList.add("expanded"),i.animating=!0)}function s(){var t=o(".nav-toggle-button"),e=t.classList.contains("active");if(e)t.classList.remove("active"),t.setAttribute("aria-label","Open Navigation Menu"),t.setAttribute("aria-expanded",!1),c(e);else{if(!0===i.animating)return;t.classList.add("active"),t.setAttribute("aria-label","Close Navigation Menu"),t.setAttribute("aria-expanded",!0),c(e)}t.addEventListener("click",s)}var l=1,u=!1;function d(t){m(l+=t)}function m(t){var e,n,r=document.querySelectorAll(".carousel-slide");document.querySelectorAll(".carousel-navigation-button"),function(t,e){e>t?l=1:e<1&&(l=t)}(r.length,t),(e=document.querySelector(".carousel-slide.active")).classList.add("deactivating"),u=!0,(n=e).setDeactivatedSlideToDisplayNoneRef=function(){!function(t){t.classList.remove("deactivating","active"),u=!1,t.removeEventListener("animationend",t.setDeactivatedSlideToDisplayNoneRef)}(n)},n.addEventListener("animationend",n.setDeactivatedSlideToDisplayNoneRef),document.querySelector(".carousel-navigation-button.active").classList.remove("active"),function(){var t=document.querySelectorAll(".carousel-slide"),e=document.querySelectorAll(".carousel-navigation-button");t[l-1].classList.add("active"),e[l-1].classList.add("active")}()}function p(t,e){"left"===e?(t.style.setProperty("--fade-in","var(--left-fade-in-animation)"),t.style.setProperty("--fade-out","var(--left-fade-out-animation)")):"right"===e&&(t.style.setProperty("--fade-in","var(--right-fade-in-animation)"),t.style.setProperty("--fade-out","var(--right-fade-out-animation)"))}function f(){var t=document.documentElement;!function(t){var e=document.querySelector(".carousel-arrow.left-arrow"),n=document.querySelector(".carousel-arrow.right-arrow");e&&e.addEventListener("click",(function(){if(!u){var e=l;d(-1),p(t,"left"),e<=l&&p(t,"right")}})),n&&n.addEventListener("click",(function(){if(!u){var e=l;d(1),p(t,"right"),e>=l&&p(t,"left")}}))}(t),function(t){document.querySelectorAll(".carousel-navigation-button").forEach((function(e,n){e.addEventListener("click",(function(){if(!e.classList.contains("active")&&!u){var r=l;!function(t){m(l=t)}(n+1),r<l?p(t,"right"):r>l&&p(t,"left")}}))}))}(t)}var v=function(t){return(arguments.length>1&&void 0!==arguments[1]?arguments[1]:document).querySelector(t)},h=function(t){return(arguments.length>1&&void 0!==arguments[1]?arguments[1]:document).querySelectorAll(t)},g=function(t,e,n){return t.addEventListener(e,n)},b=function(t,e,n){return t.removeEventListener(e,n)},y=function(t,e,n){return t.classList[e](n)},E=function(t,e){return t.disabled=e};function w(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){var n=null==t?null:"undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(null!=n){var r,a,o,i,c=[],s=!0,l=!1;try{if(o=(n=n.call(t)).next,0===e){if(Object(n)!==n)return;s=!1}else for(;!(s=(r=o.call(n)).done)&&(c.push(r.value),c.length!==e);s=!0);}catch(t){l=!0,a=t}finally{try{if(!s&&null!=n.return&&(i=n.return(),Object(i)!==i))return}finally{if(l)throw a}}return c}}(t,e)||function(t,e){if(t){if("string"==typeof t)return A(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);return"Object"===n&&t.constructor&&(n=t.constructor.name),"Map"===n||"Set"===n?Array.from(t):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?A(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function A(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,r=new Array(e);n<e;n++)r[n]=t[n];return r}function S(t){var e=t.target,n=x.submitButton(),r=x.characterCount(),a=e.value.trim().length,o=a>=99;r.textContent="".concat(a,"/").concat(99),o?(E(n,!1),y(r,"add","valid")):(E(n,!0),y(r,"remove","valid"))}var x={form:function(){return v("#start-the-process-form")},stepNumber:function(){return v("#step-number")},characterCount:function(){return v("#character-count")},submitButton:function(){return v("#submit-button")},previousButton:function(){return v("#previous-button")},nextButton:function(){return v("#next-button")},modal:function(){return v("#start-the-process-dialog")},closeButton:function(){return v("#process-dialog-close-button")},buttonContainer:function(){return v("#dialog-button-container")},fieldSet:function(t){return v('[data-field-set="'.concat(t,'"]'))},textArea:function(){return v("textarea")},nameField:function(){return v("#name")}},L=function(t,e){var n;y(x.fieldSet(t),"remove","active"),y(x.fieldSet(e),"add","active"),n=e,x.stepNumber().textContent="Step ".concat(n),G.setNewFieldSet(e)},C=function(t){var e=x.textArea(),n=x.characterCount();"enable"===t?(y(n,"add","active"),e.value.trim().length>=99&&(y(n,"add","valid"),E(x.submitButton(),!1)),g(e,"input",S)):"disable"===t&&(y(n,"remove","active"),y(n,"remove","valid"),E(x.submitButton(),!0),b(e,"input",S))};const k=JSON.parse('[{"id":"success","src":"https://collective-cloth.s3.us-east-2.amazonaws.com/_s3-static-assets/media/images/response-bots/successBot.gif","alt":"Success Bot"},{"id":"error","src":"https://collective-cloth.s3.us-east-2.amazonaws.com/_s3-static-assets/media/images/response-bots/errorBot.gif","alt":"Error Bot"}]');function O(t){var e=pt.responseModal,n=e.element,r=e.controller,a=n.querySelector("#response-dialog-heading"),o=n.querySelector("#response-dialog-paragraph"),i=n.querySelector("#response-dialog-image");if("success"===t.status){a.textContent="Submission confirmed. Please stand by for imminent contact. 💭",o.textContent="Your cooperation with the collective is appreciated.";var c=k.find((function(t){return"success"===t.id}));i.src=c.src,i.alt=c.alt,x&&x.closeButton&&x.closeButton().click()}else{a.textContent="Submission Failed. Please try again. 💭",o.textContent=t.message;var s=k.find((function(t){return"error"===t.id}));i.src=s.src,i.alt=s.alt}r.openDialog()}function q(t){return q="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},q(t)}function N(){N=function(){return e};var t,e={},n=Object.prototype,r=n.hasOwnProperty,a=Object.defineProperty||function(t,e,n){t[e]=n.value},o="function"==typeof Symbol?Symbol:{},i=o.iterator||"@@iterator",c=o.asyncIterator||"@@asyncIterator",s=o.toStringTag||"@@toStringTag";function l(t,e,n){return Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}),t[e]}try{l({},"")}catch(t){l=function(t,e,n){return t[e]=n}}function u(t,e,n,r){var o=e&&e.prototype instanceof g?e:g,i=Object.create(o.prototype),c=new B(r||[]);return a(i,"_invoke",{value:C(t,n,c)}),i}function d(t,e,n){try{return{type:"normal",arg:t.call(e,n)}}catch(t){return{type:"throw",arg:t}}}e.wrap=u;var m="suspendedStart",p="suspendedYield",f="executing",v="completed",h={};function g(){}function b(){}function y(){}var E={};l(E,i,(function(){return this}));var w=Object.getPrototypeOf,A=w&&w(w(j([])));A&&A!==n&&r.call(A,i)&&(E=A);var S=y.prototype=g.prototype=Object.create(E);function x(t){["next","throw","return"].forEach((function(e){l(t,e,(function(t){return this._invoke(e,t)}))}))}function L(t,e){function n(a,o,i,c){var s=d(t[a],t,o);if("throw"!==s.type){var l=s.arg,u=l.value;return u&&"object"==q(u)&&r.call(u,"__await")?e.resolve(u.__await).then((function(t){n("next",t,i,c)}),(function(t){n("throw",t,i,c)})):e.resolve(u).then((function(t){l.value=t,i(l)}),(function(t){return n("throw",t,i,c)}))}c(s.arg)}var o;a(this,"_invoke",{value:function(t,r){function a(){return new e((function(e,a){n(t,r,e,a)}))}return o=o?o.then(a,a):a()}})}function C(e,n,r){var a=m;return function(o,i){if(a===f)throw new Error("Generator is already running");if(a===v){if("throw"===o)throw i;return{value:t,done:!0}}for(r.method=o,r.arg=i;;){var c=r.delegate;if(c){var s=k(c,r);if(s){if(s===h)continue;return s}}if("next"===r.method)r.sent=r._sent=r.arg;else if("throw"===r.method){if(a===m)throw a=v,r.arg;r.dispatchException(r.arg)}else"return"===r.method&&r.abrupt("return",r.arg);a=f;var l=d(e,n,r);if("normal"===l.type){if(a=r.done?v:p,l.arg===h)continue;return{value:l.arg,done:r.done}}"throw"===l.type&&(a=v,r.method="throw",r.arg=l.arg)}}}function k(e,n){var r=n.method,a=e.iterator[r];if(a===t)return n.delegate=null,"throw"===r&&e.iterator.return&&(n.method="return",n.arg=t,k(e,n),"throw"===n.method)||"return"!==r&&(n.method="throw",n.arg=new TypeError("The iterator does not provide a '"+r+"' method")),h;var o=d(a,e.iterator,n.arg);if("throw"===o.type)return n.method="throw",n.arg=o.arg,n.delegate=null,h;var i=o.arg;return i?i.done?(n[e.resultName]=i.value,n.next=e.nextLoc,"return"!==n.method&&(n.method="next",n.arg=t),n.delegate=null,h):i:(n.method="throw",n.arg=new TypeError("iterator result is not an object"),n.delegate=null,h)}function O(t){var e={tryLoc:t[0]};1 in t&&(e.catchLoc=t[1]),2 in t&&(e.finallyLoc=t[2],e.afterLoc=t[3]),this.tryEntries.push(e)}function T(t){var e=t.completion||{};e.type="normal",delete e.arg,t.completion=e}function B(t){this.tryEntries=[{tryLoc:"root"}],t.forEach(O,this),this.reset(!0)}function j(e){if(e||""===e){var n=e[i];if(n)return n.call(e);if("function"==typeof e.next)return e;if(!isNaN(e.length)){var a=-1,o=function n(){for(;++a<e.length;)if(r.call(e,a))return n.value=e[a],n.done=!1,n;return n.value=t,n.done=!0,n};return o.next=o}}throw new TypeError(q(e)+" is not iterable")}return b.prototype=y,a(S,"constructor",{value:y,configurable:!0}),a(y,"constructor",{value:b,configurable:!0}),b.displayName=l(y,s,"GeneratorFunction"),e.isGeneratorFunction=function(t){var e="function"==typeof t&&t.constructor;return!!e&&(e===b||"GeneratorFunction"===(e.displayName||e.name))},e.mark=function(t){return Object.setPrototypeOf?Object.setPrototypeOf(t,y):(t.__proto__=y,l(t,s,"GeneratorFunction")),t.prototype=Object.create(S),t},e.awrap=function(t){return{__await:t}},x(L.prototype),l(L.prototype,c,(function(){return this})),e.AsyncIterator=L,e.async=function(t,n,r,a,o){void 0===o&&(o=Promise);var i=new L(u(t,n,r,a),o);return e.isGeneratorFunction(n)?i:i.next().then((function(t){return t.done?t.value:i.next()}))},x(S),l(S,s,"Generator"),l(S,i,(function(){return this})),l(S,"toString",(function(){return"[object Generator]"})),e.keys=function(t){var e=Object(t),n=[];for(var r in e)n.push(r);return n.reverse(),function t(){for(;n.length;){var r=n.pop();if(r in e)return t.value=r,t.done=!1,t}return t.done=!0,t}},e.values=j,B.prototype={constructor:B,reset:function(e){if(this.prev=0,this.next=0,this.sent=this._sent=t,this.done=!1,this.delegate=null,this.method="next",this.arg=t,this.tryEntries.forEach(T),!e)for(var n in this)"t"===n.charAt(0)&&r.call(this,n)&&!isNaN(+n.slice(1))&&(this[n]=t)},stop:function(){this.done=!0;var t=this.tryEntries[0].completion;if("throw"===t.type)throw t.arg;return this.rval},dispatchException:function(e){if(this.done)throw e;var n=this;function a(r,a){return c.type="throw",c.arg=e,n.next=r,a&&(n.method="next",n.arg=t),!!a}for(var o=this.tryEntries.length-1;o>=0;--o){var i=this.tryEntries[o],c=i.completion;if("root"===i.tryLoc)return a("end");if(i.tryLoc<=this.prev){var s=r.call(i,"catchLoc"),l=r.call(i,"finallyLoc");if(s&&l){if(this.prev<i.catchLoc)return a(i.catchLoc,!0);if(this.prev<i.finallyLoc)return a(i.finallyLoc)}else if(s){if(this.prev<i.catchLoc)return a(i.catchLoc,!0)}else{if(!l)throw new Error("try statement without catch or finally");if(this.prev<i.finallyLoc)return a(i.finallyLoc)}}}},abrupt:function(t,e){for(var n=this.tryEntries.length-1;n>=0;--n){var a=this.tryEntries[n];if(a.tryLoc<=this.prev&&r.call(a,"finallyLoc")&&this.prev<a.finallyLoc){var o=a;break}}o&&("break"===t||"continue"===t)&&o.tryLoc<=e&&e<=o.finallyLoc&&(o=null);var i=o?o.completion:{};return i.type=t,i.arg=e,o?(this.method="next",this.next=o.finallyLoc,h):this.complete(i)},complete:function(t,e){if("throw"===t.type)throw t.arg;return"break"===t.type||"continue"===t.type?this.next=t.arg:"return"===t.type?(this.rval=this.arg=t.arg,this.method="return",this.next="end"):"normal"===t.type&&e&&(this.next=e),h},finish:function(t){for(var e=this.tryEntries.length-1;e>=0;--e){var n=this.tryEntries[e];if(n.finallyLoc===t)return this.complete(n.completion,n.afterLoc),T(n),h}},catch:function(t){for(var e=this.tryEntries.length-1;e>=0;--e){var n=this.tryEntries[e];if(n.tryLoc===t){var r=n.completion;if("throw"===r.type){var a=r.arg;T(n)}return a}}throw new Error("illegal catch attempt")},delegateYield:function(e,n,r){return this.delegate={iterator:j(e),resultName:n,nextLoc:r},"next"===this.method&&(this.arg=t),h}},e}function T(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,r=new Array(e);n<e;n++)r[n]=t[n];return r}function B(t,e,n,r,a,o,i){try{var c=t[o](i),s=c.value}catch(t){return void n(t)}c.done?e(s):Promise.resolve(s).then(r,a)}function j(){var t;return t=N().mark((function t(e){var n,r,a;return N().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.prev=0,t.next=3,fetch("/api/submit-form",{method:"POST",headers:{"Content-Type":"application/json"},body:e});case 3:return r=t.sent,t.prev=4,t.next=7,r.json();case 7:n=t.sent,t.next=16;break;case 10:return t.prev=10,t.t0=t.catch(4),console.error("Failed to parse JSON response:",t.t0),O(n={status:"error",message:"Failed to parse JSON response"}),t.abrupt("return",{success:!1,error:t.t0.message});case 16:if(200!==r.status){t.next=21;break}return O(n),t.abrupt("return",{success:!0,data:n});case 21:if(400!==r.status){t.next=27;break}return console.error("Request error:",n.error),O({status:"error",message:"Invalid request sent"}),t.abrupt("return",{success:!1,error:"Invalid request"});case 27:return console.error("Unexpected response status:",r.status),O({status:"error",message:"An unexpected error occurred"}),t.abrupt("return",{success:!1,error:r.statusText});case 30:t.next=39;break;case 32:return t.prev=32,t.t1=t.catch(0),console.error("Client-side error - form submission:",t.t1),a=t.t1.message,t.t1.message.includes("NetworkError")&&(a="Please check your internet connection and try again."),O(t.t1.message),t.abrupt("return",{success:!1,error:a});case 39:case"end":return t.stop()}}),t,null,[[0,32],[4,10]])})),j=function(){var e=this,n=arguments;return new Promise((function(r,a){var o=t.apply(e,n);function i(t){B(o,r,a,i,c,"next",t)}function c(t){B(o,r,a,i,c,"throw",t)}i(void 0)}))},j.apply(this,arguments)}function I(t){var e=h("input, select, textarea",t);return Array.from(e).filter((function(t){return t.name})).map((function(t){var e="INPUT"===t.tagName||"TEXTAREA"===t.tagName?t.value.trim():t.value;return[t.name,e]}))}function P(t){this.value=this.value.replace(/[^\d+\-() ]/g,"")}function F(t){var e=document.querySelector('input[type="tel"]');if("add"===t)e.addEventListener("input",P);else{if("remove"!==t)throw new Error('togglePhoneInputSanitization accepts only "add" and "remove" as arguments.');e.removeEventListener("input",P)}}function _(t){var e=t.target,n=e.options[e.selectedIndex];!0!==n.disabled&&""!==n.value&&e.classList.add("valid")}var D=function(){var t={};return{updateFieldSetFormData:function(e,n){t[n]=e},get:function(){return t},clear:function(){return t={}},print:function(){Object.entries(t).forEach((function(t){var e=w(t,2);e[0],e[1].forEach((function(t){var e=w(t,2);e[0],e[1]}))}))}}}();function z(t){if("BUTTON"===t.target.tagName){var e=function(t){var e,n;F(1===t?"add":"remove"),e=2===t?"add":"remove",n=h("select"),"add"===e?n.forEach((function(t){g(t,"change",_)})):"remove"===e&&n.forEach((function(t){b(t,"change",_)}))},n=G.getCurrentFieldSet(),r=x.fieldSet(n),a=t.target,o=x.previousButton(),i=x.nextButton(),c=x.submitButton();if(a===i)!function(t,e,n){var r=x.previousButton(),a=x.nextButton();if(o=!0,h("input, select, textarea",n).forEach((function(t){var e=function(){t.classList.add("is-invalid"),g(t.closest(".field-element-container"),"animationend",(function e(){y(t,"remove","is-invalid"),b(t.closest(".field-element-container"),"animationend",e)})),o=!1},n="INPUT"===t.tagName,r="SELECT"===t.tagName;if(n){var a=t.getAttribute("data-pattern")?new RegExp(t.getAttribute("data-pattern")):null,i=t.value.trim(),c=a&&t.required,s=a&&""!==i,l="number"===t.getAttribute("type");c||s?a.test(t.value.trim())||e():l&&(t.checkValidity()||e())}else r&&(t.value||e())})),o){var o,i=I(n);D.updateFieldSetFormData(i,G.getCurrentFieldSet()),L(t,G.incrementFieldSet()),1!==G.getCurrentFieldSet()&&E(r,!1),3===G.getCurrentFieldSet()&&(E(a,!0),e("enable"))}}(n,C,r),e(n+1);else if(a===o)!function(t,e){var n=x.previousButton(),r=x.nextButton();L(t,G.decrementFieldSet()),1===G.getCurrentFieldSet()&&E(n,!0),3!==G.getCurrentFieldSet()&&E(r,!1),3===t&&e("disable")}(n,C),e(n-1);else if(a===c){var s=function(t,e){t.preventDefault();var n=function(t,e){var n={},r=I(t);e.updateFieldSetFormData(r,G.getCurrentFieldSet());for(var a=e.get(),o=0,i=Object.entries(a);o<i.length;o++)i[o][1].forEach((function(t){var e,r,a=(r=2,function(t){if(Array.isArray(t))return t}(e=t)||function(t,e){var n=null==t?null:"undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(null!=n){var r,a,o,i,c=[],s=!0,l=!1;try{if(o=(n=n.call(t)).next,0===e){if(Object(n)!==n)return;s=!1}else for(;!(s=(r=o.call(n)).done)&&(c.push(r.value),c.length!==e);s=!0);}catch(t){l=!0,a=t}finally{try{if(!s&&null!=n.return&&(i=n.return(),Object(i)!==i))return}finally{if(l)throw a}}return c}}(e,r)||function(t,e){if(t){if("string"==typeof t)return T(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);return"Object"===n&&t.constructor&&(n=t.constructor.name),"Map"===n||"Set"===n?Array.from(t):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?T(t,e):void 0}}(e,r)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=a[0],i=a[1];n[o]=i}));return n}(e,D);return JSON.stringify(n)}(t,r);!function(t){j.apply(this,arguments)}(s)}F(1===n?"add":"remove")}}var M,G=(M=1,{getCurrentFieldSet:function(){return M},setNewFieldSet:function(t){return M=t},incrementFieldSet:function(){return++M},decrementFieldSet:function(){return--M}});function J(){var t=x.modal();t.classList.remove("closing"),t.removeEventListener("animationend",J),t.close(),function(){var t=G.getCurrentFieldSet();x.form().reset(),x.characterCount().textContent="0/99",1!==t&&(E(x.previousButton(),!0),E(x.nextButton(),!1),L(t,1),3===t&&E(x.submitButton(),!0)),h("select").forEach((function(t){return y(t,"remove","valid")})),$(),F("remove"),C("disable"),b(x.closeButton(),"click",W)}()}function W(){var t=x.modal();y(t,"add","closing"),g(t,"animationend",J)}function $(){var t=h("#dialog-heading .letter");t[0].classList.contains("animate-letter")?t.forEach((function(t){t.classList.remove("animate-letter")})):t.forEach((function(t,e){setTimeout((function(){t.classList.add("animate-letter")}),123*(e+1))}))}function U(){x.modal().showModal(),x.nameField().focus(),F("add"),$(),g(x.closeButton(),"click",W),g(x.buttonContainer(),"click",z)}function R(t){t.forEach((function(t){t.isIntersecting?t.target.classList.add("intersecting"):t.target.classList.remove("intersecting")}))}var Y=new IntersectionObserver(R,{threshold:.45}),H=new IntersectionObserver(R,{threshold:.45}),Z=new IntersectionObserver(R,{threshold:.5});function V(){document.querySelector(".nav-toggle-button").click()}function X(){var t=document.documentElement.offsetWidth,e=document.querySelector(".nav-toggle-button"),n=document.querySelectorAll(".nav-link");e&&(t>1024?("true"===e.ariaExpanded&&e.click(),e.removeEventListener("click",s),n.forEach((function(t){return t.removeEventListener("click",V)}))):(e.addEventListener("click",s),n.forEach((function(t){return t.addEventListener("click",V)}))))}function K(t){this.classList.remove("highlight"),this.removeEventListener("animationend",K)}function Q(){var t=document.getElementById("start-the-process-button");t.classList.add("highlight"),t.addEventListener("animationend",K)}const tt=t.p+"a03f02b512a3b5f04437.webp",et=JSON.parse('[{"textContent":"home","href":"#call-to-action"},{"textContent":"who are we?","href":"#who-are-we"},{"textContent":"how does it work?","href":"#how-does-it-work"},{"textContent":"start the process","href":"#start-the-process"}]');function nt(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,r=new Array(e);n<e;n++)r[n]=t[n];return r}function rt(t,e,n,r,a,o){if("string"!=typeof e||"string"!=typeof t||"string"!=typeof r||"string"!=typeof n&&!Array.isArray(n)||"string"!=typeof a)throw new Error("Invalid input type. Please provide valid input types.");var i=document.createElement("img");if(i.setAttribute("id",e),i.src=t,i.alt=r,n&&("string"==typeof n?i.classList.add(n):Array.isArray(n)&&n.forEach((function(t){return i.classList.add(t)}))),i.setAttribute("aria-label",a),!o)throw new Error("Please add a size array for the image.");var c,s,l=(s=2,function(t){if(Array.isArray(t))return t}(c=o)||function(t,e){var n=null==t?null:"undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(null!=n){var r,a,o,i,c=[],s=!0,l=!1;try{if(o=(n=n.call(t)).next,0===e){if(Object(n)!==n)return;s=!1}else for(;!(s=(r=o.call(n)).done)&&(c.push(r.value),c.length!==e);s=!0);}catch(t){l=!0,a=t}finally{try{if(!s&&null!=n.return&&(i=n.return(),Object(i)!==i))return}finally{if(l)throw a}}return c}}(c,s)||function(t,e){if(t){if("string"==typeof t)return nt(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);return"Object"===n&&t.constructor&&(n=t.constructor.name),"Map"===n||"Set"===n?Array.from(t):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?nt(t,e):void 0}}(c,s)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),u=l[0],d=l[1];return i.setAttribute("height",u),i.setAttribute("width",d),i}function at(t,e){for(var n in e)t.setAttribute(n,e[n])}const ot=JSON.parse('[{"$":"https://collective-cloth.s3.us-east-2.amazonaws.com/_s3-static-assets/media/images/product-images/animated/team-capsule-large-animated.webp","C":"3-Dimensional Product Showcase"}]');function it(t){var e=document.createElement("figure");e.classList.add("carousel");var n=function(t){var e=document.createElement("button");e.classList.add("arrow","right-arrow","carousel-arrow"),at(e,{type:"button","aria-label":"Next"});var n=function(t){if(!t||!t.length)throw new Error("No images provided for carousel.");var e=document.createElement("div");return e.classList.add("carousel-slide-container"),t.forEach((function(n,r){var a=document.createElement("figcaption");a.classList.add("carousel-image-caption"),a.textContent=n.alt;var o=document.createElement("img");o.classList.add("carousel-image","non-interactive"),at(o,{src:n.src,alt:n.alt});var i=document.createElement("span");i.classList.add("carousel-image-index"),i.textContent="".concat(r+1,"/").concat(t.length);var c=document.createElement("figure");c.classList.add("carousel-image-container"),c.append(i,o,a);var s=document.createElement("div");s.classList.add("carousel-slide"),0===r&&s.classList.add("active"),s.setAttribute("data-index",r+1),s.append(c),e.append(s)})),e}(t),r=document.createElement("button");r.classList.add("arrow","left-arrow","carousel-arrow"),at(r,{type:"button","aria-label":"Previous"});var a=document.createElement("div");return a.classList.add("carousel-container"),a.append(r,n,e),a}(t),r=function(t){if(!t.length)throw new Error("No images provided for carousel.");var e=document.createElement("div");e.classList.add("carousel-navigation-button-container"),t.forEach((function(t,n){var r=document.createElement("button");r.classList.add("carousel-navigation-button"),0===n&&r.classList.add("active"),at(r,{type:"button","aria-label":"Go to slide ".concat(n+1),"data-index":n+1}),e.append(r)}));var n=document.createElement("div");return n.classList.add("carousel-navigation-container"),n.appendChild(e),n}(t);return e.append(n,r),e}const ct=t.p+"73dbabb4528a8e2f6d55.gif",st=JSON.parse('[{"name":"Time Capsule NY","link":"http://www.timecapsuleny.io","logo":"https://collective-cloth.s3.us-east-2.amazonaws.com/_s3-static-assets/media/images/company-logos/tcny-grayscale45.svg"},{"name":"American PoolPlayers Association","link":"https://poolplayers.com/","logo":"https://collective-cloth.s3.us-east-2.amazonaws.com/_s3-static-assets/media/images/company-logos/apa-grayscale45.svg"}]'),lt=JSON.parse('[{"src":"https://collective-cloth.s3.us-east-2.amazonaws.com/_s3-static-assets/media/images/carousel-images/carousel-image-1.webp","alt":"Carousel image 1"},{"src":"https://collective-cloth.s3.us-east-2.amazonaws.com/_s3-static-assets/media/images/carousel-images/carousel-image-2.webp","alt":"Carousel image 2"},{"src":"https://collective-cloth.s3.us-east-2.amazonaws.com/_s3-static-assets/media/images/carousel-images/carousel-image-3.webp","alt":"Carousel image 3"},{"src":"https://collective-cloth.s3.us-east-2.amazonaws.com/_s3-static-assets/media/images/carousel-images/carousel-image-4.webp","alt":"Carousel image 4"}]'),ut=JSON.parse('[{"title":"Start the Process","textContent":["Share details about your collective and design preferences below.","Our team will promptly contact you to discuss your tailored needs."]},{"title":"Design Collaboration","textContent":["Work closely with our designers to create your product.","Upon final approval, you\'ll receive a personalized quote."]},{"title":"Production & Delivery","textContent":["We produce and emblazon your garments with the chosen designs.","Finally, your order is meticulously prepared and shipped directly to you."]}]'),dt=JSON.parse('[{"fieldSet":1,"id":"name","label":"Enter your name:","pattern":"^[a-zA-Z]+(([\',. -][a-zA-Z ])?[a-zA-Z]*)*$","placeholder":"John Doe","required":true,"type":"text"},{"fieldSet":1,"id":"email","label":"Enter your email address:","pattern":"^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\\\.[a-zA-Z]{2,}$","placeholder":"example@email.com","required":true,"type":"email"},{"fieldSet":1,"id":"phone","label":"Enter your phone number:","pattern":"^\\\\+?[0-9]{1,3}?[-. ]?([0-9]{2,4}?[-. ]?){1,3}[0-9]{4,6}$","placeholder":"212-555-1234","required":false,"type":"tel"},{"fieldSet":2,"id":"collective_type","label":"What type of collective do you represent?","options":["Sports/E-Sports Team","Corporate Entity","Non-Profit Organization","Educational Institution","Special Event Group","Other"],"required":true,"type":"select"},{"fieldSet":2,"id":"garment_type","label":"Specify garment type:","options":["Crewneck T-Shirt","Tank-Top","Crewneck Sweater","Hoodie","Polo Shirt","Windbreaker Jacket","Baseball Cap","Beanie","Other"],"required":true,"type":"select"},{"fieldSet":2,"id":"color","label":"In what color?","options":["Black","White","Grey","Red","Green","Blue","Purple","Pink","Yellow","Orange","Other"],"required":true,"type":"select"},{"fieldSet":2,"id":"quantity","label":"How many?","placeholder":"e.g., 50","required":true,"type":"number"},{"fieldSet":3,"id":"vision","label":"Tell us your vision:","placeholder":"Convey your concept 💭 \\n 〔 99 character min. 〕 \\n \\n Interested in an AI generated custom logo? \\n \\n Where should the designs appear on the garment(s)? \\n \\n Should all items in a style (e.g., shirts, sweaters, hats) be identical or unique? \\n \\n Provide as many details as possible about your design preferences and ideas.","required":true,"type":"textarea"}]'),mt=JSON.parse('{"name":"collective cloth","logo":"https://cyclone-studios.s3.us-east-2.amazonaws.com/s3_cyclone-studios/alphaLogos/cycloneStudios/cycloneStudios.svg","link":"https://www.cyclonestud.io/"}');var pt,ft,vt,ht,gt,bt,yt,Et;document.getElementById("content").append(function(){var t=document.createElement("header"),e=document.createElement("div");e.setAttribute("class","content-container");var n=rt(tt,"header-logo","company-logo","Cyclone Studios Logo","Cyclone Studios Logo",["123px","123px"]),r=document.createElement("a");r.setAttribute("id","header-logo-link"),r.setAttribute("href","/"),r.append(n);var a=document.createElement("h4");a.setAttribute("id","header-logo-text"),a.classList.add("company-name"),a.setAttribute("aria-label","Collective Cloth"),a.textContent="collective cloth";var o=document.createElement("div");o.setAttribute("id","header-logo-container"),o.append(r,a);var i,c=function(t){var e=document.createElement("div");e.classList.add("nav-toggle-bars");var n=document.createElement("button");return n.classList.add("nav-toggle-button"),at(n,{"aria-label":"Open Navigation Menu","aria-expanded":!1,"aria-controls":"nav"}),n.appendChild(e),n}(),s=function(t){var e=document.createElement("nav"),n=document.createElement("ul");return n.classList.add("nav-ul"),t.forEach((function(t){var e=document.createElement("li");e.classList.add("nav-item");var r=document.createElement("a");r.classList.add("nav-link"),r.textContent=t.textContent,r.href=t.href,e.appendChild(r),n.appendChild(e)})),e.appendChild(n),e}(et);return s.prepend(((i=document.createElement("h2")).setAttribute("id","nav-heading"),i.textContent="Main Menu",i)),e.append(o,c,s),t.append(e),t}(),function(){var t=document.createElement("section");t.setAttribute("id","call-to-action");var e=document.createElement("div");return e.classList.add("content-container"),e.append(function(){var t=document.createElement("div");t.setAttribute("id","call-to-action-left");var e=document.createElement("span");e.classList.add("clipped-text"),e.textContent="show solidarity in style ";var n=document.createElement("span");n.classList.add("emoji","heading-emoji"),n.textContent="😎";var r=document.createElement("h1");r.setAttribute("id","call-to-action-heading"),r.append(e,n);var a=document.createTextNode("implementing "),o=document.createElement("span");o.textContent="AI",o.classList.add("call-to-action-ai");var i=document.createTextNode(" in creative design."),c=document.createElement("h3");c.setAttribute("id","call-to-action-subheading"),c.append(a,o,i);var s=document.createElement("p");s.classList.add("article-text-content"),s.textContent="Our team, a blend of designers, apparel manufacturers, and business experts, specializes in generating bespoke apparel that reflects the distinct identity of each collective we work with.";var l=document.createElement("p");l.classList.add("article-text-content"),l.textContent="We offer a comprehensive service that seamlessly integrates design, production, and delivery, ensuring a tailored experience from start to finish.";var u=document.createElement("article");return u.classList.add("call-to-action-text-content"),u.append(r,c,s,l),t.append(u),t}(),function(){var t=document.createElement("div");t.setAttribute("id","call-to-action-right");var e=rt(ot[0].$,"call-to-action-product-image","",ot[0].C,"3-Dimensional Product Showcase",["800","800"]);return t.append(e),t}()),t.append(e),t}(),function(t){var e=document.createElement("section");e.setAttribute("id","connections");var n=document.createElement("div");n.classList.add("content-container");var r=document.createElement("div");return r.classList.add("logo-container"),t.forEach((function(t){var e=document.createElement("img");e.classList.add("connection-logo"),e.src=t.logo,e.alt=t.name;var n=document.createElement("a");n.classList.add("connections-link"),n.href=t.link,n.target="_blank",n.rel="noopener noreferrer",n.append(e),r.append(n)})),n.append(r),e.append(n),e}(st),function(t){var e=document.createElement("section");e.setAttribute("id","who-are-we");var n=document.createElement("div");n.classList.add("content-container");var r=it(t),a=document.createElement("h3");a.setAttribute("id","who-are-we-heading"),a.textContent="Who Are We?";var o=document.createElement("p");o.classList.add("article-text-content"),o.textContent="Conceived to craft custom couture for your collective, our company champions the creation of cohesive, captivating clothing that celebrates your unique camaraderie and character.";var i=document.createElement("p");i.classList.add("article-text-content"),i.textContent="From competitive teams to corporate circles, we commit to customizing chic, comfortable compositions. Utilizing choice materials and cutting-edge design techniques, we convert your vision into a wearable canvas, capturing the essence of your unity.",document.createElement("p").classList.add("article-text-content");var c=document.createElement("article");return c.setAttribute("id","who-are-we-text-content"),c.append(a,o,i),n.append(r,c),e.append(n),e}(lt),function(t){var e=document.createElement("section");e.setAttribute("id","how-does-it-work");var n=document.createElement("div");n.classList.add("content-container");var r=document.createElement("article");r.classList.add("how-does-it-work-text-content");var a=document.createElement("h3");a.setAttribute("id","how-does-it-work-heading"),a.textContent="How Does It Work?",n.append(a);var o=document.createElement("div");return o.setAttribute("id","instructions-container"),t.forEach((function(t,e){var n=document.createElement("article");n.classList.add("instruction-article");var r=document.createElement("div");r.classList.add("step-number"),r.textContent="0".concat(e+1," ");var a=document.createElement("h4");a.classList.add("instruction-number"),a.textContent=t.title;var i=document.createElement("div");i.classList.add("instruction-title-container"),i.append(r,a);var c=document.createElement("div");c.classList.add("instruction-text-content"),t.textContent.forEach((function(t){var e=document.createElement("p");e.classList.add("article-text-content"),e.textContent=t,c.appendChild(e)})),n.append(i,c),o.appendChild(n)})),r.appendChild(o),n.appendChild(r),e.append(n),e}(ut),function(t){var e=document.createElement("section");e.setAttribute("id","start-the-process");var n=document.createElement("div");n.classList.add("content-container");var r=document.createElement("button");r.setAttribute("id","start-the-process-button"),r.textContent="start the process";var a=function(t){var e=document.createElement("h2");e.setAttribute("id","dialog-heading"),e.textContent="The Process";var n=document.createElement("h3");n.setAttribute("id","step-number"),n.textContent="Step 1";var r=document.createElement("button");r.setAttribute("id","process-dialog-close-button"),r.setAttribute("type","button"),r.setAttribute("aria-label","Close Dialog"),r.textContent="✕";var a=document.createElement("div");a.setAttribute("id","dialog-top-container"),a.append(n,r);var o=document.createElement("button");o.setAttribute("id","previous-button"),o.setAttribute("disabled","true"),o.type="button",o.dataset.element="button",o.textContent="previous";var i=document.createElement("button");i.setAttribute("id","next-button"),i.type="button",i.dataset.element="button",i.textContent="next";var c=document.createElement("button");c.setAttribute("id","submit-button"),c.setAttribute("form","start-the-process-form"),c.setAttribute("type","submit"),c.setAttribute("disabled","true"),c.dataset.element="button",c.textContent="submit";var s=document.createElement("div");s.setAttribute("id","dialog-button-container"),s.append(o,i,c);var l=function(t){var e=document.createElement("fieldset");e.setAttribute("id","field-set-one"),e.classList.add("field-set","active"),e.dataset.fieldSet=1;var n=document.createElement("fieldset");n.setAttribute("id","field-set-two"),n.classList.add("field-set"),n.dataset.fieldSet=2;var r=document.createElement("fieldset");r.setAttribute("id","field-set-three"),r.classList.add("field-set"),r.dataset.fieldSet=3,t.forEach((function(t,a){var o,i=document.createElement("label");if(i.setAttribute("for",t.id),i.textContent=t.label,"select"===t.type){var c=document.createElement("option");c.setAttribute("value",""),c.setAttribute("disabled","true"),c.setAttribute("selected","true"),c.textContent="make a selection",(o=document.createElement("select")).setAttribute("id",t.id),o.setAttribute("name",t.id),o.appendChild(c),t.options.forEach((function(t){var e=document.createElement("option");e.setAttribute("value",t),e.textContent=t,o.appendChild(e)}))}else"textarea"===t.type?((o=document.createElement(t.type)).setAttribute("id",t.id),o.setAttribute("name",t.id),o.setAttribute("minlength",99),o.setAttribute("maxlength",999)):"number"===t.type?((o=document.createElement("input")).setAttribute("id",t.id),o.setAttribute("name",t.id),o.setAttribute("type",t.type),o.setAttribute("min",1)):((o=document.createElement("input")).setAttribute("id",t.id),o.setAttribute("name",t.id),o.setAttribute("type",t.type));if(t.pattern&&o.setAttribute("pattern",o.setAttribute("data-pattern",t.pattern)),t.placeholder&&o.setAttribute("placeholder",t.placeholder),t.required){o.setAttribute("required","true");var s=document.createElement("span");s.classList.add("required-asterisk"),s.textContent="✽ ",s.setAttribute("aria-label","required field asterisk"),i.prepend(s)}var l=document.createElement("div");l.classList.add("field-element-container"),l.append(o);var u=document.createElement("div");u.setAttribute("id","form-field-container-".concat(++a)),u.classList.add("form-field-container"),1===t.fieldSet?u.dataset.fieldSet=1:2===t.fieldSet?u.dataset.fieldSet=2:3===t.fieldSet&&(u.dataset.fieldSet=3),u.append(i,l),1===t.fieldSet?e.appendChild(u):2===t.fieldSet?n.appendChild(u):3===t.fieldSet&&r.appendChild(u)}));var a=document.createElement("p");a.setAttribute("id","form-requirement-text");var o=document.createElement("span");o.classList.add("asterisk-span"),o.textContent="✽",o.setAttribute("aria-label","required field asterisk");var i=document.createTextNode(" ＝ required");a.append(o,i);var c=document.createElement("p");c.setAttribute("id","character-count"),c.textContent="0/99";var s=document.createElement("div");s.setAttribute("id","form-requirements-container"),s.append(a,c);var l=document.createElement("div");l.setAttribute("id","form-field-main-container"),l.append(e,n,r),l.appendChild(s);var u=document.createElement("form");return u.setAttribute("id","start-the-process-form"),u.appendChild(l),u}(t);l.appendChild(s);var u=document.createElement("dialog");return u.setAttribute("id","start-the-process-dialog"),u.append(e,a,l),u}(t);return n.append(r,a),e.append(n),e}(dt),function(t,e){var n=document.createElement("footer"),r=document.createElement("div");if(r.classList.add("content-container"),t.name){var a=(new Date).getFullYear(),o=document.createElement("p");o.setAttribute("id","footer-text"),o.textContent="© ".concat(a," ").concat(t.name),r.appendChild(o)}if(t.logo){var i=document.createElement("img");if(i.setAttribute("id","footer-logo"),i.setAttribute("src",t.logo),i.setAttribute("alt","".concat(t.name," logo")),t.link){var c=document.createElement("a");c.setAttribute("id","footer-logo-link"),c.setAttribute("href",t.link),c.setAttribute("target","_blank"),c.appendChild(i),r.appendChild(c)}else r.appendChild(i)}return n.appendChild(r),n}(mt),function(){var t=document.createElement("dialog");t.setAttribute("id","response-dialog");var e=document.createElement("button");e.setAttribute("class","ds-close-button"),e.setAttribute("id","response-process-dialog-close-button"),e.setAttribute("type","button"),e.setAttribute("aria-label","Close Dialog"),e.textContent="✕";var n=document.createElement("h3");n.setAttribute("id","response-dialog-heading"),n.textContent="Submission confirmed. Please stand by for imminent contact 💭";var r=document.createElement("p");r.setAttribute("id","response-dialog-paragraph"),r.textContent="Your cooperation with the collective is appreciated.";var a=document.createElement("img");a.setAttribute("id","response-dialog-image"),a.setAttribute("src",ct);var o=document.createElement("div");return o.setAttribute("id","response-dialog-content-container"),o.append(e,n,r,a),t.appendChild(o),t}()),yt=document.getElementById("dialog-heading"),gt=yt,bt=document.createDocumentFragment(),gt.textContent.split("").forEach((function(t,e){var n=document.createElement("span");n.setAttribute("id","".concat("split-text","-").concat(e+1)),n.classList.add("letter"),n.textContent=" "===t?" ":t,bt.appendChild(n)})),Et=bt,yt.textContent="",yt.appendChild(Et),document.querySelectorAll('a[href^="#"]').forEach((function(t){t.addEventListener("click",a)})),document.querySelector(".nav-toggle-button").addEventListener("click",s),document.getElementById("start-the-process-button").addEventListener("click",U),document.querySelector('.nav-link[href="#start-the-process"]').addEventListener("click",Q),window.addEventListener("load",X),window.addEventListener("resize",X),f(),ft=document.querySelectorAll("section"),vt=document.querySelectorAll("p"),ht=document.getElementById("start-the-process-button"),ft.forEach((function(t){return Y.observe(t)})),vt.forEach((function(t){return H.observe(t)})),Z.observe(ht),pt=function(){var t={},e=document.getElementById("response-dialog");return t.responseModal={element:e,controller:r(e)},t}()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUVadEMsU0FBU2dXLGVBQWUsNEJBQ2hDM1csaUJBQWlCLFFBQVN1VixHQUVqQjVVLFNBQVN2QixjQUFjLHdDQUMvQlksaUJBQWlCLFFBQVN5VyxHQUVqRHhWLE9BQU9qQixpQkFBaUIsT0FBUWtXLEdBQ2hDalYsT0FBT2pCLGlCQUFpQixTQUFVa1csR0FFbEMxUixJcEJvQ01rVSxHQUFXL1gsU0FBU2lELGlCQUFpQixXQUNyQytVLEdBQWFoWSxTQUFTaUQsaUJBQWlCLEtBQ3ZDZ1YsR0FBcUJqWSxTQUFTZ1csZUFBZSw0QkFFbkQrQixHQUFTNVQsU0FBUSxTQUFBOGEsR0FBTyxPQUFJaEssRUFBZ0JpSyxRQUFRRCxFQUFRLElBQzVEakgsR0FBVzdULFNBQVEsU0FBQThYLEdBQVMsT0FBSTdHLEVBQWtCOEosUUFBUWpELEVBQVUsSUFDcEU1RyxFQUEyQjZKLFFBQVFqSCxJTWhEbkMvUSxHZWxCSyxXQUNMLElBQUlBLEVBQXFCLENBQUMsRUFFcEJ1WCxFQUFnQnplLFNBQVNnVyxlQUFlLG1CQVE5QyxPQVBBOU8sRUFBbUJ1WCxjQUFnQixDQUNqQ3hnQixRQUFTd2dCLEVBQ1RwWCxXQUFZekosRUFBdUI2Z0IsSUFLOUJ2WCxDQUNULENmTXVCaVkiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jb2xsZWN0aXZlLWNsb3RoL3dlYnBhY2svYm9vdHN0cmFwIiwid2VicGFjazovL2NvbGxlY3RpdmUtY2xvdGgvd2VicGFjay9ydW50aW1lL2RlZmluZSBwcm9wZXJ0eSBnZXR0ZXJzIiwid2VicGFjazovL2NvbGxlY3RpdmUtY2xvdGgvLi9zcmMvdXRpbGl0aWVzL2Rpc3BsYXlTdHVmZi5qcyIsIndlYnBhY2s6Ly9jb2xsZWN0aXZlLWNsb3RoLy4vc3JjL2pzL2hhbmRsZXJzL2hhbmRsZS10YXJnZXQtc2Nyb2xsLWJlaGF2aW9yLmpzIiwid2VicGFjazovL2NvbGxlY3RpdmUtY2xvdGgvLi9zcmMvdXRpbGl0aWVzL2NoZWNrLXRhcmdldC1lbGVtZW50LWV4aXN0ZW5jZS5qcyIsIndlYnBhY2s6Ly9jb2xsZWN0aXZlLWNsb3RoL3dlYnBhY2svcnVudGltZS9nbG9iYWwiLCJ3ZWJwYWNrOi8vY29sbGVjdGl2ZS1jbG90aC93ZWJwYWNrL3J1bnRpbWUvaGFzT3duUHJvcGVydHkgc2hvcnRoYW5kIiwid2VicGFjazovL2NvbGxlY3RpdmUtY2xvdGgvd2VicGFjay9ydW50aW1lL3B1YmxpY1BhdGgiLCJ3ZWJwYWNrOi8vY29sbGVjdGl2ZS1jbG90aC8uL3NyYy9jb21wb25lbnRzL2NyZWF0ZS1oYW1idXJnZXIvaGFuZGxlLWhhbWJ1cmdlci5qcyIsIndlYnBhY2s6Ly9jb2xsZWN0aXZlLWNsb3RoLy4vc3JjL2NvbXBvbmVudHMvY3JlYXRlLWNhcm91c2VsL2Nhcm91c2VsLWxvZ2ljLmpzIiwid2VicGFjazovL2NvbGxlY3RpdmUtY2xvdGgvLi9zcmMvY29tcG9uZW50cy9jcmVhdGUtY2Fyb3VzZWwvaGFuZGxlLWNhcm91c2VsLmpzIiwid2VicGFjazovL2NvbGxlY3RpdmUtY2xvdGgvLi9zcmMvdXRpbGl0aWVzL2phYmFzY3JpcHR6LXV0aWxpdGllcy5qcyIsIndlYnBhY2s6Ly9jb2xsZWN0aXZlLWNsb3RoLy4vc3JjL2pzL2hhbmRsZXJzL2hhbmRsZS10ZXh0LWFyZWEtY2hhcmFjdGVyLWNvdW50LmpzIiwid2VicGFjazovL2NvbGxlY3RpdmUtY2xvdGgvLi9zcmMvanMvY2FjaGUvZGlhbG9nLWVsZW1lbnRzLWFuZC11dGlsdGllcy5qcyIsIndlYnBhY2s6Ly9jb2xsZWN0aXZlLWNsb3RoLy4vc3JjL2pzL21vZGlmaWVycy9tb2RpZnktdWkuanMiLCJ3ZWJwYWNrOi8vY29sbGVjdGl2ZS1jbG90aC8uL3NyYy9qcy9tZXRhL2NvbnRyb2xsZXJzLmpzIiwid2VicGFjazovL2NvbGxlY3RpdmUtY2xvdGgvLi9zcmMvanMvaGFuZGxlcnMvaGFuZGxlLWZvcm0tc3VibWlzc2lvbi5qcyIsIndlYnBhY2s6Ly9jb2xsZWN0aXZlLWNsb3RoLy4vc3JjL2pzL2hhbmRsZXJzL2hhbmRsZS10ZWxlcGhvbmUtaW5wdXQtc2FuaXRpemF0aW9uLmpzIiwid2VicGFjazovL2NvbGxlY3RpdmUtY2xvdGgvLi9zcmMvanMvaGFuZGxlcnMvaGFuZGxlLXNlbGVjdC1wbGFjZS1ob2xkZXJzLmpzIiwid2VicGFjazovL2NvbGxlY3RpdmUtY2xvdGgvLi9zcmMvanMvaGFuZGxlcnMvaGFuZGxlLWRpYWxvZy1idXR0b25zLmpzIiwid2VicGFjazovL2NvbGxlY3RpdmUtY2xvdGgvLi9zcmMvanMvZmFjdG9yaWVzLmpzIiwid2VicGFjazovL2NvbGxlY3RpdmUtY2xvdGgvLi9zcmMvanMvaGFuZGxlcnMvaGFuZGxlLXByb2Nlc3MtbW9kYWwuanMiLCJ3ZWJwYWNrOi8vY29sbGVjdGl2ZS1jbG90aC8uL3NyYy9qcy9oYW5kbGVycy9oYW5kbGUtaW50ZXJzZWN0aW9uLW9ic2VydmVycy5qcyIsIndlYnBhY2s6Ly9jb2xsZWN0aXZlLWNsb3RoLy4vc3JjL2pzL2hhbmRsZXJzL2hhbmRsZS1uYXYtbGluay1wb3N0LWNsaWNrLWJlaGF2aW9yLmpzIiwid2VicGFjazovL2NvbGxlY3RpdmUtY2xvdGgvLi9zcmMvanMvaGFuZGxlcnMvaGFuZGxlLWhpZ2hsaWdodC1zdGFydC1wcm9jZXNzLW5hdi1saW5rLmpzIiwid2VicGFjazovL2NvbGxlY3RpdmUtY2xvdGgvLi9zcmMvdXRpbGl0aWVzL21hcmtkb3duL2NyZWF0ZS1pbWFnZS5qcyIsIndlYnBhY2s6Ly9jb2xsZWN0aXZlLWNsb3RoLy4vc3JjL3V0aWxpdGllcy9zZXQtYXR0cmlidXRlcy5qcyIsIndlYnBhY2s6Ly9jb2xsZWN0aXZlLWNsb3RoLy4vc3JjL2NvbXBvbmVudHMvY3JlYXRlLWNhcm91c2VsL2Nhcm91c2VsLW1hcmt1cC5qcyIsIndlYnBhY2s6Ly9jb2xsZWN0aXZlLWNsb3RoLy4vc3JjL2FwcC5qcyIsIndlYnBhY2s6Ly9jb2xsZWN0aXZlLWNsb3RoLy4vc3JjL2pzL3NwZWNpYWwtZWZmZWN0cy9zcGxpdC10ZXh0LmpzIiwid2VicGFjazovL2NvbGxlY3RpdmUtY2xvdGgvLi9zcmMvanMvbW9kaWZpZXJzL21vZGlmeS1zcGxpdC10aGUtcHJvY2Vzcy1oZWFkaW5nLXRleHQuanMiLCJ3ZWJwYWNrOi8vY29sbGVjdGl2ZS1jbG90aC8uL3NyYy9qcy9tZXRhL2NyZWF0ZS1kb20uanMiLCJ3ZWJwYWNrOi8vY29sbGVjdGl2ZS1jbG90aC8uL3NyYy9qcy9tYXJrdXAvaGVhZGVyLmpzIiwid2VicGFjazovL2NvbGxlY3RpdmUtY2xvdGgvLi9zcmMvY29tcG9uZW50cy9jcmVhdGUtaGFtYnVyZ2VyL2NyZWF0ZS1oYW1idXJnZXIuanMiLCJ3ZWJwYWNrOi8vY29sbGVjdGl2ZS1jbG90aC8uL3NyYy91dGlsaXRpZXMvbWFya2Rvd24vY3JlYXRlLW5hdi5qcyIsIndlYnBhY2s6Ly9jb2xsZWN0aXZlLWNsb3RoLy4vc3JjL2pzL21hcmt1cC9jYWxsLXRvLWFjdGlvbi5qcyIsIndlYnBhY2s6Ly9jb2xsZWN0aXZlLWNsb3RoLy4vc3JjL2pzL21hcmt1cC9jb25uZWN0aW9ucy5qcyIsIndlYnBhY2s6Ly9jb2xsZWN0aXZlLWNsb3RoLy4vc3JjL2pzL21hcmt1cC93aG8tYXJlLXdlLmpzIiwid2VicGFjazovL2NvbGxlY3RpdmUtY2xvdGgvLi9zcmMvanMvbWFya3VwL2hvdy1kb2VzLWl0LXdvcmsuanMiLCJ3ZWJwYWNrOi8vY29sbGVjdGl2ZS1jbG90aC8uL3NyYy9qcy9tYXJrdXAvc3RhcnQtdGhlLXByb2Nlc3MuanMiLCJ3ZWJwYWNrOi8vY29sbGVjdGl2ZS1jbG90aC8uL3NyYy9qcy9tYXJrdXAvZm9vdGVyLmpzIiwid2VicGFjazovL2NvbGxlY3RpdmUtY2xvdGgvLi9zcmMvanMvbWFya3VwL2NyZWF0ZS1yZXNwb25zZS5tb2RhbC5qcyIsIndlYnBhY2s6Ly9jb2xsZWN0aXZlLWNsb3RoLy4vc3JjL2pzL21ldGEvaGFuZGxlLWluaXRpYWwtZG9tLWludGVyYWN0aXZpdHkuanMiLCJ3ZWJwYWNrOi8vY29sbGVjdGl2ZS1jbG90aC8uL3NyYy9qcy9tZXRhL2dldC1jb250cm9sbGVycy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBUaGUgcmVxdWlyZSBzY29wZVxudmFyIF9fd2VicGFja19yZXF1aXJlX18gPSB7fTtcblxuIiwiLy8gZGVmaW5lIGdldHRlciBmdW5jdGlvbnMgZm9yIGhhcm1vbnkgZXhwb3J0c1xuX193ZWJwYWNrX3JlcXVpcmVfXy5kID0gKGV4cG9ydHMsIGRlZmluaXRpb24pID0+IHtcblx0Zm9yKHZhciBrZXkgaW4gZGVmaW5pdGlvbikge1xuXHRcdGlmKF9fd2VicGFja19yZXF1aXJlX18ubyhkZWZpbml0aW9uLCBrZXkpICYmICFfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZXhwb3J0cywga2V5KSkge1xuXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIGtleSwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGRlZmluaXRpb25ba2V5XSB9KTtcblx0XHR9XG5cdH1cbn07IiwiLy8g8J+SrSBCb3RoIFN0dWZmXG4vLyDwn5KtIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbmZ1bmN0aW9uIGRzR2V0U2VsZWN0b3IoZWxlbWVudCkge1xuXHRyZXR1cm4gZWxlbWVudC5pZCA/IGAjJHtlbGVtZW50LmlkfWAgOiBlbGVtZW50LmNsYXNzTmFtZSA/IGAuJHtlbGVtZW50LmNsYXNzTmFtZS5zcGxpdCgnICcpLmpvaW4oJy4nKX1gIDogJ3NwZWNpZmllZCBlbGVtZW50Jztcbn1cblxuLy8g8J+SrSBjbG9zZUJ1dHRvblN0dWZmXG4vLyDwn5KtIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbmZ1bmN0aW9uIGluaXRpYWxpemVDbG9zZUJ1dHRvbihjbG9zZUJ1dHRvbikge1xuXHRjbG9zZUJ1dHRvbi5zZXRBdHRyaWJ1dGUoJ2FyaWEtbGFiZWwnLCAnQ2xvc2UgRGlhbG9nJyk7XG59XG5cbmZ1bmN0aW9uIGV4YW1pbmVDbG9zZUJ1dHRvbihjbG9zZUJ1dHRvbiwgc2VsZWN0b3IpIHtcblx0aWYgKCFjbG9zZUJ1dHRvbikgdGhyb3cgbmV3IEVycm9yKGBDbG9zZSBidXR0b24gbm90IGZvdW5kIGZvciB0aGUgbW9kYWwgZWxlbWVudDogJHtzZWxlY3Rvcn3igKYgRG91YmxlIGNoZWNrIHRvIGVuc3VyZSBpdCBoYXMgYSBjbGFzcyBvZiAnLmRzLWNsb3NlLWJ1dHRvbicuYCk7XG5cdGlmIChjbG9zZUJ1dHRvbi50YWdOYW1lICE9PSAnQlVUVE9OJykgdGhyb3cgbmV3IEVycm9yKGBUaGUgY2xvc2UgYnV0dG9uIGZvciB0aGUgbW9kYWwgZWxlbWVudDogJHtzZWxlY3Rvcn0gaXMgbm90IGEgYnV0dG9uIGVsZW1lbnQuYCk7XG59XG5cbi8vIPCfkq0gbW9kYWxTdHVmZlxuLy8g8J+SrSAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG5mdW5jdGlvbiB0b2dnbGVNb2RhbFN0YXRlKG1vZGFsU3RhdGUpIHtcblx0aWYgKCFtb2RhbFN0YXRlKSB0aHJvdyBuZXcgRXJyb3IoYEludmFsaWQgbW9kYWwgc3RhdGUgb2JqZWN0IHBhc3NlZCB0byB0b2dnbGVNb2RhbFN0YXRlIGZ1bmN0aW9uLmApO1xuXHRpZiAoIW1vZGFsU3RhdGUuY2xvc2VCdXR0b25TdGF0ZSkgdGhyb3cgbmV3IEVycm9yKGBJbnZhbGlkIGNsb3NlIGJ1dHRvbiBzdGF0ZSBvYmplY3QgcGFzc2VkIHRvIHRvZ2dsZU1vZGFsU3RhdGUgZnVuY3Rpb24uYCk7XG5cblx0bW9kYWxTdGF0ZS5saXN0ZW5lckF0dGFjaGVkID0gIW1vZGFsU3RhdGUubGlzdGVuZXJBdHRhY2hlZDtcblx0bW9kYWxTdGF0ZS5jbG9zZUJ1dHRvblN0YXRlLmxpc3RlbmVyQXR0YWNoZWQgPSAhbW9kYWxTdGF0ZS5jbG9zZUJ1dHRvblN0YXRlLmxpc3RlbmVyQXR0YWNoZWQ7XG59XG5cbmZ1bmN0aW9uIHRvZ2dsZU1vZGFsQXR0cmlidXRlcyhtb2RhbEVsZW1lbnQpIHtcblx0Y29uc3QgbW9kYWxPcGVuID0gbW9kYWxFbGVtZW50LmdldEF0dHJpYnV0ZSgnYXJpYS1oaWRkZW4nKSA9PT0gJ3RydWUnO1xuXG5cdGlmIChtb2RhbE9wZW4pIHtcblx0XHRtb2RhbEVsZW1lbnQuc2V0QXR0cmlidXRlKCdhcmlhLWhpZGRlbicsICdmYWxzZScpO1xuXHRcdG1vZGFsRWxlbWVudC5zZXRBdHRyaWJ1dGUoJ2FyaWEtbW9kYWwnLCAndHJ1ZScpO1xuXHR9IGVsc2Uge1xuXHRcdG1vZGFsRWxlbWVudC5zZXRBdHRyaWJ1dGUoJ2FyaWEtaGlkZGVuJywgJ3RydWUnKTtcblx0XHRtb2RhbEVsZW1lbnQuc2V0QXR0cmlidXRlKCdhcmlhLW1vZGFsJywgJ2ZhbHNlJyk7XG5cdH1cbn1cblxuZnVuY3Rpb24gaW5pdGlhbGl6ZUFzTW9kYWwobW9kYWxFbGVtZW50KSB7XG5cdG1vZGFsRWxlbWVudC5zZXRBdHRyaWJ1dGUoJ2FyaWEtbW9kYWwnLCAnZmFsc2UnKTtcblx0bW9kYWxFbGVtZW50LnNldEF0dHJpYnV0ZSgnYXJpYS1oaWRkZW4nLCAndHJ1ZScpO1xufVxuXG4vLyA+Pj4gZXhwb3J0c1xuLy8gPiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG5cbi8vIPCfkq0gY3JlYXRlRGlhbG9nQ29udHJvbGxlclxuLy8g8J+SrSAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4vKipcbiAqIENyZWF0ZXMgYSBjb250cm9sbGVyIG9iamVjdCBmb3IgbWFuYWdpbmcgYSBkaWFsb2cgZWxlbWVudCwgcHJvdmlkaW5nIG1ldGhvZHMgdG8gb3BlbiBhbmQgY2xvc2UgdGhlIGRpYWxvZy5cbiAqIFRoaXMgZnVuY3Rpb24gaW5pdGlhbGl6ZXMgdGhlIGRpYWxvZyBhcyBhIG1vZGFsLCBzZXRzIHVwIG5lY2Vzc2FyeSBhY2Nlc3NpYmlsaXR5IGF0dHJpYnV0ZXMsXG4gKiBhbmQgZW5zdXJlcyB0aGF0IHRoZSBkaWFsb2cgY2FuIGJlIHByb3Blcmx5IG1hbmFnZWQgdGhyb3VnaCBpdHMgbGlmZWN5Y2xlLlxuICpcbiAqIEl0cyBpbnRlbmRlZCB1c2UgaXMgdG8gcHJvdmlkZSBhIHNpbXBsZSB3YXkgdG8gbWFuYWdlIHRoZSB2aXNpYmlsaXR5IG9mIGEgZGlhbG9nIGVsZW1lbnQuXG4gKiBJdCBhYnN0cmFjdHMgb3V0IHRoZSBwZXNreSBhbmltYXRpbmcgaW4tYW5kLW91dCBjb251bmRydW0gb2YgbW9kYWwgZWxlbWVudHMgd2l0aCBhIENTUyBwcm9wZXJ0eSwgZGlzcGxheSBvZiBub25lICh0byBibG9jay9mbGV4L2dyaWQvZXRjLikuXG4gKiBTZWUgcmVhZG1lIGZvciBtb3JlIGluZm9ybWF0aW9uLlxuICogXG4gKiBAcGFyYW0ge0hUTUxFbGVtZW50fSBkaWFsb2dFbGVtZW50IC0gVGhlIEhUTUwgZGlhbG9nIGVsZW1lbnQgdG8gaW5pdGlhbGl6ZSBhcyBhIG1vZGFsLlxuICogQHJldHVybnMge09iamVjdH0gQW4gb2JqZWN0IGNvbnRhaW5pbmcgbWV0aG9kcyB0byBtYW5hZ2UgdGhlIGRpYWxvZydzIHZpc2liaWxpdHkgYW5kIHN0YXRlLlxuICogXG4gKiBAdGhyb3dzIHtFcnJvcn0gSWYgdGhlIHByb3ZpZGVkIGFyZ3VtZW50IGlzIGludmFsaWQuXG4gKiBAdGhyb3dzIHtFcnJvcn0gSWYgdGhlIHByb3ZpZGVkIGFyZ3VtZW50IGlzIG5vdCBhIHZhbGlkIEhUTUwgZWxlbWVudC5cbiAqIEB0aHJvd3Mge0Vycm9yfSBJZiB0aGUgcHJvdmlkZWQgYXJndW1lbnQgaXMgbm90IGEgdmFsaWQgSFRNTCA8ZGlhbG9nPiBlbGVtZW50LlxuICogQHRocm93cyB7RXJyb3J9IElmIHRoZSBkaWFsb2cgaXMgYWxyZWFkeSB2aXNpYmxlLlxuICogQHRocm93cyB7RXJyb3J9IElmIGEgbGlzdGVuZXIgaXMgYWxyZWFkeSBhdHRhY2hlZCB0byBkaWFsb2cuXG4gKiBAdGhyb3dzIHtFcnJvcn0gSWYgYSBsaXN0ZW5lciBpcyBhbHJlYWR5IGF0dGFjaGVkIHRvIGRpYWxvZydzIGNsb3NlIGJ1dHRvbi5cbiAqIFxuICogQGV4YW1wbGVcbiAqID8gQXNzdW1lICdteURpYWxvZycgaXMgYSBET00gZWxlbWVudCByZXByZXNlbnRpbmcgdGhlIGRpYWxvZy5cbiAqIGNvbnN0IGRpYWxvZ0NvbnRyb2xsZXIgPSBjcmVhdGVEaWFsb2dDb250cm9sbGVyKG15RGlhbG9nKTtcbiAqIFxuICogPyBUbyBvcGVuIHRoZSBkaWFsb2dcbiAqIGRpYWxvZ0NvbnRyb2xsZXIub3BlbkRpYWxvZygpO1xuICogXG4gKiA/IFRvIGNsb3NlIHRoZSBkaWFsb2dcbiAqIGRpYWxvZ0NvbnRyb2xsZXIuY2xvc2VEaWFsb2coKTtcbiAqL1xuXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlRGlhbG9nQ29udHJvbGxlcihkaWFsb2dFbGVtZW50KSB7XG5cblx0ZnVuY3Rpb24gZXhhbWluZUFyZ3VtZW50T25DYWxsKGRpYWxvZ0VsZW1lbnQpIHtcblx0XHRpZiAoIWRpYWxvZ0VsZW1lbnQpIHRocm93IG5ldyBFcnJvcihgSW52YWxpZCBhcmd1bWVudCBwYXNzZWQgdG8gY3JlYXRlRGlhbG9nQ29udHJvbGxlciBmdW5jdGlvbi5gKTtcblx0XHRpZiAoIShkaWFsb2dFbGVtZW50IGluc3RhbmNlb2YgSFRNTEVsZW1lbnQpKSB0aHJvdyBuZXcgRXJyb3IoYFRoZSBwcm92aWRlZCBhcmd1bWVudCBpcyBub3QgYSB2YWxpZCBIVE1MIGVsZW1lbnQuYCk7XG5cdFx0aWYgKGRpYWxvZ0VsZW1lbnQudGFnTmFtZSAhPT0gJ0RJQUxPRycpIHRocm93IG5ldyBFcnJvcihgVGhlIGVsZW1lbnQgeW91IHBhc3NlZCBpbiBpcyBub3QgYSBkaWFsb2cgZWxlbWVudC5gKTtcblx0fVxuXG5cdC8vIPCflLQgY2hlY2tQb2ludFxuXHRleGFtaW5lQXJndW1lbnRPbkNhbGwoZGlhbG9nRWxlbWVudCk7IFxuXHQvLyDwn5+iIGNsZWFyZWRTdWNjZXNzZnVsbHkgIVxuXG5cdGluaXRpYWxpemVBc01vZGFsKGRpYWxvZ0VsZW1lbnQpOyBcblxuXHRjb25zdCBkaWFsb2dTZWxlY3RvciA9IGRzR2V0U2VsZWN0b3IoZGlhbG9nRWxlbWVudCk7XG5cdGNvbnN0IGNsb3NlQnV0dG9uID0gZGlhbG9nRWxlbWVudC5xdWVyeVNlbGVjdG9yKCcuZHMtY2xvc2UtYnV0dG9uJyk7XG5cblx0ZXhhbWluZUNsb3NlQnV0dG9uKGNsb3NlQnV0dG9uLCBkaWFsb2dTZWxlY3Rvcik7XG5cdGluaXRpYWxpemVDbG9zZUJ1dHRvbihjbG9zZUJ1dHRvbik7XG5cblx0bGV0IGRpYWxvZ1N0YXRlID0ge1xuXHRcdGxpc3RlbmVyQXR0YWNoZWQ6IGZhbHNlLFxuXHRcdGNsb3NlQnV0dG9uU3RhdGU6IHtcblx0XHRcdGxpc3RlbmVyQXR0YWNoZWQ6IGZhbHNlLFxuXHRcdH1cblx0fTtcblxuXHRjb25zdCBzYW5pdGl6ZURpYWxvZyA9ICgpID0+IHtcblx0XHRkaWFsb2dFbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUoJ2Nsb3NpbmcnKTtcblx0XHRkaWFsb2dFbGVtZW50LmNsb3NlKCk7XG5cblx0XHR0b2dnbGVNb2RhbEF0dHJpYnV0ZXMoZGlhbG9nRWxlbWVudCk7XG5cblx0XHRjbG9zZUJ1dHRvbi5yZW1vdmVFdmVudExpc3RlbmVyKCdjbGljaycsIGNsb3NlRGlhbG9nKTtcblx0XHRkaWFsb2dFbGVtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2FuaW1hdGlvbmVuZCcsIHNhbml0aXplRGlhbG9nKTtcblxuXHRcdHRvZ2dsZU1vZGFsU3RhdGUoZGlhbG9nU3RhdGUpO1xuXHR9XG5cblx0Y29uc3QgY2xvc2VEaWFsb2cgPSAoKSA9PiB7XG5cdFx0ZGlhbG9nRWxlbWVudC5jbGFzc0xpc3QuYWRkKCdjbG9zaW5nJyk7XG5cdFx0ZGlhbG9nRWxlbWVudC5hZGRFdmVudExpc3RlbmVyKCdhbmltYXRpb25lbmQnLCBzYW5pdGl6ZURpYWxvZyk7XG5cdH1cblxuXHRjb25zdCBpbnNwZWN0RGlhbG9nID0gKCkgPT4ge1xuXHRcdGlmIChkaWFsb2dFbGVtZW50Lm9wZW4pIHRocm93IG5ldyBFcnJvcihgVGhlIGZvbGxvd2luZyBkaWFsb2cgaXMgYWxyZWFkeSBvcGVuOiAke2RpYWxvZ1NlbGVjdG9yfS5gKTtcblx0XHRpZiAoZGlhbG9nU3RhdGUubGlzdGVuZXJBdHRhY2hlZCkgdGhyb3cgbmV3IEVycm9yKGBBIGxpc3RlbmVyIGlzIGFscmVhZHkgYXR0YWNoZWQgdG8gdGhpcyBkaWFsb2cgZWxlbWVudDogJHtkaWFsb2dTZWxlY3Rvcn0uYCk7XG5cdFx0aWYgKGRpYWxvZ1N0YXRlLmNsb3NlQnV0dG9uU3RhdGUubGlzdGVuZXJBdHRhY2hlZCkgdGhyb3cgbmV3IEVycm9yKGBBIGxpc3RlbmVyIGlzIGFscmVhZHkgYXR0YWNoZWQgdG8gdGhlIGNsb3NlIGJ1dHRvbiBvZiB0aGUgZGlhbG9nIGVsZW1lbnQ6ICR7ZGlhbG9nU2VsZWN0b3J9LmApO1xuXHR9XG5cblx0Y29uc3Qgb3BlbkRpYWxvZyA9ICgpID0+IHtcblx0XHQvLyDwn5S0IGNoZWNrUG9pbnRcblx0XHRpbnNwZWN0RGlhbG9nKCk7IFxuXHRcdC8vIPCfn6IgY2xlYXJlZFN1Y2Nlc3NmdWxseSAhXG5cblx0XHRkaWFsb2dFbGVtZW50LnNob3dNb2RhbCgpO1xuXHRcblx0XHR0b2dnbGVNb2RhbEF0dHJpYnV0ZXMoZGlhbG9nRWxlbWVudCk7XG5cdFx0Y2xvc2VCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBjbG9zZURpYWxvZyk7XG5cblx0XHR0b2dnbGVNb2RhbFN0YXRlKGRpYWxvZ1N0YXRlKTtcblx0fVxuXG5cdHJldHVybiB7XG5cdFx0b3BlbkRpYWxvZyxcblx0XHRjbG9zZURpYWxvZ1xuXHR9XG59XG5cbi8vIPCfkq0gY3JlYXRlTGlnaHRib3hDb250cm9sbGVyXG4vLyDwn5KtIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbi8qKlxuICogQ3JlYXRlcyBhIGNvbnRyb2xsZXIgb2JqZWN0IGZvciBtYW5hZ2luZyBhbnkgZWxlbWVudCB3aXRoIG1vZGFsLWxpa2UgZnVuY3Rpb25hbGl0eSwgcHJvdmlkaW5nIG1ldGhvZHMgdG8gJ29wZW4nIGFuZCAnY2xvc2UnIHRoZSBsaWdodGJveC5cbiAqIFRoaXMgZnVuY3Rpb24gaW5pdGlhbGl6ZXMgdGhlIGxpZ2h0Ym94IGFzIGEgbW9kYWwsIHNldHMgdXAgbmVjZXNzYXJ5IGFjY2Vzc2liaWxpdHkgYXR0cmlidXRlcyxcbiAqIGFuZCBlbnN1cmVzIHRoYXQgdGhlIGxpZ2h0Ym94IGNhbiBiZSBwcm9wZXJseSBtYW5hZ2VkIHRocm91Z2ggaXRzIGxpZmVjeWNsZS5cbiAqIFxuICogSXRzIGludGVuZGVkIHVzZSBpcyB0byBwcm92aWRlIGEgc2ltcGxlIHdheSB0byBtYW5hZ2UgdGhlIHZpc2liaWxpdHkgb2YgYSBsaWdodGJveCBlbGVtZW50LlxuICogSXQgYWJzdHJhY3RzIG91dCB0aGUgcGVza3kgYW5pbWF0aW5nIGluLWFuZC1vdXQgY29udW5kcnVtIG9mIG1vZGFsLWxpa2UgZWxlbWVudHMgd2l0aCBhIENTUyBwcm9wZXJ0eSwgZGlzcGxheSBvZiBub25lICh0byBibG9jay9mbGV4L2dyaWQvZXRjLikuXG4gKiBTZWUgcmVhZG1lIGZvciBtb3JlIGluZm9ybWF0aW9uLlxuICpcbiAqIEBwYXJhbSB7SFRNTEVsZW1lbnR9IGxpZ2h0Ym94RWxlbWVudCAtIEFueSBIVE1MIGNvbnRhaW5lciBlbGVtZW50IChpZS4sIDxkaXY+KSB0byBpbml0aWFsaXplIGFzIGEgbW9kYWwuXG4gKiBAcmV0dXJucyB7T2JqZWN0fSBBbiBvYmplY3QgY29udGFpbmluZyBtZXRob2RzIHRvIG1hbmFnZSB0aGUgbGlnaHRib3hlcydzIHZpc2liaWxpdHkgYW5kIHN0YXRlLlxuICogXG4gKiBAdGhyb3dzIHtFcnJvcn0gSWYgdGhlIHByb3ZpZGVkIGFyZ3VtZW50IGlzIGludmFsaWQuXG4gKiBAdGhyb3dzIHtFcnJvcn0gSWYgdGhlIHByb3ZpZGVkIGFyZ3VtZW50IGlzIG5vdCBhIHZhbGlkIEhUTUwgZWxlbWVudC5cbiAqIEB0aHJvd3Mge0Vycm9yfSBJZiB0aGUgbGlnaHRib3ggaXMgYWxyZWFkeSB2aXNpYmxlLlxuICogQHRocm93cyB7RXJyb3J9IElmIGEgbGlzdGVuZXIgaXMgYWxyZWFkeSBhdHRhY2hlZCB0byBsaWdodGJveC5cbiAqIEB0aHJvd3Mge0Vycm9yfSBJZiBhIGxpc3RlbmVyIGlzIGFscmVhZHkgYXR0YWNoZWQgdG8gbGlnaHRib3gncyBjbG9zZSBidXR0b24uXG4gKiBcbiAqIEBleGFtcGxlXG4gKiA/IEFzc3VtZSAnbXlMaWdodGJveCcgaXMgYSBET00gZWxlbWVudCByZXByZXNlbnRpbmcgdGhlIGRpYWxvZy5cbiAqIGNvbnN0IGxpZ2h0Qm94Q29udHJvbGxlciA9IGNyZWF0ZUxpZ2h0Ym94Q29udHJvbGxlcihteUxpZ2h0Ym94KTtcbiAqIFxuICogPyBUbyBvcGVuIHRoZSBsaWdodGJveFxuICogbGlnaHRCb3hDb250cm9sbGVyLm9wZW5MaWdodGJveCgpO1xuICogXG4gKiA/IFRvIGNsb3NlIHRoZSBsaWdodGJveFxuICogbGlnaHRCb3hDb250cm9sbGVyLmNsb3NlTGlnaHRib3goKTtcbiAqIFxuICovXG5cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVMaWdodGJveENvbnRyb2xsZXIobGlnaHRib3hFbGVtZW50KSB7XG5cblx0ZnVuY3Rpb24gZXhhbWluZUFyZ3VtZW50T25DYWxsKCkge1xuXHRcdGlmICghbGlnaHRib3hFbGVtZW50KSB0aHJvdyBuZXcgRXJyb3IoYEludmFsaWQgYXJndW1lbnQgcGFzc2VkIHRvIGNyZWF0ZURpYWxvZ0NvbnRyb2xsZXIgZnVuY3Rpb24uYCk7XG5cdFx0aWYgKCEobGlnaHRib3hFbGVtZW50IGluc3RhbmNlb2YgSFRNTEVsZW1lbnQpKSB0aHJvdyBuZXcgRXJyb3IoYFRoZSBwcm92aWRlZCBhcmd1bWVudCBpcyBub3QgYSB2YWxpZCBIVE1MIGVsZW1lbnQuYCk7XG5cdH1cblxuXHQvLyDwn5S0IGNoZWNrUG9pbnRcblx0ZXhhbWluZUFyZ3VtZW50T25DYWxsKCk7IC8vICEgY2hlY2tQb2ludFxuXHQvLyDwn5+iIGNsZWFyZWRTdWNjZXNzZnVsbHkgIVxuXG5cdGluaXRpYWxpemVBc01vZGFsKGxpZ2h0Ym94RWxlbWVudCk7XG5cblx0Y29uc3QgbGlnaHRCb3hTZWxlY3RvciA9IGRzR2V0U2VsZWN0b3IobGlnaHRib3hFbGVtZW50KTtcblx0Y29uc3QgY2xvc2VCdXR0b24gPSBsaWdodGJveEVsZW1lbnQucXVlcnlTZWxlY3RvcignLmRzLWNsb3NlLWJ1dHRvbicpO1xuXG5cdGV4YW1pbmVDbG9zZUJ1dHRvbihjbG9zZUJ1dHRvbiwgbGlnaHRCb3hTZWxlY3Rvcik7XG5cdGluaXRpYWxpemVDbG9zZUJ1dHRvbihjbG9zZUJ1dHRvbik7XG5cblx0bGV0IGxpZ2h0Ym94U3RhdGUgPSB7XG5cdFx0bGlzdGVuZXJBdHRhY2hlZDogZmFsc2UsXG5cdFx0Y2xvc2VCdXR0b25TdGF0ZToge1xuXHRcdFx0bGlzdGVuZXJBdHRhY2hlZDogZmFsc2UsXG5cdFx0fVxuXHR9O1xuXG5cdGNvbnN0IGNsZWFuTGlnaHRCb3ggPSAoKSA9PiB7XG5cdFx0bGlnaHRib3hFbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUoJ2Nsb3NpbmcnKTtcblx0XHRsaWdodGJveEVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZSgndmlzaWJsZScpO1xuXG5cdFx0dG9nZ2xlTW9kYWxBdHRyaWJ1dGVzKGxpZ2h0Ym94RWxlbWVudCk7XG5cdFx0XG5cdFx0Y2xvc2VCdXR0b24ucmVtb3ZlRXZlbnRMaXN0ZW5lcignY2xpY2snLCBjbG9zZUxpZ2h0Ym94KTtcblx0XHRsaWdodGJveEVsZW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcignYW5pbWF0aW9uZW5kJywgY2xlYW5MaWdodEJveCk7XG5cblx0XHR0b2dnbGVNb2RhbFN0YXRlKGxpZ2h0Ym94U3RhdGUpO1xuXHR9XG5cblx0Y29uc3QgY2xvc2VMaWdodGJveCA9ICgpID0+IHtcblx0XHRsaWdodGJveEVsZW1lbnQuY2xhc3NMaXN0LmFkZCgnY2xvc2luZycpO1xuXHRcdGxpZ2h0Ym94RWxlbWVudC5hZGRFdmVudExpc3RlbmVyKCdhbmltYXRpb25lbmQnLCBjbGVhbkxpZ2h0Qm94KTtcblx0fVxuXG5cdGNvbnN0IGluc3BlY3RMaWdodGJveCA9ICgpID0+IHtcblx0XHRpZiAobGlnaHRib3hFbGVtZW50LmNsYXNzTGlzdC5jb250YWlucygndmlzaWJsZScpKSB0aHJvdyBuZXcgRXJyb3IoYFRoZSBmb2xsb3dpbmcgbGlnaHRib3ggaXMgYWxyZWFkeSB2aXNpYmxlOiAke2xpZ2h0Qm94U2VsZWN0b3J9LmApO1xuXHRcdGlmIChsaWdodGJveFN0YXRlLmxpc3RlbmVyQXR0YWNoZWQpIHRocm93IG5ldyBFcnJvcihgQSBsaXN0ZW5lciBpcyBhbHJlYWR5IGF0dGFjaGVkIHRvIHRoZSBsaWdodGJveCBlbGVtZW50OiAke2xpZ2h0Qm94U2VsZWN0b3J9LmApO1xuXHRcdGlmIChsaWdodGJveFN0YXRlLmNsb3NlQnV0dG9uU3RhdGUubGlzdGVuZXJBdHRhY2hlZCkgdGhyb3cgbmV3IEVycm9yKGBBIGxpc3RlbmVyIGlzIGFscmVhZHkgYXR0YWNoZWQgdG8gdGhlIGNsb3NlIGJ1dHRvbiBvZiB0aGUgbGlnaHRib3g6ICR7bGlnaHRCb3hTZWxlY3Rvcn0uYCk7XG5cdH1cblxuXHRjb25zdCBvcGVuTGlnaHRib3ggPSAoKSA9PiB7XG5cdFx0Ly8g8J+UtCBjaGVja1BvaW50XG5cdFx0aW5zcGVjdExpZ2h0Ym94KCk7XG5cdFx0Ly8g8J+foiBjbGVhcmVkU3VjY2Vzc2Z1bGx5ICFcblx0XHRcblx0XHRsaWdodGJveEVsZW1lbnQuY2xhc3NMaXN0LmFkZCgndmlzaWJsZScpO1xuXG5cdFx0dG9nZ2xlTW9kYWxBdHRyaWJ1dGVzKGxpZ2h0Ym94RWxlbWVudCk7XG5cdFx0Y2xvc2VCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBjbG9zZUxpZ2h0Ym94KTtcblxuXHRcdHRvZ2dsZU1vZGFsU3RhdGUobGlnaHRib3hTdGF0ZSk7XG5cdH1cblxuXHRyZXR1cm4ge1xuXHRcdG9wZW5MaWdodGJveCxcblx0XHRjbG9zZUxpZ2h0Ym94XG5cdH1cbn1cblxuLy8g8J+SrSAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4vLyA/IEZ1biBmYWN0OiBcbi8vID8gTGlnaHRib3hlcyBhcmUgbmFtZWQgYWZ0ZXIgdGhlIGxpZ2h0Ym94IHRoYXQgcGhvdG9ncmFwaGVycyB1c2UgdG8gdmlldyBzbGlkZXMuXG4vLyA/IFRoZXkgYXJlIGFsc28gYSBmYW5jaWVyIHdheSB0byBzYXkgJ21vZGFsJyBpbiB0aGlzIHJlYWxtLlxuIiwiZXhwb3J0IGZ1bmN0aW9uIGhhbmRsZVRhcmdldFNjcm9sbChlKSB7XG4gIGUucHJldmVudERlZmF1bHQoKTtcbiAgY29uc3QgdGFyZ2V0SWQgPSB0aGlzLmdldEF0dHJpYnV0ZSgnaHJlZicpO1xuICBjb25zdCB0YXJnZXRFbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0YXJnZXRJZCk7XG5cbiAgaWYgKHRhcmdldEVsZW1lbnQpIHtcbiAgICBjb25zdCBoZWFkZXJIZWlnaHQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdoZWFkZXInKS5vZmZzZXRIZWlnaHQ7XG4gICAgY29uc3QgdGFyZ2V0UG9zaXRpb24gPSB0YXJnZXRFbGVtZW50LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLnRvcCArIHdpbmRvdy5zY3JvbGxZIC0gaGVhZGVySGVpZ2h0O1xuICAgIC8vID8gZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkgcmV0dXJucyB0aGUgc2l6ZSBvZiBhbiBlbGVtZW50IGFuZCBpdHMgcG9zaXRpb24gcmVsYXRpdmUgdG8gdGhlIHZpZXdwb3J0XG4gICAgLy8gPyAudG9wIHJldHVybnMgdGhlIGRpc3RhbmNlIGZyb20gdGhlIHRvcCBvZiB0aGUgdmlld3BvcnQgdG8gdGhlIHRvcCBvZiB0aGUgZWxlbWVudFxuICAgIC8vID8gd2luZG93LnNjcm9sbFkgcmV0dXJucyB0aGUgbnVtYmVyIG9mIHBpeGVscyB0aGF0IHRoZSBkb2N1bWVudCBoYXMgYWxyZWFkeSBiZWVuIHNjcm9sbGVkIHZlcnRpY2FsbHkgZnJvbSB0aGUgdG9wXG5cbiAgICB3aW5kb3cuc2Nyb2xsVG8oe1xuICAgICAgdG9wOiB0YXJnZXRQb3NpdGlvbixcbiAgICAgIGJlaGF2aW9yOiBcInNtb290aFwiXG4gICAgfSk7XG4gIH1cbn0iLCJmdW5jdGlvbiBjaGVja1RhcmdldEVsZW1lbnRFeGlzdGVuY2Uoc2VsZWN0b3IpIHtcbiAgY29uc3QgdGFyZ2V0RWxlbWVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3Ioc2VsZWN0b3IpO1xuICBcbiAgaWYgKCF0YXJnZXRFbGVtZW50KSB7XG4gICAgY29uc29sZS5lcnJvcihgRWxlbWVudCBub3QgZm91bmQgZm9yIHNlbGVjdG9yOiAke3NlbGVjdG9yfWApO1xuICAgIHJldHVybjtcbiAgfVxuXG4gIHJldHVybiB0YXJnZXRFbGVtZW50O1xufVxuXG5leHBvcnQgeyBjaGVja1RhcmdldEVsZW1lbnRFeGlzdGVuY2UgfTsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLmcgPSAoZnVuY3Rpb24oKSB7XG5cdGlmICh0eXBlb2YgZ2xvYmFsVGhpcyA9PT0gJ29iamVjdCcpIHJldHVybiBnbG9iYWxUaGlzO1xuXHR0cnkge1xuXHRcdHJldHVybiB0aGlzIHx8IG5ldyBGdW5jdGlvbigncmV0dXJuIHRoaXMnKSgpO1xuXHR9IGNhdGNoIChlKSB7XG5cdFx0aWYgKHR5cGVvZiB3aW5kb3cgPT09ICdvYmplY3QnKSByZXR1cm4gd2luZG93O1xuXHR9XG59KSgpOyIsIl9fd2VicGFja19yZXF1aXJlX18ubyA9IChvYmosIHByb3ApID0+IChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBwcm9wKSkiLCJ2YXIgc2NyaXB0VXJsO1xuaWYgKF9fd2VicGFja19yZXF1aXJlX18uZy5pbXBvcnRTY3JpcHRzKSBzY3JpcHRVcmwgPSBfX3dlYnBhY2tfcmVxdWlyZV9fLmcubG9jYXRpb24gKyBcIlwiO1xudmFyIGRvY3VtZW50ID0gX193ZWJwYWNrX3JlcXVpcmVfXy5nLmRvY3VtZW50O1xuaWYgKCFzY3JpcHRVcmwgJiYgZG9jdW1lbnQpIHtcblx0aWYgKGRvY3VtZW50LmN1cnJlbnRTY3JpcHQpXG5cdFx0c2NyaXB0VXJsID0gZG9jdW1lbnQuY3VycmVudFNjcmlwdC5zcmM7XG5cdGlmICghc2NyaXB0VXJsKSB7XG5cdFx0dmFyIHNjcmlwdHMgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZShcInNjcmlwdFwiKTtcblx0XHRpZihzY3JpcHRzLmxlbmd0aCkge1xuXHRcdFx0dmFyIGkgPSBzY3JpcHRzLmxlbmd0aCAtIDE7XG5cdFx0XHR3aGlsZSAoaSA+IC0xICYmICghc2NyaXB0VXJsIHx8ICEvXmh0dHAocz8pOi8udGVzdChzY3JpcHRVcmwpKSkgc2NyaXB0VXJsID0gc2NyaXB0c1tpLS1dLnNyYztcblx0XHR9XG5cdH1cbn1cbi8vIFdoZW4gc3VwcG9ydGluZyBicm93c2VycyB3aGVyZSBhbiBhdXRvbWF0aWMgcHVibGljUGF0aCBpcyBub3Qgc3VwcG9ydGVkIHlvdSBtdXN0IHNwZWNpZnkgYW4gb3V0cHV0LnB1YmxpY1BhdGggbWFudWFsbHkgdmlhIGNvbmZpZ3VyYXRpb25cbi8vIG9yIHBhc3MgYW4gZW1wdHkgc3RyaW5nIChcIlwiKSBhbmQgc2V0IHRoZSBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyB2YXJpYWJsZSBmcm9tIHlvdXIgY29kZSB0byB1c2UgeW91ciBvd24gbG9naWMuXG5pZiAoIXNjcmlwdFVybCkgdGhyb3cgbmV3IEVycm9yKFwiQXV0b21hdGljIHB1YmxpY1BhdGggaXMgbm90IHN1cHBvcnRlZCBpbiB0aGlzIGJyb3dzZXJcIik7XG5zY3JpcHRVcmwgPSBzY3JpcHRVcmwucmVwbGFjZSgvIy4qJC8sIFwiXCIpLnJlcGxhY2UoL1xcPy4qJC8sIFwiXCIpLnJlcGxhY2UoL1xcL1teXFwvXSskLywgXCIvXCIpO1xuX193ZWJwYWNrX3JlcXVpcmVfXy5wID0gc2NyaXB0VXJsOyIsIi8vICogVVRJTElUSUVTXG5pbXBvcnQgeyBjaGVja1RhcmdldEVsZW1lbnRFeGlzdGVuY2UgfSBmcm9tICcuLi8uLi91dGlsaXRpZXMvY2hlY2stdGFyZ2V0LWVsZW1lbnQtZXhpc3RlbmNlLmpzJztcblxuLy8gPiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuY29uc3QgbmF2U3RhdGUgPSB7XG4gIGFuaW1hdGluZzogZmFsc2UsXG59O1xuXG5mdW5jdGlvbiB0b2dnbGVOYXZWaXNpYmlsaXR5KGlzTmF2VG9nZ2xlQWN0aXZlKSB7XG4gIGNvbnN0IG5hdiA9IGNoZWNrVGFyZ2V0RWxlbWVudEV4aXN0ZW5jZSgnbmF2Jyk7XG5cbiAgaWYgKCFpc05hdlRvZ2dsZUFjdGl2ZSkge1xuICAgIG5hdi5jbGFzc0xpc3QuYWRkKCdleHBhbmRlZCcpO1xuICAgIG5hdlN0YXRlLmFuaW1hdGluZyA9IHRydWU7XG4gIH0gZWxzZSBpZiAoaXNOYXZUb2dnbGVBY3RpdmUpIHtcbiAgICBuYXYuY2xhc3NMaXN0LnJlbW92ZSgnZXhwYW5kZWQnKTtcbiAgICBuYXZTdGF0ZS5hbmltYXRpbmcgPSBmYWxzZTtcbiAgfVxufVxuXG5mdW5jdGlvbiBoYW5kbGVOYXZUb2dnbGVCdXR0b24oKSB7XG4gIGNvbnN0IG5hdlRvZ2dsZUJ1dHRvbiA9IGNoZWNrVGFyZ2V0RWxlbWVudEV4aXN0ZW5jZSgnLm5hdi10b2dnbGUtYnV0dG9uJyk7XG4gIGNvbnN0IGlzTmF2VG9nZ2xlQWN0aXZlID0gbmF2VG9nZ2xlQnV0dG9uLmNsYXNzTGlzdC5jb250YWlucygnYWN0aXZlJyk7XG5cbiAgaWYgKCFpc05hdlRvZ2dsZUFjdGl2ZSkge1xuICAgIGlmIChuYXZTdGF0ZS5hbmltYXRpbmcgPT09IHRydWUpIHJldHVybjtcblxuICAgIG5hdlRvZ2dsZUJ1dHRvbi5jbGFzc0xpc3QuYWRkKCdhY3RpdmUnKTtcblxuICAgIG5hdlRvZ2dsZUJ1dHRvbi5zZXRBdHRyaWJ1dGUoJ2FyaWEtbGFiZWwnLCAnQ2xvc2UgTmF2aWdhdGlvbiBNZW51Jyk7XG4gICAgbmF2VG9nZ2xlQnV0dG9uLnNldEF0dHJpYnV0ZSgnYXJpYS1leHBhbmRlZCcsIHRydWUpO1xuXG4gICAgdG9nZ2xlTmF2VmlzaWJpbGl0eShpc05hdlRvZ2dsZUFjdGl2ZSk7XG5cbiAgfSBlbHNlIHtcbiAgICBuYXZUb2dnbGVCdXR0b24uY2xhc3NMaXN0LnJlbW92ZSgnYWN0aXZlJyk7XG5cbiAgICBuYXZUb2dnbGVCdXR0b24uc2V0QXR0cmlidXRlKCdhcmlhLWxhYmVsJywgJ09wZW4gTmF2aWdhdGlvbiBNZW51Jyk7XG4gICAgbmF2VG9nZ2xlQnV0dG9uLnNldEF0dHJpYnV0ZSgnYXJpYS1leHBhbmRlZCcsIGZhbHNlKTtcblxuICAgIHRvZ2dsZU5hdlZpc2liaWxpdHkoaXNOYXZUb2dnbGVBY3RpdmUpO1xuICB9XG5cbiAgbmF2VG9nZ2xlQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgaGFuZGxlTmF2VG9nZ2xlQnV0dG9uKTtcbn1cblxuZXhwb3J0IHsgaGFuZGxlTmF2VG9nZ2xlQnV0dG9uIH07XG4iLCJsZXQgc2xpZGVJbmRleCA9IDE7XG5sZXQgaXNTbGlkZVRyYW5zaXRpb25pbmcgPSBmYWxzZTtcblxuLy8gPyBOZXh0L3ByZXZpb3VzIGNvbnRyb2xzXG5mdW5jdGlvbiBwbHVzU2xpZGVzKGluZGV4KSB7XG4gIHNob3dTbGlkZXMoc2xpZGVJbmRleCArPSBpbmRleCk7XG59XG5cbi8vID8gVGh1bWJuYWlsIGltYWdlIGNvbnRyb2xzXG5mdW5jdGlvbiBjdXJyZW50U2xpZGUoaW5kZXgpIHtcbiAgc2hvd1NsaWRlcyhzbGlkZUluZGV4ID0gaW5kZXgpO1xufVxuXG5mdW5jdGlvbiBzZXROZXdBY3RpdmVTbGlkZSgpIHtcbiAgY29uc3QgY2Fyb3VzZWxTbGlkZXMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcuY2Fyb3VzZWwtc2xpZGUnKTtcbiAgY29uc3QgY2Fyb3VzZWxOYXZpZ2F0aW9uQnV0dG9ucyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXG4gICAgJy5jYXJvdXNlbC1uYXZpZ2F0aW9uLWJ1dHRvbidcbiAgKTtcblxuICBjYXJvdXNlbFNsaWRlc1tzbGlkZUluZGV4IC0gMV0uY2xhc3NMaXN0LmFkZCgnYWN0aXZlJyk7XG4gIGNhcm91c2VsTmF2aWdhdGlvbkJ1dHRvbnNbc2xpZGVJbmRleCAtIDFdLmNsYXNzTGlzdC5hZGQoJ2FjdGl2ZScpO1xufVxuXG5mdW5jdGlvbiBkZWFjdGl2YXRlQ3VycmVudE5hdmlnYXRpb25CdXR0b24oKSB7XG4gIGNvbnN0IGFjdGl2ZUNhcm91c2VsTmF2aWdhdGlvbkJ1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5jYXJvdXNlbC1uYXZpZ2F0aW9uLWJ1dHRvbi5hY3RpdmUnKTtcbiAgYWN0aXZlQ2Fyb3VzZWxOYXZpZ2F0aW9uQnV0dG9uLmNsYXNzTGlzdC5yZW1vdmUoJ2FjdGl2ZScpO1xufVxuXG5mdW5jdGlvbiBzZXREZWFjdGl2YXRlZFNsaWRlVG9EaXNwbGF5Tm9uZShkZWFjdGl2YXRpbmdDYXJvdXNlbFNsaWRlKSB7XG4gIGRlYWN0aXZhdGluZ0Nhcm91c2VsU2xpZGUuY2xhc3NMaXN0LnJlbW92ZSgnZGVhY3RpdmF0aW5nJywgJ2FjdGl2ZScpO1xuICBpc1NsaWRlVHJhbnNpdGlvbmluZyA9IGZhbHNlO1xuXG4gIGRlYWN0aXZhdGluZ0Nhcm91c2VsU2xpZGUucmVtb3ZlRXZlbnRMaXN0ZW5lcignYW5pbWF0aW9uZW5kJywgZGVhY3RpdmF0aW5nQ2Fyb3VzZWxTbGlkZS5zZXREZWFjdGl2YXRlZFNsaWRlVG9EaXNwbGF5Tm9uZVJlZik7XG59XG5cbmZ1bmN0aW9uIGFkZFNsaWRlQW5pbWF0aW9uRW5kTGlzdGVuZXIoZGVhY3RpdmF0aW5nQ2Fyb3VzZWxTbGlkZSkge1xuICBkZWFjdGl2YXRpbmdDYXJvdXNlbFNsaWRlLnNldERlYWN0aXZhdGVkU2xpZGVUb0Rpc3BsYXlOb25lUmVmID0gZnVuY3Rpb24gKCkge1xuICAgIHNldERlYWN0aXZhdGVkU2xpZGVUb0Rpc3BsYXlOb25lKGRlYWN0aXZhdGluZ0Nhcm91c2VsU2xpZGUpO1xuICB9O1xuXG4gIGRlYWN0aXZhdGluZ0Nhcm91c2VsU2xpZGUuYWRkRXZlbnRMaXN0ZW5lcignYW5pbWF0aW9uZW5kJywgZGVhY3RpdmF0aW5nQ2Fyb3VzZWxTbGlkZS5zZXREZWFjdGl2YXRlZFNsaWRlVG9EaXNwbGF5Tm9uZVJlZik7XG59XG5cbmZ1bmN0aW9uIGRlYWN0aXZhdGVDdXJyZW50U2xpZGUoKSB7ICBcbiAgY29uc3QgYWN0aXZlQ2Fyb3VzZWxTbGlkZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5jYXJvdXNlbC1zbGlkZS5hY3RpdmUnKTtcbiAgYWN0aXZlQ2Fyb3VzZWxTbGlkZS5jbGFzc0xpc3QuYWRkKCdkZWFjdGl2YXRpbmcnKTtcbiAgaXNTbGlkZVRyYW5zaXRpb25pbmcgPSB0cnVlO1xuXG4gIGFkZFNsaWRlQW5pbWF0aW9uRW5kTGlzdGVuZXIoYWN0aXZlQ2Fyb3VzZWxTbGlkZSk7XG59XG5cbmZ1bmN0aW9uIHJlc2V0U2xpZGVJbmRleChjYXJvdXNlbFNsaWRlc0xlbmd0aCwgaW5kZXgpIHtcbiAgLy8gPyByZXNldCB0byBmaXJzdCBzbGlkZSBpZiBjbGlja2VkIG9uIG5leHQgZnJvbSBsYXN0IHNsaWRlXG4gIGlmIChpbmRleCA+IGNhcm91c2VsU2xpZGVzTGVuZ3RoKSB7XG4gICAgc2xpZGVJbmRleCA9IDE7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLy8gPyByZXNldCB0byBsYXN0IHNsaWRlIGlmIGNsaWNrZWQgb24gcHJldmlvdXMgZnJvbSBmaXJzdCBzbGlkZVxuICBpZiAoaW5kZXggPCAxKSB7XG4gICAgc2xpZGVJbmRleCA9IGNhcm91c2VsU2xpZGVzTGVuZ3RoO1xuICAgIHJldHVybjtcbiAgfVxufVxuXG5mdW5jdGlvbiBzaG93U2xpZGVzKGluZGV4KSB7XG4gIGNvbnN0IGNhcm91c2VsU2xpZGVzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLmNhcm91c2VsLXNsaWRlJyk7XG4gIGNvbnN0IGNhcm91c2VsTmF2aWdhdGlvbkJ1dHRvbnMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFxuICAgICcuY2Fyb3VzZWwtbmF2aWdhdGlvbi1idXR0b24nXG4gICk7XG5cbiAgcmVzZXRTbGlkZUluZGV4KGNhcm91c2VsU2xpZGVzLmxlbmd0aCwgaW5kZXgpO1xuICBkZWFjdGl2YXRlQ3VycmVudFNsaWRlKCk7XG4gIGRlYWN0aXZhdGVDdXJyZW50TmF2aWdhdGlvbkJ1dHRvbigpO1xuICBzZXROZXdBY3RpdmVTbGlkZShjYXJvdXNlbFNsaWRlcywgY2Fyb3VzZWxOYXZpZ2F0aW9uQnV0dG9ucyk7XG59XG5cbmV4cG9ydCB7IHNob3dTbGlkZXMsIHBsdXNTbGlkZXMsIGN1cnJlbnRTbGlkZSwgc2xpZGVJbmRleCwgaXNTbGlkZVRyYW5zaXRpb25pbmd9OyIsImltcG9ydCB7XG4gIHBsdXNTbGlkZXMsXG4gIHNsaWRlSW5kZXgsXG4gIGN1cnJlbnRTbGlkZSxcbiAgaXNTbGlkZVRyYW5zaXRpb25pbmdcbn0gZnJvbSAnLi9jYXJvdXNlbC1sb2dpYy5qcyc7XG5cbi8vID4gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuZnVuY3Rpb24gdXBkYXRlUm9vdEFuaW1hdGlvblByb3BlcnR5KHJvb3RFbGVtZW50LCBkaXJlY3Rpb24pIHtcbiAgaWYgKGRpcmVjdGlvbiA9PT0gJ2xlZnQnKSB7XG4gICAgcm9vdEVsZW1lbnQuc3R5bGUuc2V0UHJvcGVydHkoJy0tZmFkZS1pbicsICd2YXIoLS1sZWZ0LWZhZGUtaW4tYW5pbWF0aW9uKScpO1xuICAgIHJvb3RFbGVtZW50LnN0eWxlLnNldFByb3BlcnR5KCctLWZhZGUtb3V0JywgJ3ZhcigtLWxlZnQtZmFkZS1vdXQtYW5pbWF0aW9uKScpO1xuICB9IGVsc2UgaWYgKGRpcmVjdGlvbiA9PT0gJ3JpZ2h0Jykge1xuICAgIHJvb3RFbGVtZW50LnN0eWxlLnNldFByb3BlcnR5KCctLWZhZGUtaW4nLCAndmFyKC0tcmlnaHQtZmFkZS1pbi1hbmltYXRpb24pJyk7XG4gICAgcm9vdEVsZW1lbnQuc3R5bGUuc2V0UHJvcGVydHkoJy0tZmFkZS1vdXQnLCAndmFyKC0tcmlnaHQtZmFkZS1vdXQtYW5pbWF0aW9uKScpO1xuICB9XG59XG5cbmZ1bmN0aW9uIGhhbmRsZUNhcm91c2VsTmF2aWdhdGlvbkJ1dHRvbkNsaWNrKHJvb3RFbGVtZW50KSB7XG4gIGNvbnN0IGNhcm91c2VsTmF2aWdhdGlvbkJ1dHRvbnMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcuY2Fyb3VzZWwtbmF2aWdhdGlvbi1idXR0b24nKTtcblxuICBjYXJvdXNlbE5hdmlnYXRpb25CdXR0b25zLmZvckVhY2goKGJ1dHRvbiwgaW5kZXgpID0+IHtcbiAgICBidXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XG4gICAgICBpZiAoYnV0dG9uLmNsYXNzTGlzdC5jb250YWlucygnYWN0aXZlJykpIHJldHVybjtcbiAgICAgIGlmIChpc1NsaWRlVHJhbnNpdGlvbmluZykgcmV0dXJuO1xuXG4gICAgICBjb25zdCBjdXJyZW50U2xpZGVJbmRleCA9IHNsaWRlSW5kZXg7XG5cbiAgICAgIGN1cnJlbnRTbGlkZShpbmRleCArIDEpO1xuXG4gICAgICBpZiAoY3VycmVudFNsaWRlSW5kZXggPCBzbGlkZUluZGV4KSB7XG4gICAgICAgIHVwZGF0ZVJvb3RBbmltYXRpb25Qcm9wZXJ0eShyb290RWxlbWVudCwgJ3JpZ2h0Jyk7XG4gICAgICB9IGVsc2UgaWYgKGN1cnJlbnRTbGlkZUluZGV4ID4gc2xpZGVJbmRleCkge1xuICAgICAgICB1cGRhdGVSb290QW5pbWF0aW9uUHJvcGVydHkocm9vdEVsZW1lbnQsICdsZWZ0Jyk7XG4gICAgICB9XG4gICAgfSk7XG4gIH0pO1xufVxuXG5mdW5jdGlvbiBoYW5kbGVDYXJvdXNlbEFycm93Q2xpY2socm9vdEVsZW1lbnQpIHtcbiAgY29uc3QgbGVmdEFycm93ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmNhcm91c2VsLWFycm93LmxlZnQtYXJyb3cnKTtcbiAgY29uc3QgcmlnaHRBcnJvdyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5jYXJvdXNlbC1hcnJvdy5yaWdodC1hcnJvdycpO1xuXG4gIGlmIChsZWZ0QXJyb3cpIHtcbiAgICBsZWZ0QXJyb3cuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XG4gICAgICBpZiAoaXNTbGlkZVRyYW5zaXRpb25pbmcpIHJldHVybjtcbiAgICAgIGNvbnN0IGN1cnJlbnRTbGlkZUluZGV4ID0gc2xpZGVJbmRleDtcblxuICAgICAgcGx1c1NsaWRlcygtMSk7XG4gICAgICB1cGRhdGVSb290QW5pbWF0aW9uUHJvcGVydHkocm9vdEVsZW1lbnQsICdsZWZ0Jyk7XG5cbiAgICAgIGlmIChjdXJyZW50U2xpZGVJbmRleCA8PSBzbGlkZUluZGV4KSB7XG4gICAgICAgIHVwZGF0ZVJvb3RBbmltYXRpb25Qcm9wZXJ0eShyb290RWxlbWVudCwgJ3JpZ2h0Jyk7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICAvLyBGdW5jdGlvbiB0byBoYW5kbGUgcmlnaHQgYXJyb3cgY2xpY2tcbiAgaWYgKHJpZ2h0QXJyb3cpIHtcbiAgICByaWdodEFycm93LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xuICAgICAgaWYgKGlzU2xpZGVUcmFuc2l0aW9uaW5nKSByZXR1cm47XG4gICAgICBjb25zdCBjdXJyZW50U2xpZGVJbmRleCA9IHNsaWRlSW5kZXg7XG5cbiAgICAgIHBsdXNTbGlkZXMoMSk7XG4gICAgICB1cGRhdGVSb290QW5pbWF0aW9uUHJvcGVydHkocm9vdEVsZW1lbnQsICdyaWdodCcpO1xuXG4gICAgICBpZiAoY3VycmVudFNsaWRlSW5kZXggPj0gc2xpZGVJbmRleCkge1xuICAgICAgICB1cGRhdGVSb290QW5pbWF0aW9uUHJvcGVydHkocm9vdEVsZW1lbnQsICdsZWZ0Jyk7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cbn1cblxuZnVuY3Rpb24gaGFuZGxlQ2Fyb3VzZWwoKSB7XG4gIGNvbnN0IHJvb3RFbGVtZW50ID0gZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50O1xuXG4gIGhhbmRsZUNhcm91c2VsQXJyb3dDbGljayhyb290RWxlbWVudCk7XG4gIGhhbmRsZUNhcm91c2VsTmF2aWdhdGlvbkJ1dHRvbkNsaWNrKHJvb3RFbGVtZW50KTtcbn1cblxuZXhwb3J0IHsgaGFuZGxlQ2Fyb3VzZWwgfTtcbiIsImV4cG9ydCBjb25zdCBnZXRFbGVtZW50ID0gKHNlbGVjdG9yLCBzY29wZSA9IGRvY3VtZW50KSA9PiBzY29wZS5xdWVyeVNlbGVjdG9yKHNlbGVjdG9yKTtcbmV4cG9ydCBjb25zdCBnZXRBbGxFbGVtZW50cyA9IChzZWxlY3Rvciwgc2NvcGUgPSBkb2N1bWVudCkgPT4gc2NvcGUucXVlcnlTZWxlY3RvckFsbChzZWxlY3Rvcik7XG5leHBvcnQgY29uc3QgYWRkTGlzdGVuZXIgPSAoZWxlbWVudCwgZXZlbnQsIGhhbmRsZXIpID0+IGVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihldmVudCwgaGFuZGxlcik7XG5leHBvcnQgY29uc3QgcmVtb3ZlTGlzdGVuZXIgPSAoZWxlbWVudCwgZXZlbnQsIGhhbmRsZXIpID0+IGVsZW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcihldmVudCwgaGFuZGxlcik7XG5leHBvcnQgY29uc3QgdG9nZ2xlQ2xhc3MgPSAoZWxlbWVudCwgYWN0aW9uLCBjbGFzc05hbWUpID0+IGVsZW1lbnQuY2xhc3NMaXN0W2FjdGlvbl0oY2xhc3NOYW1lKTtcbmV4cG9ydCBjb25zdCBzZXREaXNhYmxlZFN0YXRlID0gKGVsZW1lbnQsIHN0YXRlKSA9PiBlbGVtZW50LmRpc2FibGVkID0gc3RhdGU7XG4iLCJpbXBvcnQgeyBwcm9jZXNzRGlhbG9nRWxlbWVudHMgfSBmcm9tIFwiLi4vY2FjaGUvZGlhbG9nLWVsZW1lbnRzLWFuZC11dGlsdGllc1wiO1xuaW1wb3J0IHsgc2V0RGlzYWJsZWRTdGF0ZSwgdG9nZ2xlQ2xhc3MgfSBmcm9tIFwiLi4vLi4vdXRpbGl0aWVzL2phYmFzY3JpcHR6LXV0aWxpdGllc1wiO1xuXG4vLyA+IC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbmV4cG9ydCBmdW5jdGlvbiBoYW5kbGVUZXh0QXJlYUNoYXJhY3RlckNvdW50KGV2ZW50KSB7XG4gIGNvbnN0IHNldENoYXJhY3RlckNvdW50ID0gKCkgPT4gY2hhcmFjdGVyQ291bnQudGV4dENvbnRlbnQgPSBgJHt0ZXh0QXJlYUNoYXJhY3RlckNvdW50fS8ke21pbkNoYXJhY3RlckNvdW50fWA7XG5cbiAgY29uc3QgdGV4dEFyZWEgPSBldmVudC50YXJnZXQ7XG4gIGNvbnN0IHN1Ym1pdEJ1dHRvbiA9IHByb2Nlc3NEaWFsb2dFbGVtZW50cy5zdWJtaXRCdXR0b24oKTtcbiAgY29uc3QgY2hhcmFjdGVyQ291bnQgPSBwcm9jZXNzRGlhbG9nRWxlbWVudHMuY2hhcmFjdGVyQ291bnQoKTtcblxuICBjb25zdCB0ZXh0QXJlYUNoYXJhY3RlckNvdW50ID0gdGV4dEFyZWEudmFsdWUudHJpbSgpLmxlbmd0aDtcbiAgY29uc3QgbWluQ2hhcmFjdGVyQ291bnQgPSA5OTtcbiAgY29uc3QgaXNUZXh0QXJlYVZhbGlkID0gdGV4dEFyZWFDaGFyYWN0ZXJDb3VudCA+PSBtaW5DaGFyYWN0ZXJDb3VudDtcblxuICBzZXRDaGFyYWN0ZXJDb3VudCgpO1xuXG4gIGlmIChpc1RleHRBcmVhVmFsaWQpIHtcbiAgICBzZXREaXNhYmxlZFN0YXRlKHN1Ym1pdEJ1dHRvbiwgZmFsc2UpO1xuICAgIHRvZ2dsZUNsYXNzKFxuICAgICAgY2hhcmFjdGVyQ291bnQsXG4gICAgICAnYWRkJyxcbiAgICAgICd2YWxpZCdcbiAgICApO1xuICB9IGVsc2Uge1xuICAgIHNldERpc2FibGVkU3RhdGUoc3VibWl0QnV0dG9uLCB0cnVlKTtcbiAgICB0b2dnbGVDbGFzcyhcbiAgICAgIGNoYXJhY3RlckNvdW50LFxuICAgICAgJ3JlbW92ZScsXG4gICAgICAndmFsaWQnXG4gICAgKTtcbiAgfVxufSIsImltcG9ydCB7IGdldEVsZW1lbnQsIHRvZ2dsZUNsYXNzLCBhZGRMaXN0ZW5lciwgcmVtb3ZlTGlzdGVuZXIsIHNldERpc2FibGVkU3RhdGUgfSBmcm9tIFwiLi4vLi4vdXRpbGl0aWVzL2phYmFzY3JpcHR6LXV0aWxpdGllc1wiO1xuaW1wb3J0IHsgZm9ybVN0YXRlIH0gZnJvbSBcIi4uL2hhbmRsZXJzL2hhbmRsZS1wcm9jZXNzLW1vZGFsXCI7XG5pbXBvcnQgeyBoYW5kbGVUZXh0QXJlYUNoYXJhY3RlckNvdW50IH0gZnJvbSBcIi4uL2hhbmRsZXJzL2hhbmRsZS10ZXh0LWFyZWEtY2hhcmFjdGVyLWNvdW50XCI7XG5cbmV4cG9ydCBjb25zdCBwcm9jZXNzRGlhbG9nRWxlbWVudHMgPSB7XG4gIGZvcm06ICgpID0+IGdldEVsZW1lbnQoJyNzdGFydC10aGUtcHJvY2Vzcy1mb3JtJyksXG4gIHN0ZXBOdW1iZXI6ICgpID0+IGdldEVsZW1lbnQoJyNzdGVwLW51bWJlcicpLFxuICBjaGFyYWN0ZXJDb3VudDogKCkgPT4gZ2V0RWxlbWVudCgnI2NoYXJhY3Rlci1jb3VudCcpLFxuICBzdWJtaXRCdXR0b246ICgpID0+IGdldEVsZW1lbnQoJyNzdWJtaXQtYnV0dG9uJyksXG4gIHByZXZpb3VzQnV0dG9uOiAoKSA9PiBnZXRFbGVtZW50KCcjcHJldmlvdXMtYnV0dG9uJyksXG4gIG5leHRCdXR0b246ICgpID0+IGdldEVsZW1lbnQoJyNuZXh0LWJ1dHRvbicpLFxuICBtb2RhbDogKCkgPT4gZ2V0RWxlbWVudCgnI3N0YXJ0LXRoZS1wcm9jZXNzLWRpYWxvZycpLFxuICBjbG9zZUJ1dHRvbjogKCkgPT4gZ2V0RWxlbWVudCgnI3Byb2Nlc3MtZGlhbG9nLWNsb3NlLWJ1dHRvbicpLFxuICBidXR0b25Db250YWluZXI6ICgpID0+IGdldEVsZW1lbnQoJyNkaWFsb2ctYnV0dG9uLWNvbnRhaW5lcicpLFxuICBmaWVsZFNldDogKG51bSkgPT4gZ2V0RWxlbWVudChgW2RhdGEtZmllbGQtc2V0PVwiJHtudW19XCJdYCksXG4gIHRleHRBcmVhOiAoKSA9PiBnZXRFbGVtZW50KCd0ZXh0YXJlYScpLFxuICBuYW1lRmllbGQ6ICgpID0+IGdldEVsZW1lbnQoJyNuYW1lJyksXG59O1xuXG5leHBvcnQgY29uc3Qgc3dhcEZpZWxkU2V0ID0gKG9sZEZpZWxkU2V0LCBuZXdGaWVsZFNldCkgPT4ge1xuICBjb25zdCBzZXRTdGVwTnVtYmVyID0gKG51bWJlcikgPT4gcHJvY2Vzc0RpYWxvZ0VsZW1lbnRzLnN0ZXBOdW1iZXIoKS50ZXh0Q29udGVudCA9IGBTdGVwICR7bnVtYmVyfWA7XG5cbiAgdG9nZ2xlQ2xhc3MoXG4gICAgcHJvY2Vzc0RpYWxvZ0VsZW1lbnRzLmZpZWxkU2V0KG9sZEZpZWxkU2V0KSxcbiAgICAncmVtb3ZlJyxcbiAgICAnYWN0aXZlJ1xuICApO1xuXG4gIHRvZ2dsZUNsYXNzKFxuICAgIHByb2Nlc3NEaWFsb2dFbGVtZW50cy5maWVsZFNldChuZXdGaWVsZFNldCksXG4gICAgJ2FkZCcsXG4gICAgJ2FjdGl2ZSdcbiAgKTtcblxuICBzZXRTdGVwTnVtYmVyKG5ld0ZpZWxkU2V0KTtcbiAgZm9ybVN0YXRlLnNldE5ld0ZpZWxkU2V0KG5ld0ZpZWxkU2V0KTtcbn07XG5cbmV4cG9ydCBjb25zdCB0b2dnbGVUZXh0QXJlYUNvbXBvbmVudHMgPSAoYWN0aW9uKSA9PiB7XG4gIGNvbnN0IHRleHRBcmVhID0gcHJvY2Vzc0RpYWxvZ0VsZW1lbnRzLnRleHRBcmVhKCk7XG4gIGNvbnN0IGNoYXJhY3RlckNvdW50ID0gcHJvY2Vzc0RpYWxvZ0VsZW1lbnRzLmNoYXJhY3RlckNvdW50KCk7XG5cbiAgaWYgKGFjdGlvbiA9PT0gJ2VuYWJsZScpIHtcbiAgICB0b2dnbGVDbGFzcyhcbiAgICAgIGNoYXJhY3RlckNvdW50LFxuICAgICAgJ2FkZCcsXG4gICAgICAnYWN0aXZlJ1xuICAgICk7XG5cbiAgICBpZiAodGV4dEFyZWEudmFsdWUudHJpbSgpLmxlbmd0aCA+PSA5OSkge1xuICAgICAgdG9nZ2xlQ2xhc3MoXG4gICAgICAgIGNoYXJhY3RlckNvdW50LFxuICAgICAgICAnYWRkJyxcbiAgICAgICAgJ3ZhbGlkJ1xuICAgICAgKTtcblxuICAgICAgc2V0RGlzYWJsZWRTdGF0ZShwcm9jZXNzRGlhbG9nRWxlbWVudHMuc3VibWl0QnV0dG9uKCksIGZhbHNlKTtcbiAgICB9XG5cbiAgICBhZGRMaXN0ZW5lcih0ZXh0QXJlYSwgJ2lucHV0JywgaGFuZGxlVGV4dEFyZWFDaGFyYWN0ZXJDb3VudCk7XG4gIH0gZWxzZSBpZiAoYWN0aW9uID09PSAnZGlzYWJsZScpIHtcbiAgICB0b2dnbGVDbGFzcyhcbiAgICAgIGNoYXJhY3RlckNvdW50LFxuICAgICAgJ3JlbW92ZScsXG4gICAgICAnYWN0aXZlJ1xuICAgIClcbiAgICB0b2dnbGVDbGFzcyhcbiAgICAgIGNoYXJhY3RlckNvdW50LFxuICAgICAgJ3JlbW92ZScsXG4gICAgICAndmFsaWQnXG4gICAgKVxuXG4gICAgc2V0RGlzYWJsZWRTdGF0ZShwcm9jZXNzRGlhbG9nRWxlbWVudHMuc3VibWl0QnV0dG9uKCksIHRydWUpO1xuICAgIHJlbW92ZUxpc3RlbmVyKHRleHRBcmVhLCAnaW5wdXQnLCBoYW5kbGVUZXh0QXJlYUNoYXJhY3RlckNvdW50KTtcbiAgfVxufTtcbiIsImltcG9ydCB7IGdldENvbnRyb2xsZWRFbGVtZW50IH0gZnJvbSBcIi4uL21ldGEvY29udHJvbGxlcnNcIjtcbmltcG9ydCB7IHByb2Nlc3NEaWFsb2dFbGVtZW50cyB9IGZyb20gXCIuLi9jYWNoZS9kaWFsb2ctZWxlbWVudHMtYW5kLXV0aWx0aWVzXCI7XG5pbXBvcnQgcmVzcG9uc2VCb3RzIGZyb20gJy4uLy4uL2pzb24vcmVzcG9uc2UtYm90cy5qc29uJyB3aXRoIHsgdHlwZTogJ2pzb24nIH07XG5cbi8vIPCfkq0gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuZXhwb3J0IGZ1bmN0aW9uIHVwZGF0ZVVJUG9zdFN1Ym1pc3Npb24ocmVzdWx0KSB7XG4gIGNvbnN0IHJlc3BvbnNlRGlhbG9nQ29udHJvbGxlZE9iamVjdCA9IGdldENvbnRyb2xsZWRFbGVtZW50KCdyZXNwb25zZU1vZGFsJyk7XG4gIGNvbnN0IHJlc3BvbnNlRGlhbG9nRWxlbWVudCA9IHJlc3BvbnNlRGlhbG9nQ29udHJvbGxlZE9iamVjdC5lbGVtZW50O1xuICBjb25zdCByZXNwb25zZURpYWxvZ0NvbnRyb2xsZXIgPSByZXNwb25zZURpYWxvZ0NvbnRyb2xsZWRPYmplY3QuY29udHJvbGxlcjtcblxuICBjb25zdCByZXNwb25zZURpYWxvZ0hlYWRpbmcgPSByZXNwb25zZURpYWxvZ0VsZW1lbnQucXVlcnlTZWxlY3RvcignI3Jlc3BvbnNlLWRpYWxvZy1oZWFkaW5nJyk7XG4gIGNvbnN0IHJlc3BvbnNlRGlhbG9nUGFyYWdyYXBoID0gcmVzcG9uc2VEaWFsb2dFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJyNyZXNwb25zZS1kaWFsb2ctcGFyYWdyYXBoJyk7XG4gIGNvbnN0IHJlc3BvbnNlRGlhbG9nSW1hZ2UgPSByZXNwb25zZURpYWxvZ0VsZW1lbnQucXVlcnlTZWxlY3RvcignI3Jlc3BvbnNlLWRpYWxvZy1pbWFnZScpO1xuXG4gIGlmIChyZXN1bHQuc3RhdHVzID09PSAnc3VjY2VzcycpIHtcbiAgICByZXNwb25zZURpYWxvZ0hlYWRpbmcudGV4dENvbnRlbnQgPSAnU3VibWlzc2lvbiBjb25maXJtZWQuIFBsZWFzZSBzdGFuZCBieSBmb3IgaW1taW5lbnQgY29udGFjdC4g8J+SrSc7XG4gICAgcmVzcG9uc2VEaWFsb2dQYXJhZ3JhcGgudGV4dENvbnRlbnQgPSAnWW91ciBjb29wZXJhdGlvbiB3aXRoIHRoZSBjb2xsZWN0aXZlIGlzIGFwcHJlY2lhdGVkLic7XG5cbiAgICBjb25zdCBzdWNjZXNzQm90ID0gcmVzcG9uc2VCb3RzLmZpbmQoYm90ID0+IGJvdC5pZCA9PT0gJ3N1Y2Nlc3MnKTtcbiAgICByZXNwb25zZURpYWxvZ0ltYWdlLnNyYyA9IHN1Y2Nlc3NCb3Quc3JjO1xuICAgIHJlc3BvbnNlRGlhbG9nSW1hZ2UuYWx0ID0gc3VjY2Vzc0JvdC5hbHQ7XG5cbiAgICAvLyA/IGNsb3NlcyBkaWFsb2cgdG8gcmVzZXQgdGhlIGZvcm1cbiAgICBpZiAocHJvY2Vzc0RpYWxvZ0VsZW1lbnRzICYmIHByb2Nlc3NEaWFsb2dFbGVtZW50cy5jbG9zZUJ1dHRvbikge1xuICAgICAgcHJvY2Vzc0RpYWxvZ0VsZW1lbnRzLmNsb3NlQnV0dG9uKCkuY2xpY2soKTtcbiAgICB9O1xuICB9IGVsc2Uge1xuICAgIHJlc3BvbnNlRGlhbG9nSGVhZGluZy50ZXh0Q29udGVudCA9ICdTdWJtaXNzaW9uIEZhaWxlZC4gUGxlYXNlIHRyeSBhZ2Fpbi4g8J+SrSc7XG4gICAgcmVzcG9uc2VEaWFsb2dQYXJhZ3JhcGgudGV4dENvbnRlbnQgPSByZXN1bHQubWVzc2FnZTtcblxuICAgIGNvbnN0IGVycm9yQm90ID0gcmVzcG9uc2VCb3RzLmZpbmQoYm90ID0+IGJvdC5pZCA9PT0gJ2Vycm9yJyk7XG4gICAgcmVzcG9uc2VEaWFsb2dJbWFnZS5zcmMgPSBlcnJvckJvdC5zcmM7XG4gICAgcmVzcG9uc2VEaWFsb2dJbWFnZS5hbHQgPSBlcnJvckJvdC5hbHQ7XG4gIH1cblxuICByZXNwb25zZURpYWxvZ0NvbnRyb2xsZXIub3BlbkRpYWxvZygpO1xufSIsImltcG9ydCB7IGNvbnRyb2xsZWRFbGVtZW50cyB9IGZyb20gXCIuLi8uLi9hcHBcIjtcblxuLy8g8J+SrSAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG5leHBvcnQgZnVuY3Rpb24gZ2V0Q29udHJvbGxlZEVsZW1lbnQoZWxlbWVudE5hbWUpIHtcbiAgcmV0dXJuIGNvbnRyb2xsZWRFbGVtZW50c1tlbGVtZW50TmFtZV07XG59IiwiaW1wb3J0IHsgZm9ybVN0YXRlIH0gZnJvbSBcIi4vaGFuZGxlLXByb2Nlc3MtbW9kYWxcIjtcbmltcG9ydCB7IGdldEFsbEVsZW1lbnRzIH0gZnJvbSBcIi4uLy4uL3V0aWxpdGllcy9qYWJhc2NyaXB0ei11dGlsaXRpZXNcIjsgXG5pbXBvcnQgeyB1cGRhdGVVSVBvc3RTdWJtaXNzaW9uIH0gZnJvbSBcIi4uL21vZGlmaWVycy9tb2RpZnktdWlcIjtcblxuLy8g8J+SrSAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFrZUZldGNoUmVxdWVzdChmb3JtRGF0YUpzb24pIHtcbiAgbGV0IHJlc3VsdDsgXG4gIHRyeSB7XG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaCgnL2FwaS9zdWJtaXQtZm9ybScsIHtcbiAgICAgIG1ldGhvZDogJ1BPU1QnLFxuICAgICAgaGVhZGVyczoge1xuICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLFxuICAgICAgfSxcbiAgICAgIGJvZHk6IGZvcm1EYXRhSnNvbixcbiAgICB9KTtcblxuICAgIHRyeSB7XG4gICAgICByZXN1bHQgPSBhd2FpdCByZXNwb25zZS5qc29uKCk7IFxuICAgIH0gY2F0Y2ggKGpzb25FcnJvcikge1xuICAgICAgY29uc29sZS5lcnJvcignRmFpbGVkIHRvIHBhcnNlIEpTT04gcmVzcG9uc2U6JywganNvbkVycm9yKTtcbiAgICAgIHJlc3VsdCA9IHsgc3RhdHVzOiAnZXJyb3InLCBtZXNzYWdlOiAnRmFpbGVkIHRvIHBhcnNlIEpTT04gcmVzcG9uc2UnIH07XG4gICAgICB1cGRhdGVVSVBvc3RTdWJtaXNzaW9uKHJlc3VsdCk7IFxuICAgICAgcmV0dXJuIHsgc3VjY2VzczogZmFsc2UsIGVycm9yOiBqc29uRXJyb3IubWVzc2FnZSB9O1xuICAgIH1cbiAgICBcbiAgICBpZiAocmVzcG9uc2Uuc3RhdHVzID09PSAyMDApIHtcbiAgICAgIHVwZGF0ZVVJUG9zdFN1Ym1pc3Npb24ocmVzdWx0KTsgXG4gICAgICByZXR1cm4geyBzdWNjZXNzOiB0cnVlLCBkYXRhOiByZXN1bHQgfTtcbiAgICB9IGVsc2UgaWYgKHJlc3BvbnNlLnN0YXR1cyA9PT0gNDAwKSB7XG4gICAgICBjb25zb2xlLmVycm9yKCdSZXF1ZXN0IGVycm9yOicsIHJlc3VsdC5lcnJvcik7XG4gICAgICB1cGRhdGVVSVBvc3RTdWJtaXNzaW9uKHsgc3RhdHVzOiAnZXJyb3InLCBtZXNzYWdlOiAnSW52YWxpZCByZXF1ZXN0IHNlbnQnIH0pO1xuICAgICAgcmV0dXJuIHsgc3VjY2VzczogZmFsc2UsIGVycm9yOiAnSW52YWxpZCByZXF1ZXN0JyB9O1xuICAgIH0gZWxzZSB7XG4gICAgICBjb25zb2xlLmVycm9yKCdVbmV4cGVjdGVkIHJlc3BvbnNlIHN0YXR1czonLCByZXNwb25zZS5zdGF0dXMpO1xuICAgICAgdXBkYXRlVUlQb3N0U3VibWlzc2lvbih7IHN0YXR1czogJ2Vycm9yJywgbWVzc2FnZTogJ0FuIHVuZXhwZWN0ZWQgZXJyb3Igb2NjdXJyZWQnIH0pO1xuICAgICAgcmV0dXJuIHsgc3VjY2VzczogZmFsc2UsIGVycm9yOiByZXNwb25zZS5zdGF0dXNUZXh0IH07XG4gICAgfVxuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoJ0NsaWVudC1zaWRlIGVycm9yIC0gZm9ybSBzdWJtaXNzaW9uOicsIGVycm9yKTtcbiAgICBsZXQgZXJyb3JNZXNzYWdlID0gZXJyb3IubWVzc2FnZTtcbiAgICBpZiAoZXJyb3IubWVzc2FnZS5pbmNsdWRlcygnTmV0d29ya0Vycm9yJykpIHtcbiAgICAgIGVycm9yTWVzc2FnZSA9ICdQbGVhc2UgY2hlY2sgeW91ciBpbnRlcm5ldCBjb25uZWN0aW9uIGFuZCB0cnkgYWdhaW4uJztcbiAgICB9XG4gICAgdXBkYXRlVUlQb3N0U3VibWlzc2lvbihlcnJvci5tZXNzYWdlKTtcbiAgICByZXR1cm4geyBzdWNjZXNzOiBmYWxzZSwgZXJyb3I6IGVycm9yTWVzc2FnZSB9O1xuICB9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRGb3JtYXR0ZWRGb3JtRGF0YSh0ZXh0QXJlYUZpZWxkc2V0LCBhY2N1bXVsYXRlZEZvcm1EYXRhKSB7XG4gIGNvbnN0IGZvcm1EYXRhID0ge31cblxuICBjb25zdCB0ZXh0QXJlYURhdGEgPSBjb2xsZWN0Rm9ybURhdGEodGV4dEFyZWFGaWVsZHNldCk7XG4gIGFjY3VtdWxhdGVkRm9ybURhdGEudXBkYXRlRmllbGRTZXRGb3JtRGF0YSh0ZXh0QXJlYURhdGEsIGZvcm1TdGF0ZS5nZXRDdXJyZW50RmllbGRTZXQoKSk7XG5cbiAgY29uc3QgYWxsRmllbGREYXRhT2JqZWN0ID0gYWNjdW11bGF0ZWRGb3JtRGF0YS5nZXQoKTtcblxuICBmb3IgKGNvbnN0IGZpZWxkRGF0YUFycmF5IG9mIE9iamVjdC5lbnRyaWVzKGFsbEZpZWxkRGF0YU9iamVjdCkpIHtcbiAgICBjb25zdCBmaWVsZERhdGEgPSBmaWVsZERhdGFBcnJheVsxXTtcblxuICAgIGZpZWxkRGF0YS5mb3JFYWNoKChbbmFtZSwgdmFsdWVdKSA9PiB7XG4gICAgICBmb3JtRGF0YVtuYW1lXSA9IHZhbHVlO1xuICAgIH0pO1xuICB9XG5cbiAgcmV0dXJuIGZvcm1EYXRhO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gY29sbGVjdEZvcm1EYXRhKGN1cnJlbnRGaWVsZFNldEVsZW1lbnQpIHtcbiAgY29uc3QgZmllbGRzID0gZ2V0QWxsRWxlbWVudHMoJ2lucHV0LCBzZWxlY3QsIHRleHRhcmVhJywgY3VycmVudEZpZWxkU2V0RWxlbWVudCk7XG5cbiAgY29uc3QgZm9ybURhdGFGb3JDdXJyZW50RmllbGRzZXQgPSBBcnJheS5mcm9tKGZpZWxkcylcbiAgICAuZmlsdGVyKGZpZWxkID0+IGZpZWxkLm5hbWUpIC8vID8gRmlsdGVyIG91dCBmaWVsZHMgd2l0aG91dCBuYW1lc1xuICAgIC5tYXAoZmllbGQgPT4ge1xuICAgICAgLy8gPyBUcmltIHRoZSB2YWx1ZSBmb3IgaW5wdXRzIGFuZCB0ZXh0YXJlYXM7IGxlYXZlIG90aGVycyBhcyBpc1xuICAgICAgY29uc3QgdmFsdWVUb1VzZSA9IChmaWVsZC50YWdOYW1lID09PSAnSU5QVVQnIHx8IGZpZWxkLnRhZ05hbWUgPT09ICdURVhUQVJFQScpID8gZmllbGQudmFsdWUudHJpbSgpIDogZmllbGQudmFsdWU7XG4gICAgICByZXR1cm4gW2ZpZWxkLm5hbWUsIHZhbHVlVG9Vc2VdO1xuICAgIH0pO1xuXG4gIHJldHVybiBmb3JtRGF0YUZvckN1cnJlbnRGaWVsZHNldDtcbn0iLCJmdW5jdGlvbiByZXBsYWNlQWxsQnV0TnVtYmVyc0FuZFBsdXNTaWduKGUpIHtcbiAgdGhpcy52YWx1ZSA9IHRoaXMudmFsdWUucmVwbGFjZSgvW15cXGQrXFwtKCkgXS9nLCAnJyk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiB0b2dnbGVQaG9uZUlucHV0U2FuaXRpemF0aW9uTGlzdGVuZXIoYWN0aW9uKSB7XG4gIGNvbnN0IHRlbGVwaG9uZUlucHV0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignaW5wdXRbdHlwZT1cInRlbFwiXScpO1xuICBcbiAgaWYgKGFjdGlvbiA9PT0gJ2FkZCcpIHtcbiAgICB0ZWxlcGhvbmVJbnB1dC5hZGRFdmVudExpc3RlbmVyKCdpbnB1dCcsIHJlcGxhY2VBbGxCdXROdW1iZXJzQW5kUGx1c1NpZ24pO1xuICB9IGVsc2UgaWYgKGFjdGlvbiA9PT0ncmVtb3ZlJykge1xuICAgIHRlbGVwaG9uZUlucHV0LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2lucHV0JywgcmVwbGFjZUFsbEJ1dE51bWJlcnNBbmRQbHVzU2lnbik7IFxuICB9IGVsc2Uge1xuICAgIHRocm93IG5ldyBFcnJvcigndG9nZ2xlUGhvbmVJbnB1dFNhbml0aXphdGlvbiBhY2NlcHRzIG9ubHkgXCJhZGRcIiBhbmQgXCJyZW1vdmVcIiBhcyBhcmd1bWVudHMuJyk7XG4gIH1cbn1cbiIsImltcG9ydCB7IGFkZExpc3RlbmVyLCBnZXRBbGxFbGVtZW50cywgcmVtb3ZlTGlzdGVuZXIgfSBmcm9tIFwiLi4vLi4vdXRpbGl0aWVzL2phYmFzY3JpcHR6LXV0aWxpdGllc1wiO1xuXG4vLyA+IC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbmZ1bmN0aW9uIGhhbmRsZVNlbGVjdFBsYWNlaG9sZGVyKGUpIHtcbiAgY29uc3Qgc2VsZWN0ID0gZS50YXJnZXQ7XG4gIGNvbnN0IHNlbGVjdGVkT3B0aW9uID0gc2VsZWN0Lm9wdGlvbnNbc2VsZWN0LnNlbGVjdGVkSW5kZXhdO1xuXG4gIGlmIChzZWxlY3RlZE9wdGlvbi5kaXNhYmxlZCA9PT0gdHJ1ZSB8fCBzZWxlY3RlZE9wdGlvbi52YWx1ZSA9PT0gJycpIHJldHVybjtcbiAgc2VsZWN0LmNsYXNzTGlzdC5hZGQoJ3ZhbGlkJyk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiB0b2dnbGVTZWxlY3RQbGFjZWhvbGRlckNoYW5nZUxpc3RlbmVyKGFjdGlvbikge1xuICBjb25zdCBzZWxlY3RzID0gZ2V0QWxsRWxlbWVudHMoJ3NlbGVjdCcpO1xuXG4gIGlmIChhY3Rpb24gPT09ICdhZGQnKSB7XG4gICAgc2VsZWN0cy5mb3JFYWNoKHNlbGVjdCA9PiB7XG4gICAgICBhZGRMaXN0ZW5lcihzZWxlY3QsICdjaGFuZ2UnLCBoYW5kbGVTZWxlY3RQbGFjZWhvbGRlcik7XG4gICAgfSk7XG4gIH0gZWxzZSBpZiAoYWN0aW9uID09PSAncmVtb3ZlJykge1xuICAgIHNlbGVjdHMuZm9yRWFjaChzZWxlY3QgPT4ge1xuICAgICAgcmVtb3ZlTGlzdGVuZXIoc2VsZWN0LCAnY2hhbmdlJywgaGFuZGxlU2VsZWN0UGxhY2Vob2xkZXIpO1xuICAgIH0pO1xuICB9XG59IiwiaW1wb3J0IHsgYWRkTGlzdGVuZXIsIGdldEFsbEVsZW1lbnRzLCByZW1vdmVMaXN0ZW5lciwgc2V0RGlzYWJsZWRTdGF0ZSwgdG9nZ2xlQ2xhc3MgfSBmcm9tIFwiLi4vLi4vdXRpbGl0aWVzL2phYmFzY3JpcHR6LXV0aWxpdGllc1wiO1xuaW1wb3J0IHsgYWNjdW11bGF0ZWRGb3JtRGF0YUZhY3RvcnkgfSBmcm9tIFwiLi4vZmFjdG9yaWVzXCI7XG5pbXBvcnQgeyBjb2xsZWN0Rm9ybURhdGEsIGdldEZvcm1hdHRlZEZvcm1EYXRhLCBtYWtlRmV0Y2hSZXF1ZXN0IH0gZnJvbSBcIi4vaGFuZGxlLWZvcm0tc3VibWlzc2lvblwiO1xuaW1wb3J0IHsgcHJvY2Vzc0RpYWxvZ0VsZW1lbnRzLCBzd2FwRmllbGRTZXQsIHRvZ2dsZVRleHRBcmVhQ29tcG9uZW50cyB9IGZyb20gXCIuLi9jYWNoZS9kaWFsb2ctZWxlbWVudHMtYW5kLXV0aWx0aWVzXCI7XG5pbXBvcnQgeyBmb3JtU3RhdGUgfSBmcm9tIFwiLi9oYW5kbGUtcHJvY2Vzcy1tb2RhbFwiO1xuaW1wb3J0IHsgdG9nZ2xlUGhvbmVJbnB1dFNhbml0aXphdGlvbkxpc3RlbmVyIH0gZnJvbSBcIi4vaGFuZGxlLXRlbGVwaG9uZS1pbnB1dC1zYW5pdGl6YXRpb25cIjtcbmltcG9ydCB7IHRvZ2dsZVNlbGVjdFBsYWNlaG9sZGVyQ2hhbmdlTGlzdGVuZXIgfSBmcm9tIFwiLi9oYW5kbGUtc2VsZWN0LXBsYWNlLWhvbGRlcnNcIjtcblxuLy8gPiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG5sZXQgYWNjdW11bGF0ZWRGb3JtRGF0YSA9IGFjY3VtdWxhdGVkRm9ybURhdGFGYWN0b3J5KCk7XG5cbmZ1bmN0aW9uIGhhbmRsZVByZXZpb3VzQnV0dG9uQ2xpY2socHJldmlvdXNGaWVsZFNldCwgdG9nZ2xlVGV4dEFyZWFDb21wb25lbnRzKSB7XG4gIGNvbnN0IHByZXZpb3VzQnV0dG9uID0gcHJvY2Vzc0RpYWxvZ0VsZW1lbnRzLnByZXZpb3VzQnV0dG9uKCk7XG4gIGNvbnN0IG5leHRCdXR0b24gPSBwcm9jZXNzRGlhbG9nRWxlbWVudHMubmV4dEJ1dHRvbigpO1xuXG4gIHN3YXBGaWVsZFNldChwcmV2aW91c0ZpZWxkU2V0LCBmb3JtU3RhdGUuZGVjcmVtZW50RmllbGRTZXQoKSk7XG5cbiAgaWYgKGZvcm1TdGF0ZS5nZXRDdXJyZW50RmllbGRTZXQoKSA9PT0gMSkge1xuICAgIHNldERpc2FibGVkU3RhdGUocHJldmlvdXNCdXR0b24sIHRydWUpO1xuICB9XG5cbiAgaWYgKGZvcm1TdGF0ZS5nZXRDdXJyZW50RmllbGRTZXQoKSAhPT0gMykgc2V0RGlzYWJsZWRTdGF0ZShuZXh0QnV0dG9uLCBmYWxzZSk7XG4gIGlmIChwcmV2aW91c0ZpZWxkU2V0ID09PSAzKSB0b2dnbGVUZXh0QXJlYUNvbXBvbmVudHMoJ2Rpc2FibGUnKTtcbn1cblxuZnVuY3Rpb24gaGFuZGxlTmV4dEJ1dHRvbkNsaWNrKHByZXZpb3VzRmllbGRTZXQsIHRvZ2dsZVRleHRBcmVhQ29tcG9uZW50cywgY3VycmVudEZpZWxkU2V0RWxlbWVudCkge1xuICBjb25zdCBjaGVja0ZpZWxkU2V0VmFsaWRpdHkgPSAoY3VycmVudEZpZWxkU2V0KSA9PiB7XG4gICAgbGV0IGFsbEZpZWxkc2V0c1ZhbGlkID0gdHJ1ZTsgLy8gPyBhc3N1bWVcblxuICAgIGNvbnN0IGZpZWxkcyA9IGdldEFsbEVsZW1lbnRzKCdpbnB1dCwgc2VsZWN0LCB0ZXh0YXJlYScsIGN1cnJlbnRGaWVsZFNldCk7XG5cbiAgICBmaWVsZHMuZm9yRWFjaChmaWVsZCA9PiB7XG4gICAgICBjb25zdCBoaWdobGlnaHRJbnZhbGlkRmllbGQgPSAoKSA9PiB7XG4gICAgICAgIGNvbnN0IGFuaW1hdGlvbkVuZENhbGxiYWNrID0gKCkgPT4ge1xuICAgICAgICAgIHRvZ2dsZUNsYXNzKFxuICAgICAgICAgICAgZmllbGQsXG4gICAgICAgICAgICAncmVtb3ZlJyxcbiAgICAgICAgICAgICdpcy1pbnZhbGlkJ1xuICAgICAgICAgICk7XG4gICAgICAgICAgcmVtb3ZlTGlzdGVuZXIoXG4gICAgICAgICAgICBmaWVsZC5jbG9zZXN0KCcuZmllbGQtZWxlbWVudC1jb250YWluZXInKSxcbiAgICAgICAgICAgICdhbmltYXRpb25lbmQnLFxuICAgICAgICAgICAgYW5pbWF0aW9uRW5kQ2FsbGJhY2tcbiAgICAgICAgICApO1xuICAgICAgICB9XG5cbiAgICAgICAgZmllbGQuY2xhc3NMaXN0LmFkZCgnaXMtaW52YWxpZCcpO1xuXG4gICAgICAgIGFkZExpc3RlbmVyKFxuICAgICAgICAgIGZpZWxkLmNsb3Nlc3QoJy5maWVsZC1lbGVtZW50LWNvbnRhaW5lcicpLFxuICAgICAgICAgICdhbmltYXRpb25lbmQnLFxuICAgICAgICAgIGFuaW1hdGlvbkVuZENhbGxiYWNrXG4gICAgICAgICk7XG5cbiAgICAgICAgYWxsRmllbGRzZXRzVmFsaWQgPSBmYWxzZTtcbiAgICAgIH1cblxuICAgICAgY29uc3QgaXNJbnB1dCA9IGZpZWxkLnRhZ05hbWUgPT09ICdJTlBVVCc7XG4gICAgICBjb25zdCBpc1NlbGVjdCA9IGZpZWxkLnRhZ05hbWUgPT09ICdTRUxFQ1QnO1xuXG4gICAgICBpZiAoaXNJbnB1dCkge1xuICAgICAgICBjb25zdCBwYXR0ZXJuID0gZmllbGQuZ2V0QXR0cmlidXRlKCdkYXRhLXBhdHRlcm4nKSA/IG5ldyBSZWdFeHAoZmllbGQuZ2V0QXR0cmlidXRlKCdkYXRhLXBhdHRlcm4nKSkgOiBudWxsO1xuICAgICAgICBjb25zdCBpbnB1dFZhbHVlID0gZmllbGQudmFsdWUudHJpbSgpO1xuXG4gICAgICAgIGNvbnN0IGhhc1BhdHRlcm5BbmRJc1JlcXVpcmVkID0gcGF0dGVybiAmJiBmaWVsZC5yZXF1aXJlZDtcbiAgICAgICAgY29uc3QgaGFzUGF0dGVybkFuZEhhc1ZhbHVlID0gcGF0dGVybiAmJiBpbnB1dFZhbHVlICE9PSAnJztcblxuICAgICAgICBjb25zdCBpc051bWJlcklucHV0ID0gZmllbGQuZ2V0QXR0cmlidXRlKCd0eXBlJykgPT09ICdudW1iZXInO1xuXG4gICAgICAgIGlmIChoYXNQYXR0ZXJuQW5kSXNSZXF1aXJlZCB8fCBoYXNQYXR0ZXJuQW5kSGFzVmFsdWUpIHtcbiAgICAgICAgICBjb25zdCBpbnB1dElzVmFsaWQgPSBwYXR0ZXJuLnRlc3QoZmllbGQudmFsdWUudHJpbSgpKTtcblxuICAgICAgICAgIGlmICghaW5wdXRJc1ZhbGlkKSB7XG4gICAgICAgICAgICBoaWdobGlnaHRJbnZhbGlkRmllbGQoKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSBpZiAoaXNOdW1iZXJJbnB1dCkge1xuICAgICAgICAgIGlmICghZmllbGQuY2hlY2tWYWxpZGl0eSgpKSB7XG4gICAgICAgICAgICBoaWdobGlnaHRJbnZhbGlkRmllbGQoKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSBpZiAoaXNTZWxlY3QpIHtcbiAgICAgICAgaWYgKCFmaWVsZC52YWx1ZSkge1xuICAgICAgICAgIGhpZ2hsaWdodEludmFsaWRGaWVsZCgpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSk7XG5cbiAgICByZXR1cm4gYWxsRmllbGRzZXRzVmFsaWQ7XG4gIH07XG5cbiAgY29uc3QgcHJldmlvdXNCdXR0b24gPSBwcm9jZXNzRGlhbG9nRWxlbWVudHMucHJldmlvdXNCdXR0b24oKTtcbiAgY29uc3QgbmV4dEJ1dHRvbiA9IHByb2Nlc3NEaWFsb2dFbGVtZW50cy5uZXh0QnV0dG9uKCk7XG5cbiAgaWYgKCFjaGVja0ZpZWxkU2V0VmFsaWRpdHkoY3VycmVudEZpZWxkU2V0RWxlbWVudCkpIHJldHVybjsgLy8gVE9ETzogYWRkIGVycm9yIG1lc3NhZ2UgaGVyZVxuXG4gIGNvbnN0IGRhdGFGcm9tQ3VycmVudEZpZWxkU2V0ID0gY29sbGVjdEZvcm1EYXRhKGN1cnJlbnRGaWVsZFNldEVsZW1lbnQpO1xuICBhY2N1bXVsYXRlZEZvcm1EYXRhLnVwZGF0ZUZpZWxkU2V0Rm9ybURhdGEoZGF0YUZyb21DdXJyZW50RmllbGRTZXQsIGZvcm1TdGF0ZS5nZXRDdXJyZW50RmllbGRTZXQoKSk7XG5cbiAgc3dhcEZpZWxkU2V0KHByZXZpb3VzRmllbGRTZXQsIGZvcm1TdGF0ZS5pbmNyZW1lbnRGaWVsZFNldCgpKTtcblxuICBpZiAoZm9ybVN0YXRlLmdldEN1cnJlbnRGaWVsZFNldCgpICE9PSAxKSBzZXREaXNhYmxlZFN0YXRlKHByZXZpb3VzQnV0dG9uLCBmYWxzZSk7XG4gIGlmIChmb3JtU3RhdGUuZ2V0Q3VycmVudEZpZWxkU2V0KCkgPT09IDMpIHtcbiAgICBzZXREaXNhYmxlZFN0YXRlKG5leHRCdXR0b24sIHRydWUpO1xuICAgIHRvZ2dsZVRleHRBcmVhQ29tcG9uZW50cygnZW5hYmxlJyk7XG4gIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGhhbmRsZURpYWxvZ0J1dHRvbnMoZXZlbnQpIHtcbiAgY29uc3QgYnV0dG9uID0gZXZlbnQudGFyZ2V0LnRhZ05hbWUgPT09ICdCVVRUT04nO1xuXG4gIGlmICghYnV0dG9uKSByZXR1cm47XG5cbiAgY29uc3QgdG9nZ2xlRm9ybUxpc3RlbmVycyA9IChjdXJyZW50RmllbGRTZXQpID0+IHtcbiAgICAoY3VycmVudEZpZWxkU2V0ID09PSAxKVxuICAgICAgPyB0b2dnbGVQaG9uZUlucHV0U2FuaXRpemF0aW9uTGlzdGVuZXIoJ2FkZCcpXG4gICAgICA6IHRvZ2dsZVBob25lSW5wdXRTYW5pdGl6YXRpb25MaXN0ZW5lcigncmVtb3ZlJyk7XG5cbiAgICAoY3VycmVudEZpZWxkU2V0ID09PSAyKVxuICAgICAgPyB0b2dnbGVTZWxlY3RQbGFjZWhvbGRlckNoYW5nZUxpc3RlbmVyKCdhZGQnKVxuICAgICAgOiB0b2dnbGVTZWxlY3RQbGFjZWhvbGRlckNoYW5nZUxpc3RlbmVyKCdyZW1vdmUnKTtcbiAgfTtcblxuICBjb25zdCBmb3JtYXREYXRhRm9yU3VibWlzc2lvbiA9IChldmVudCwgY3VycmVudEZpZWxkU2V0RWxlbWVudCkgPT4ge1xuICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG5cbiAgICBjb25zdCBmdWxsRm9ybURhdGEgPSBnZXRGb3JtYXR0ZWRGb3JtRGF0YShjdXJyZW50RmllbGRTZXRFbGVtZW50LCBhY2N1bXVsYXRlZEZvcm1EYXRhKTtcbiAgICBjb25zdCBib2R5SlNPTiA9IEpTT04uc3RyaW5naWZ5KGZ1bGxGb3JtRGF0YSk7XG5cbiAgICByZXR1cm4gYm9keUpTT047XG4gIH1cblxuICBjb25zdCBjdXJyZW50RmllbGRTZXQgPSBmb3JtU3RhdGUuZ2V0Q3VycmVudEZpZWxkU2V0KCk7XG4gIGNvbnN0IGN1cnJlbnRGaWVsZFNldEVsZW1lbnQgPSBwcm9jZXNzRGlhbG9nRWxlbWVudHMuZmllbGRTZXQoY3VycmVudEZpZWxkU2V0KTtcblxuICBjb25zdCBjbGlja2VkQnV0dG9uID0gZXZlbnQudGFyZ2V0O1xuICBjb25zdCBwcmV2aW91c0J1dHRvbiA9IHByb2Nlc3NEaWFsb2dFbGVtZW50cy5wcmV2aW91c0J1dHRvbigpO1xuICBjb25zdCBuZXh0QnV0dG9uID0gcHJvY2Vzc0RpYWxvZ0VsZW1lbnRzLm5leHRCdXR0b24oKTtcbiAgY29uc3Qgc3VibWl0QnV0dG9uID0gcHJvY2Vzc0RpYWxvZ0VsZW1lbnRzLnN1Ym1pdEJ1dHRvbigpO1xuXG4gIGlmIChjbGlja2VkQnV0dG9uID09PSBuZXh0QnV0dG9uKSB7XG4gICAgaGFuZGxlTmV4dEJ1dHRvbkNsaWNrKGN1cnJlbnRGaWVsZFNldCwgdG9nZ2xlVGV4dEFyZWFDb21wb25lbnRzLCBjdXJyZW50RmllbGRTZXRFbGVtZW50KTtcbiAgICB0b2dnbGVGb3JtTGlzdGVuZXJzKGN1cnJlbnRGaWVsZFNldCArIDEpO1xuICB9IGVsc2UgaWYgKGNsaWNrZWRCdXR0b24gPT09IHByZXZpb3VzQnV0dG9uKSB7XG4gICAgaGFuZGxlUHJldmlvdXNCdXR0b25DbGljayhjdXJyZW50RmllbGRTZXQsIHRvZ2dsZVRleHRBcmVhQ29tcG9uZW50cyk7XG4gICAgdG9nZ2xlRm9ybUxpc3RlbmVycyhjdXJyZW50RmllbGRTZXQgLSAxKTtcbiAgfSBlbHNlIGlmIChjbGlja2VkQnV0dG9uID09PSBzdWJtaXRCdXR0b24pIHtcbiAgICBjb25zdCBib2R5SlNPTiA9IGZvcm1hdERhdGFGb3JTdWJtaXNzaW9uKGV2ZW50LCBjdXJyZW50RmllbGRTZXRFbGVtZW50KTtcbiAgICBtYWtlRmV0Y2hSZXF1ZXN0KGJvZHlKU09OKTtcbiAgfVxuICAoY3VycmVudEZpZWxkU2V0ID09PSAxKVxuICAgID8gdG9nZ2xlUGhvbmVJbnB1dFNhbml0aXphdGlvbkxpc3RlbmVyKCdhZGQnKVxuICAgIDogdG9nZ2xlUGhvbmVJbnB1dFNhbml0aXphdGlvbkxpc3RlbmVyKCdyZW1vdmUnKTtcbn0iLCJleHBvcnQgZnVuY3Rpb24gY3JlYXRlRm9ybVN0YXRlKCkge1xuICBsZXQgY3VycmVudEZpZWxkU2V0ID0gMTtcblxuICByZXR1cm4ge1xuICAgIGdldEN1cnJlbnRGaWVsZFNldDogKCkgPT4gY3VycmVudEZpZWxkU2V0LFxuICAgIHNldE5ld0ZpZWxkU2V0OiAoaW5kZXgpID0+IGN1cnJlbnRGaWVsZFNldCA9IGluZGV4LFxuICAgIGluY3JlbWVudEZpZWxkU2V0OiAoKSA9PiAgKytjdXJyZW50RmllbGRTZXQsXG4gICAgZGVjcmVtZW50RmllbGRTZXQ6ICgpID0+IC0tY3VycmVudEZpZWxkU2V0XG4gIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGFjY3VtdWxhdGVkRm9ybURhdGFGYWN0b3J5KCkge1xuICBsZXQgYWNjdW11bGF0ZWRGb3JtRGF0YSA9IHt9O1xuXG4gIHJldHVybiB7XG4gICAgdXBkYXRlRmllbGRTZXRGb3JtRGF0YTogKGZvcm1EYXRhQXJyYXksIGZpZWxkU2V0KSA9PiB7XG4gICAgICBhY2N1bXVsYXRlZEZvcm1EYXRhW2ZpZWxkU2V0XSA9IGZvcm1EYXRhQXJyYXk7XG4gICAgfSxcbiAgICBnZXQ6ICgpID0+IGFjY3VtdWxhdGVkRm9ybURhdGEsXG4gICAgY2xlYXI6ICgpID0+IGFjY3VtdWxhdGVkRm9ybURhdGEgPSB7fSxcbiAgICBwcmludDogKCkgPT4ge1xuICAgICAgT2JqZWN0LmVudHJpZXMoYWNjdW11bGF0ZWRGb3JtRGF0YSkuZm9yRWFjaCgoW2tleSwgZm9ybURhdGFBcnJheV0pID0+IHtcbiAgICAgICAgZm9ybURhdGFBcnJheS5mb3JFYWNoKChbZmllbGRLZXksIGZpZWxkVmFsdWVdKSA9PiB7XG4gICAgICAgIH0pO1xuICAgICAgfSk7XG4gICAgfVxuICB9O1xufSIsImltcG9ydCB7IGFkZExpc3RlbmVyLCBnZXRBbGxFbGVtZW50cywgcmVtb3ZlTGlzdGVuZXIsIHNldERpc2FibGVkU3RhdGUsIHRvZ2dsZUNsYXNzIH0gZnJvbSBcIi4uLy4uL3V0aWxpdGllcy9qYWJhc2NyaXB0ei11dGlsaXRpZXNcIjtcbmltcG9ydCB7IGNyZWF0ZUZvcm1TdGF0ZSB9IGZyb20gXCIuLi9mYWN0b3JpZXNcIjtcbmltcG9ydCB7IHByb2Nlc3NEaWFsb2dFbGVtZW50cyB9IGZyb20gXCIuLi9jYWNoZS9kaWFsb2ctZWxlbWVudHMtYW5kLXV0aWx0aWVzXCI7XG5pbXBvcnQgeyBoYW5kbGVEaWFsb2dCdXR0b25zIH0gZnJvbSAnLi9oYW5kbGUtZGlhbG9nLWJ1dHRvbnMnO1xuaW1wb3J0IHsgc3dhcEZpZWxkU2V0LCB0b2dnbGVUZXh0QXJlYUNvbXBvbmVudHMgfSBmcm9tIFwiLi4vY2FjaGUvZGlhbG9nLWVsZW1lbnRzLWFuZC11dGlsdGllc1wiO1xuaW1wb3J0IHsgdG9nZ2xlUGhvbmVJbnB1dFNhbml0aXphdGlvbkxpc3RlbmVyIH0gZnJvbSAnLi9oYW5kbGUtdGVsZXBob25lLWlucHV0LXNhbml0aXphdGlvbic7XG5cbi8vID4gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuLy8gVE9ETzogbWFrZSB0aGlzIG1vZHVsZSBnZW5lcmljL21vZHVsYXIgc28gaXQgY2FuIGJlIHVzZWQgZm9yIHRoZSBcblxuY29uc3QgZm9ybVN0YXRlID0gY3JlYXRlRm9ybVN0YXRlKCk7XG5cbmZ1bmN0aW9uIHJlc2V0TW9kYWwoKSB7XG4gIGNvbnN0IHJlc2V0Q2hhcmFjdGVyQ291bnQgPSAoKSA9PiB7XG4gICAgcHJvY2Vzc0RpYWxvZ0VsZW1lbnRzLmNoYXJhY3RlckNvdW50KCkudGV4dENvbnRlbnQgPSAnMC85OSdcbiAgfTtcblxuICBjb25zdCBjdXJyZW50RmllbGRTZXQgPSBmb3JtU3RhdGUuZ2V0Q3VycmVudEZpZWxkU2V0KCk7XG5cbiAgcHJvY2Vzc0RpYWxvZ0VsZW1lbnRzLmZvcm0oKS5yZXNldCgpO1xuICByZXNldENoYXJhY3RlckNvdW50KCk7XG5cbiAgaWYgKGN1cnJlbnRGaWVsZFNldCAhPT0gMSkge1xuICAgIGNvbnN0IHJlc2V0TmF2aWdhdGlvbkJ1dHRvbnMgPSAoKSA9PiB7XG4gICAgICBzZXREaXNhYmxlZFN0YXRlKHByb2Nlc3NEaWFsb2dFbGVtZW50cy5wcmV2aW91c0J1dHRvbigpLCB0cnVlKTtcbiAgICAgIHNldERpc2FibGVkU3RhdGUocHJvY2Vzc0RpYWxvZ0VsZW1lbnRzLm5leHRCdXR0b24oKSwgZmFsc2UpO1xuICAgIH1cblxuICAgIHJlc2V0TmF2aWdhdGlvbkJ1dHRvbnMoKTtcbiAgICBzd2FwRmllbGRTZXQoY3VycmVudEZpZWxkU2V0LCAxKTtcblxuICAgIGlmIChjdXJyZW50RmllbGRTZXQgPT09IDMpIHtcbiAgICAgIHNldERpc2FibGVkU3RhdGUocHJvY2Vzc0RpYWxvZ0VsZW1lbnRzLnN1Ym1pdEJ1dHRvbigpLCB0cnVlKTtcbiAgICB9XG4gIH1cbiAgZ2V0QWxsRWxlbWVudHMoJ3NlbGVjdCcpLmZvckVhY2goc2VsZWN0ID0+IHRvZ2dsZUNsYXNzKHNlbGVjdCwgJ3JlbW92ZScsICd2YWxpZCcpKTtcbiAgdG9nZ2xlRGlhbG9nVGV4dEFuaW1hdGlvbkNsYXNzKCk7XG4gIHRvZ2dsZVBob25lSW5wdXRTYW5pdGl6YXRpb25MaXN0ZW5lcigncmVtb3ZlJyk7XG4gIHRvZ2dsZVRleHRBcmVhQ29tcG9uZW50cygnZGlzYWJsZScpO1xuICByZW1vdmVMaXN0ZW5lcihwcm9jZXNzRGlhbG9nRWxlbWVudHMuY2xvc2VCdXR0b24oKSwgJ2NsaWNrJywgaW5pdGlhdGVNb2RhbENsb3NlKTtcbn1cblxuZnVuY3Rpb24gY2xvc2VNb2RhbCgpIHtcbiAgY29uc3Qgc3RhcnRUaGVQcm9jZXNzTW9kYWwgPSBwcm9jZXNzRGlhbG9nRWxlbWVudHMubW9kYWwoKTtcblxuICBzdGFydFRoZVByb2Nlc3NNb2RhbC5jbGFzc0xpc3QucmVtb3ZlKCdjbG9zaW5nJyk7XG4gIHN0YXJ0VGhlUHJvY2Vzc01vZGFsLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2FuaW1hdGlvbmVuZCcsIGNsb3NlTW9kYWwpO1xuICBzdGFydFRoZVByb2Nlc3NNb2RhbC5jbG9zZSgpO1xuXG4gIHJlc2V0TW9kYWwoKTtcbn1cblxuZnVuY3Rpb24gaW5pdGlhdGVNb2RhbENsb3NlKCkge1xuICBjb25zdCBzdGFydFRoZVByb2Nlc3NNb2RhbCA9IHByb2Nlc3NEaWFsb2dFbGVtZW50cy5tb2RhbCgpO1xuXG4gIHRvZ2dsZUNsYXNzKFxuICAgIHN0YXJ0VGhlUHJvY2Vzc01vZGFsLFxuICAgICdhZGQnLFxuICAgICdjbG9zaW5nJ1xuICApO1xuXG4gIGFkZExpc3RlbmVyKHN0YXJ0VGhlUHJvY2Vzc01vZGFsLCAnYW5pbWF0aW9uZW5kJywgY2xvc2VNb2RhbCk7XG59XG5cbmZ1bmN0aW9uIHRvZ2dsZURpYWxvZ1RleHRBbmltYXRpb25DbGFzcygpIHtcbiAgY29uc3QgZGlhbG9nU3BsaXRUZXh0ID0gZ2V0QWxsRWxlbWVudHMoJyNkaWFsb2ctaGVhZGluZyAubGV0dGVyJyk7XG5cbiAgaWYgKGRpYWxvZ1NwbGl0VGV4dFswXS5jbGFzc0xpc3QuY29udGFpbnMoJ2FuaW1hdGUtbGV0dGVyJykpIHtcbiAgICBkaWFsb2dTcGxpdFRleHQuZm9yRWFjaChsZXR0ZXIgPT4ge1xuICAgICAgbGV0dGVyLmNsYXNzTGlzdC5yZW1vdmUoJ2FuaW1hdGUtbGV0dGVyJyk7XG4gICAgfSk7XG4gIH0gZWxzZSB7XG4gICAgZGlhbG9nU3BsaXRUZXh0LmZvckVhY2goKGxldHRlciwgaW5kZXgpID0+IHtcbiAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICBsZXR0ZXIuY2xhc3NMaXN0LmFkZCgnYW5pbWF0ZS1sZXR0ZXInKTtcbiAgICAgIH0sIDEyMyAqIChpbmRleCArIDEpKTtcbiAgICB9KTtcbiAgfVxufVxuXG5mdW5jdGlvbiBzaG93UHJvY2Vzc01vZGFsKCkge1xuICBjb25zdCBzdGFydFRoZVByb2Nlc3NNb2RhbCA9IHByb2Nlc3NEaWFsb2dFbGVtZW50cy5tb2RhbCgpO1xuXG4gIHN0YXJ0VGhlUHJvY2Vzc01vZGFsLnNob3dNb2RhbCgpO1xuXG4gIHByb2Nlc3NEaWFsb2dFbGVtZW50cy5uYW1lRmllbGQoKS5mb2N1cygpO1xuICB0b2dnbGVQaG9uZUlucHV0U2FuaXRpemF0aW9uTGlzdGVuZXIoJ2FkZCcpO1xuXG4gIHRvZ2dsZURpYWxvZ1RleHRBbmltYXRpb25DbGFzcygpO1xuXG4gIGFkZExpc3RlbmVyKHByb2Nlc3NEaWFsb2dFbGVtZW50cy5jbG9zZUJ1dHRvbigpLCAnY2xpY2snLCBpbml0aWF0ZU1vZGFsQ2xvc2UpO1xuICBhZGRMaXN0ZW5lcihwcm9jZXNzRGlhbG9nRWxlbWVudHMuYnV0dG9uQ29udGFpbmVyKCksICdjbGljaycsIGhhbmRsZURpYWxvZ0J1dHRvbnMpO1xufVxuXG5leHBvcnQge1xuICBmb3JtU3RhdGUsXG4gIHNob3dQcm9jZXNzTW9kYWxcbn0iLCJmdW5jdGlvbiB0b2dnbGVJc0ludGVyc2VjdGluZ0NsYXNzKGVudHJpZXMpIHtcbiAgZW50cmllcy5mb3JFYWNoKGVudHJ5ID0+IHtcbiAgICBpZiAoZW50cnkuaXNJbnRlcnNlY3RpbmcpIHtcbiAgICAgIGVudHJ5LnRhcmdldC5jbGFzc0xpc3QuYWRkKCdpbnRlcnNlY3RpbmcnKTtcbiAgICB9IGVsc2Uge1xuICAgICAgZW50cnkudGFyZ2V0LmNsYXNzTGlzdC5yZW1vdmUoJ2ludGVyc2VjdGluZycpO1xuICAgIH1cbiAgfSk7XG59XG5cbmxldCBzZWN0aW9uT3B0aW9ucyA9IHtcbiAgdGhyZXNob2xkOiAwLjQ1LFxuICAvLyByb290OiAoVklFV1BPUlQgYnkgZGVmYXVsdC4gTk9UIHJvb3QgZWxlbWVudCksIC8vID8gZGVmYXVsdCBpcyB0aGUgdmlld3BvcnRcblxuXG4gIC8vID4gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgLy8gPiBFeGFtcGxlczpcblxuICAvLyDwn5KtIEJlc3QgZm9yIGFuaW1hdGluZyBlbGVtZW50cyBpbnRvIHZpZXcgb3IgaWYgaXRzIGNydWNpYWwgdGhhdCBhbiBlbGVtZW50IGlzIG9ubHkgdmlzaWJsZSBpZiBpdCBpcyBmdWxseSBpbiB2aWV3IChyZWxhdGl2ZSB0byB0aGUgcm9vdCnigKYgdGhyZXNob2xkIG9mIDEuMCBlbmFibGVzIHRoYXQuIFBlcmhhcHMgdGhlIGNvbnRlbnQgbmVlZHMgdG8gbWVldCBzdWNoIGEgY3JpdGVyYSBiZWZvcmUgYW55IG90aGVyIGFjdGlvbiBjYW4gdGFrZSBwbGFjZS4gXG4gIC8vIPCfkq0gQ2FuIGJlIHVzZWQgV0lUSCByb290TWFyZ2luIHRvIGRlbGF5IHRoZSBhbmltYXRpb24uXG4gIC8vIPCfkq0gWW91IG1pZ2h0IHdhbnQgdG8ga25vdyBleGFjdGx5IHdoZW4gYW4gZWxlbWVudCBpcyBmdWxseSB2aXNpYmxlIHZlcnN1cyBwYXJ0aWFsbHkgZm9yIGFuYWx5dGljYWwgcHVycG9zZXMuIFVzaW5nIGFuIGFycmF5IG9mIHRocmVzaG9sZHMgbGlrZSBbMCwgMC41LCAxXSBsZXRzIHlvdSB0cmlnZ2VyIHRoZSBjYWxsYmFjayBhdCBubyB2aXNpYmlsaXR5ICgwKSwgaGFsZiB2aXNpYmlsaXR5ICgwLjUpLCBhbmQgZnVsbCB2aXNpYmlsaXR5ICgxKS5cblxuICAvLyAqIHRocmVzaG9sZDogMC41LFxuICAvLyA/IHdoZW4gNTAlIG9mIHRoZSBlbGVtZW50IGlzIGluIHZpZXcsIHRoZSBjYWxsYmFjayBmdW5jdGlvbiB3aWxsIGJlIGNhbGxlZFxuXG4gIC8vID4gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuICAvLyDwn5KtIEJlc3QgZm9yIHByZS1sb2FkaW5nIGNvbnRlbnQsbGF6eSBsb2FkaW5nIGltYWdlcyBvciBhdm9pZGluZyBhYnJ1cHQgdHJhbnNpdGlvbnNcbiAgLy8g8J+SrSBDYW4gYmUgdXNlZCBXSVRIIHRocmVzaG9sZCB0byBsb2FkIGZpcnN0IGxvYWQgdGhlIGNvbnRlbnQgd2l0aCByb290TWFyZ2luLCBhbmQgaGFuZGxpbmdcbiAgLy8g8J+SrSBpdHMgYW5pbWF0aW9uIHdpdGggdGhyZXNob2xkLlxuXG4gIC8vICogcm9vdE1hcmdpbjogJy0xMDBweCcsXG4gIC8vID8gd2UgYXJlIHN1YnRyYWN0aW5nIDEwMHB4IGZyb20gdGhlIHZpZXdwb3J0XG4gIC8vID8gdGhlIGNhbGxiYWNrIGZ1bmN0aW9uIHdpbGwgYmUgY2FsbGVkIHdoZW4gdGhlIGVsZW1lbnQgaXMgMTAwcHggZnJvbSB0aGUgdmlld3BvcnRcbiAgLy8gKiByb290TWFyZ2luOiBgJHtwb3NpdGl2ZU51bWJlcn1weGAsXG4gIC8vID8gd2UgYXJlIGFkZGluZyBwb3NpdGl2ZU51bWJlciB0byB0aGUgdmlld3BvcnRcbiAgLy8gPyB0aGUgY2FsbGJhY2sgZnVuY3Rpb24gd2lsbCBiZSBjYWxsZWQgd2hlbiB0aGUgZWxlbWVudCBpcyBwb3NpdGl2ZU51bWJlciBmcm9tIHRoZSB2aWV3cG9ydFxuICAvLyA/IHVzZWZ1bCBmb3IgbGF6eSBsb2FkaW5nIGltYWdlc1xuICAvLyA/IFwid2hlbiBvdXIgaW1hZ2UgaXMgMjUwcHggYXdheSBmcm9tIHRoZSB2aWV3cG9ydCwgbG9hZCB0aGUgaW1hZ2VcIlxuICAvLyA+IC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbiAgLy8gKiByb290OiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuY2FyZC1jb250YWluZXInKSxcbiAgLy8gPyBwYXJlbnQgZWxlbWVudCBvZiB0aGUgZWxlbWVudCB3ZSBhcmUgb2JzZXJ2aW5nICh0aGUgZWxlbWVudCB3ZSBhcmUgb2JzZXJ2aW5nIGlzIHRoZSBjaGlsZClcbiAgLy8gPyB3ZSBhcmUgb2JzZXJ2aW5nIHRoZSBjaGlsZCBlbGVtZW50IGluIHJlbGF0aW9uIHRvIHRoZSBwYXJlbnQgZWxlbWVudFxuICAvLyA/IFRoZSBkZWZhdWx0IGlzIHRoZSB2aWV3cG9ydCAoRG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50KVxufTtcbmNvbnN0IHNlY3Rpb25PYnNlcnZlciA9IG5ldyBJbnRlcnNlY3Rpb25PYnNlcnZlcih0b2dnbGVJc0ludGVyc2VjdGluZ0NsYXNzLCBzZWN0aW9uT3B0aW9ucyk7XG5cblxubGV0IHBhcmFnYXBoT3B0aW9ucyA9IHtcbiAgdGhyZXNob2xkOiAwLjQ1LFxufTtcbmNvbnN0IHBhcmFncmFwaE9ic2VydmVyID0gbmV3IEludGVyc2VjdGlvbk9ic2VydmVyKHRvZ2dsZUlzSW50ZXJzZWN0aW5nQ2xhc3MsIHBhcmFnYXBoT3B0aW9ucyk7XG5cbi8vID4gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxubGV0IHN0YXJ0UHJvY2Vzc09wdGlvbnMgPSB7XG4gIHRocmVzaG9sZDogMC41LFxufTtcbmNvbnN0IHN0YXJ0UHJvY2Vzc0J1dHRvbk9ic2VydmVyID0gbmV3IEludGVyc2VjdGlvbk9ic2VydmVyKHRvZ2dsZUlzSW50ZXJzZWN0aW5nQ2xhc3MsIHN0YXJ0UHJvY2Vzc09wdGlvbnMpO1xuXG4vLyA+IC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbmV4cG9ydCBmdW5jdGlvbiBhY3RpdmF0ZUludGVyc2VjdGlvbk9ic2VydmVycygpIHtcbiAgY29uc3Qgc2VjdGlvbnMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCdzZWN0aW9uJyk7XG4gIGNvbnN0IHBhcmFncmFwaHMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCdwJyk7XG4gIGNvbnN0IHN0YXJ0UHJvY2Vzc0J1dHRvbiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdzdGFydC10aGUtcHJvY2Vzcy1idXR0b24nKTtcblxuICBzZWN0aW9ucy5mb3JFYWNoKHNlY3Rpb24gPT4gc2VjdGlvbk9ic2VydmVyLm9ic2VydmUoc2VjdGlvbikpO1xuICBwYXJhZ3JhcGhzLmZvckVhY2gocGFyYWdyYXBoID0+IHBhcmFncmFwaE9ic2VydmVyLm9ic2VydmUocGFyYWdyYXBoKSk7XG4gIHN0YXJ0UHJvY2Vzc0J1dHRvbk9ic2VydmVyLm9ic2VydmUoc3RhcnRQcm9jZXNzQnV0dG9uKTtcbn0iLCJpbXBvcnQgeyBoYW5kbGVOYXZUb2dnbGVCdXR0b24gfSBmcm9tIFwiLi4vLi4vY29tcG9uZW50cy9jcmVhdGUtaGFtYnVyZ2VyL2hhbmRsZS1oYW1idXJnZXIuanNcIjtcblxuLy8gPiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG5mdW5jdGlvbiBoYW5kbGVOYXZQb3N0Q2xpY2soKSB7XG4gIGNvbnN0IG5hdlRvZ2dsZUJ1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5uYXYtdG9nZ2xlLWJ1dHRvbicpO1xuICBuYXZUb2dnbGVCdXR0b24uY2xpY2soKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGhhbmRsZU5hdkxpbmtQb3N0Q2xpY2soKSB7XG4gIGNvbnN0IHJvb3QgPSBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQ7XG4gIGNvbnN0IHZpZXdwb3J0V2lkdGggPSByb290Lm9mZnNldFdpZHRoO1xuXG4gIGNvbnN0IG5hdlRvZ2dsZUJ1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5uYXYtdG9nZ2xlLWJ1dHRvbicpO1xuICBjb25zdCBuYXZMaW5rcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5uYXYtbGluaycpO1xuXG4gIGlmICghbmF2VG9nZ2xlQnV0dG9uKSByZXR1cm47XG5cbiAgaWYgKHZpZXdwb3J0V2lkdGggPiAxMDI0KSB7XG4gICAgaWYgKG5hdlRvZ2dsZUJ1dHRvbi5hcmlhRXhwYW5kZWQgPT09ICd0cnVlJykgbmF2VG9nZ2xlQnV0dG9uLmNsaWNrKCk7XG4gICAgbmF2VG9nZ2xlQnV0dG9uLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgaGFuZGxlTmF2VG9nZ2xlQnV0dG9uKTtcbiAgICBuYXZMaW5rcy5mb3JFYWNoKG5hdkxpbmsgPT4gbmF2TGluay5yZW1vdmVFdmVudExpc3RlbmVyKCdjbGljaycsIGhhbmRsZU5hdlBvc3RDbGljaykpO1xuICB9IGVsc2Uge1xuICAgIG5hdlRvZ2dsZUJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGhhbmRsZU5hdlRvZ2dsZUJ1dHRvbik7XG4gICAgbmF2TGlua3MuZm9yRWFjaChuYXZMaW5rID0+IG5hdkxpbmsuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBoYW5kbGVOYXZQb3N0Q2xpY2spKTtcbiAgfVxufSIsImZ1bmN0aW9uIHJlbW92ZU5hdkxpbmtIaWdobGlnaHRDbGFzcyhlKSB7XG4gIHRoaXMuY2xhc3NMaXN0LnJlbW92ZSgnaGlnaGxpZ2h0Jyk7XG4gIHRoaXMucmVtb3ZlRXZlbnRMaXN0ZW5lcignYW5pbWF0aW9uZW5kJywgcmVtb3ZlTmF2TGlua0hpZ2hsaWdodENsYXNzKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGFkZE5hdkxpbmtIaWdobGlnaHRDbGFzcygpIHtcbiAgY29uc3Qgc3RhcnRUaGVQcm9jZXNzQnV0dG9uID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3N0YXJ0LXRoZS1wcm9jZXNzLWJ1dHRvbicpO1xuXG4gIHN0YXJ0VGhlUHJvY2Vzc0J1dHRvbi5jbGFzc0xpc3QuYWRkKCdoaWdobGlnaHQnKTtcbiAgc3RhcnRUaGVQcm9jZXNzQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2FuaW1hdGlvbmVuZCcsIHJlbW92ZU5hdkxpbmtIaWdobGlnaHRDbGFzcyk7XG59IiwiLyoqXG4gKiBDcmVhdGVzIGFuIGltYWdlIGVsZW1lbnQuXG4gKiBAcGFyYW0ge3N0cmluZ30gc3JjIC0gVGhlIHNvdXJjZSBVUkwgb2YgdGhlIGltYWdlLlxuICogQHBhcmFtIHtzdHJpbmd9IGlkIC0gVGhlIElEIG9mIHRoZSBpbWFnZS5cbiAqIEBwYXJhbSB7c3RyaW5nfHN0cmluZ1tdfSBjbGFzc05hbWVzIC0gVGhlIGNsYXNzIG9yIGNsYXNzZXMgdG8gYmUgYWRkZWQgdG8gdGhlIGltYWdlLiBDYW4gYmUgYSBzaW5nbGUgc3RyaW5nIGNsYXNzIG5hbWUgb3IgYW4gYXJyYXkgb2YgY2xhc3MgbmFtZXMuXG4gKiBAcGFyYW0ge3N0cmluZ30gYWx0IC0gVGhlIGFsdGVybmF0ZSB0ZXh0IGZvciB0aGUgaW1hZ2UuXG4gKiBAcGFyYW0ge3N0cmluZ30gYXJpYUxhYmVsIC0gVGhlIGFyaWEtbGFiZWwgYXR0cmlidXRlIGZvciB0aGUgaW1hZ2UuXG4gKiBAcGFyYW0ge3N0cmluZ1tdfSBzaXplQXJyYXkgLSBUaGUgYXJyYXkgb2Ygc2l6ZXMgZm9yIHRoZSBpbWFnZSBpbiBmb3JtYXQ6IFdpZHRoIHggSGVpZ2h0LlxuICogQHJldHVybnMge0VsZW1lbnR9IFRoZSBuYXZpZ2F0aW9uIGVsZW1lbnQuXG4gKiBAdGhyb3dzIHtFcnJvcn0gLSBJbnZhbGlkIGlucHV0IHR5cGUuIFBsZWFzZSBwcm92aWRlIHZhbGlkIGlucHV0IHR5cGVzLlxuICovXG5cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVJbWFnZShzcmMsIGlkLCBjbGFzc05hbWVzLCBhbHQsIGFyaWFMYWJlbCwgc2l6ZUFycmF5KSB7XG4gIGlmIChcbiAgICB0eXBlb2YgaWQgIT09ICdzdHJpbmcnIHx8XG4gICAgdHlwZW9mIHNyYyAhPT0gJ3N0cmluZycgfHxcbiAgICB0eXBlb2YgYWx0ICE9PSAnc3RyaW5nJyB8fFxuICAgICEodHlwZW9mIGNsYXNzTmFtZXMgPT09ICdzdHJpbmcnIHx8IEFycmF5LmlzQXJyYXkoY2xhc3NOYW1lcykpIHx8XG4gICAgdHlwZW9mIGFyaWFMYWJlbCAhPT0gJ3N0cmluZydcbiAgKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdJbnZhbGlkIGlucHV0IHR5cGUuIFBsZWFzZSBwcm92aWRlIHZhbGlkIGlucHV0IHR5cGVzLicpO1xuICB9XG5cbiAgY29uc3QgaW1nID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaW1nJyk7XG4gIGltZy5zZXRBdHRyaWJ1dGUoJ2lkJywgaWQpO1xuICBpbWcuc3JjID0gc3JjO1xuICBpbWcuYWx0ID0gYWx0O1xuXG4gIGlmIChjbGFzc05hbWVzKSB7XG4gICAgaWYgKHR5cGVvZiBjbGFzc05hbWVzID09PSAnc3RyaW5nJykge1xuICAgICAgaW1nLmNsYXNzTGlzdC5hZGQoY2xhc3NOYW1lcyk7XG4gICAgfSBlbHNlIGlmIChBcnJheS5pc0FycmF5KGNsYXNzTmFtZXMpKSB7XG4gICAgICBjbGFzc05hbWVzLmZvckVhY2goKGNsYXNzTmFtZSkgPT4gaW1nLmNsYXNzTGlzdC5hZGQoY2xhc3NOYW1lKSk7XG4gICAgfVxuICB9XG5cbiAgaW1nLnNldEF0dHJpYnV0ZSgnYXJpYS1sYWJlbCcsIGFyaWFMYWJlbCk7XG5cbiAgaWYgKHNpemVBcnJheSkge1xuICAgIGNvbnN0IFtoZWlnaHQsIHdpZHRoXSA9IHNpemVBcnJheTtcbiAgICBpbWcuc2V0QXR0cmlidXRlKCdoZWlnaHQnLCBoZWlnaHQpO1xuICAgIGltZy5zZXRBdHRyaWJ1dGUoJ3dpZHRoJywgd2lkdGgpO1xuICB9IGVsc2UgdGhyb3cgbmV3IEVycm9yKCdQbGVhc2UgYWRkIGEgc2l6ZSBhcnJheSBmb3IgdGhlIGltYWdlLicpO1xuXG4gIHJldHVybiBpbWc7XG59XG4iLCJmdW5jdGlvbiBzZXRBdHRyaWJ1dGVzKGVsZW1lbnQsIGF0dHJpYnV0ZXMpIHtcbiAgZm9yIChjb25zdCBrZXkgaW4gYXR0cmlidXRlcykge1xuICAgIGVsZW1lbnQuc2V0QXR0cmlidXRlKGtleSwgYXR0cmlidXRlc1trZXldKTtcbiAgfVxufVxuXG5leHBvcnQgeyBzZXRBdHRyaWJ1dGVzIH07IiwiaW1wb3J0ICcuL2Nhcm91c2VsLnNjc3MnO1xuXG5pbXBvcnQgeyBzZXRBdHRyaWJ1dGVzIH0gZnJvbSAnLi4vLi4vdXRpbGl0aWVzL3NldC1hdHRyaWJ1dGVzLmpzJztcblxuLy8gPiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG5mdW5jdGlvbiBjcmVhdGVDYXJvdXNlbE5hdmlnYXRpb25Db250YWluZXIoaW1hZ2VzQXJyYXkpIHtcbiAgaWYgKCFpbWFnZXNBcnJheS5sZW5ndGgpIHRocm93IG5ldyBFcnJvcignTm8gaW1hZ2VzIHByb3ZpZGVkIGZvciBjYXJvdXNlbC4nKTtcblxuICBjb25zdCBjYXJvdXNlbE5hdmlnYXRpb25CdXR0b25Db250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgY2Fyb3VzZWxOYXZpZ2F0aW9uQnV0dG9uQ29udGFpbmVyLmNsYXNzTGlzdC5hZGQoXG4gICAgJ2Nhcm91c2VsLW5hdmlnYXRpb24tYnV0dG9uLWNvbnRhaW5lcidcbiAgKTtcblxuICBpbWFnZXNBcnJheS5mb3JFYWNoKChpbWFnZSwgaW5kZXgpID0+IHtcbiAgICBjb25zdCBjYXJvdXNlbE5hdmlnYXRpb25CdXR0b24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdidXR0b24nKTtcbiAgICBjYXJvdXNlbE5hdmlnYXRpb25CdXR0b24uY2xhc3NMaXN0LmFkZCgnY2Fyb3VzZWwtbmF2aWdhdGlvbi1idXR0b24nKTtcbiAgICBpZiAoaW5kZXggPT09IDApIGNhcm91c2VsTmF2aWdhdGlvbkJ1dHRvbi5jbGFzc0xpc3QuYWRkKCdhY3RpdmUnKTtcbiAgICBzZXRBdHRyaWJ1dGVzKGNhcm91c2VsTmF2aWdhdGlvbkJ1dHRvbiwge1xuICAgICAgdHlwZTogJ2J1dHRvbicsXG4gICAgICAnYXJpYS1sYWJlbCc6IGBHbyB0byBzbGlkZSAke2luZGV4ICsgMX1gLFxuICAgICAgJ2RhdGEtaW5kZXgnOiBpbmRleCArIDEsXG4gICAgfSk7XG5cbiAgICBjYXJvdXNlbE5hdmlnYXRpb25CdXR0b25Db250YWluZXIuYXBwZW5kKGNhcm91c2VsTmF2aWdhdGlvbkJ1dHRvbik7XG4gIH0pO1xuXG4gIGNvbnN0IGNhcm91c2VsTmF2aWdhdGlvbkNvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICBjYXJvdXNlbE5hdmlnYXRpb25Db250YWluZXIuY2xhc3NMaXN0LmFkZCgnY2Fyb3VzZWwtbmF2aWdhdGlvbi1jb250YWluZXInKTtcbiAgY2Fyb3VzZWxOYXZpZ2F0aW9uQ29udGFpbmVyLmFwcGVuZENoaWxkKGNhcm91c2VsTmF2aWdhdGlvbkJ1dHRvbkNvbnRhaW5lcik7XG5cbiAgcmV0dXJuIGNhcm91c2VsTmF2aWdhdGlvbkNvbnRhaW5lcjtcbn1cblxuZnVuY3Rpb24gY3JlYXRlQ2Fyb3VzZWxTbGlkZUNvbnRhaW5lcihpbWFnZXNBcnJheSkge1xuICBpZiAoIWltYWdlc0FycmF5IHx8ICFpbWFnZXNBcnJheS5sZW5ndGgpIHRocm93IG5ldyBFcnJvcignTm8gaW1hZ2VzIHByb3ZpZGVkIGZvciBjYXJvdXNlbC4nKTtcblxuICBjb25zdCBjYXJvdXNlbFNsaWRlQ29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gIGNhcm91c2VsU2xpZGVDb250YWluZXIuY2xhc3NMaXN0LmFkZCgnY2Fyb3VzZWwtc2xpZGUtY29udGFpbmVyJyk7XG5cbiAgaW1hZ2VzQXJyYXkuZm9yRWFjaCgoaW1hZ2UsIGluZGV4KSA9PiB7XG4gICAgY29uc3QgaW1hZ2VGaWdjYXB0aW9uRWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2ZpZ2NhcHRpb24nKTtcbiAgICBpbWFnZUZpZ2NhcHRpb25FbGVtZW50LmNsYXNzTGlzdC5hZGQoJ2Nhcm91c2VsLWltYWdlLWNhcHRpb24nKTtcbiAgICBpbWFnZUZpZ2NhcHRpb25FbGVtZW50LnRleHRDb250ZW50ID0gaW1hZ2UuYWx0O1xuXG4gICAgY29uc3QgaW1hZ2VFbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaW1nJyk7XG4gICAgaW1hZ2VFbGVtZW50LmNsYXNzTGlzdC5hZGQoJ2Nhcm91c2VsLWltYWdlJywgJ25vbi1pbnRlcmFjdGl2ZScpO1xuICAgIHNldEF0dHJpYnV0ZXMoaW1hZ2VFbGVtZW50LCB7XG4gICAgICBzcmM6IGltYWdlLnNyYyxcbiAgICAgIGFsdDogaW1hZ2UuYWx0LFxuICAgIH0pO1xuXG4gICAgY29uc3QgaW1hZ2VJbmRleFNwYW5FbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3BhbicpO1xuICAgIGltYWdlSW5kZXhTcGFuRWxlbWVudC5jbGFzc0xpc3QuYWRkKCdjYXJvdXNlbC1pbWFnZS1pbmRleCcpO1xuICAgIGltYWdlSW5kZXhTcGFuRWxlbWVudC50ZXh0Q29udGVudCA9IGAkeyBpbmRleCArIDEgfS8keyBpbWFnZXNBcnJheS5sZW5ndGggfWA7XG5cbiAgICBjb25zdCBpbWFnZUZpZ3VyZUVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdmaWd1cmUnKTtcbiAgICBpbWFnZUZpZ3VyZUVsZW1lbnQuY2xhc3NMaXN0LmFkZCgnY2Fyb3VzZWwtaW1hZ2UtY29udGFpbmVyJyk7XG4gICAgaW1hZ2VGaWd1cmVFbGVtZW50LmFwcGVuZChcbiAgICAgIGltYWdlSW5kZXhTcGFuRWxlbWVudCxcbiAgICAgIGltYWdlRWxlbWVudCxcbiAgICAgIGltYWdlRmlnY2FwdGlvbkVsZW1lbnRcbiAgICApO1xuXG4gICAgY29uc3QgY2Fyb3VzZWxTbGlkZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgIGNhcm91c2VsU2xpZGUuY2xhc3NMaXN0LmFkZCgnY2Fyb3VzZWwtc2xpZGUnKTtcbiAgICBpZiAoaW5kZXggPT09IDApIGNhcm91c2VsU2xpZGUuY2xhc3NMaXN0LmFkZCgnYWN0aXZlJyk7XG4gICAgY2Fyb3VzZWxTbGlkZS5zZXRBdHRyaWJ1dGUoJ2RhdGEtaW5kZXgnLCBpbmRleCArIDEpO1xuICAgIGNhcm91c2VsU2xpZGUuYXBwZW5kKGltYWdlRmlndXJlRWxlbWVudCk7XG4gIFxuICAgIGNhcm91c2VsU2xpZGVDb250YWluZXIuYXBwZW5kKGNhcm91c2VsU2xpZGUpO1xuICB9KTtcblxuICByZXR1cm4gY2Fyb3VzZWxTbGlkZUNvbnRhaW5lcjtcbn1cblxuZnVuY3Rpb24gY3JlYXRlQ2Fyb3VzZWxDb250YWluZXIoaW1hZ2VzQXJyYXkpIHtcbiAgY29uc3QgcmlnaHRBcnJvdyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpO1xuICByaWdodEFycm93LmNsYXNzTGlzdC5hZGQoJ2Fycm93JywgJ3JpZ2h0LWFycm93JywgJ2Nhcm91c2VsLWFycm93Jyk7XG4gIHNldEF0dHJpYnV0ZXMocmlnaHRBcnJvdywge1xuICAgIHR5cGU6ICdidXR0b24nLFxuICAgICdhcmlhLWxhYmVsJzogJ05leHQnLFxuICB9KTtcblxuICBjb25zdCBjYXJvdXNlbFNsaWRlcyA9IGNyZWF0ZUNhcm91c2VsU2xpZGVDb250YWluZXIoaW1hZ2VzQXJyYXkpO1xuXG4gIGNvbnN0IGxlZnRBcnJvdyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpO1xuICBsZWZ0QXJyb3cuY2xhc3NMaXN0LmFkZCgnYXJyb3cnLCAnbGVmdC1hcnJvdycsICdjYXJvdXNlbC1hcnJvdycpO1xuICBzZXRBdHRyaWJ1dGVzKGxlZnRBcnJvdywge1xuICAgIHR5cGU6ICdidXR0b24nLFxuICAgICdhcmlhLWxhYmVsJzogJ1ByZXZpb3VzJyxcbiAgfSk7XG5cbiAgY29uc3QgY2Fyb3VzZWxDb250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgY2Fyb3VzZWxDb250YWluZXIuY2xhc3NMaXN0LmFkZCgnY2Fyb3VzZWwtY29udGFpbmVyJyk7XG4gIGNhcm91c2VsQ29udGFpbmVyLmFwcGVuZChsZWZ0QXJyb3csIGNhcm91c2VsU2xpZGVzLCByaWdodEFycm93KTtcblxuICByZXR1cm4gY2Fyb3VzZWxDb250YWluZXI7XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZUNhcm91c2VsKGltYWdlc0FycmF5KSB7XG4gIGNvbnN0IGNhcm91c2VsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZmlndXJlJyk7XG4gIGNhcm91c2VsLmNsYXNzTGlzdC5hZGQoJ2Nhcm91c2VsJyk7XG5cbiAgY29uc3QgY2Fyb3VzZWxDb250YWluZXIgPSBjcmVhdGVDYXJvdXNlbENvbnRhaW5lcihpbWFnZXNBcnJheSk7XG4gIGNvbnN0IGNhcm91c2VsTmF2aWdhdGlvbkNvbnRhaW5lciA9XG4gICAgY3JlYXRlQ2Fyb3VzZWxOYXZpZ2F0aW9uQ29udGFpbmVyKGltYWdlc0FycmF5KTtcblxuICBjYXJvdXNlbC5hcHBlbmQoY2Fyb3VzZWxDb250YWluZXIsIGNhcm91c2VsTmF2aWdhdGlvbkNvbnRhaW5lcik7XG5cbiAgcmV0dXJuIGNhcm91c2VsO1xufVxuXG5leHBvcnQgeyBjcmVhdGVDYXJvdXNlbCB9OyIsIlxuXG4vLyAqIENPTlRST0xMRVJTXG5pbXBvcnQgeyBnZXRDb250cm9sbGVkRWxlbWVudHMgfSBmcm9tICcuL2pzL21ldGEvZ2V0LWNvbnRyb2xsZXJzLmpzJztcblxuLy8gKiBIQU5ETEVSU1xuaW1wb3J0IHsgaGFuZGxlSW5pdGlhbERPTUludGVyYWN0aXZpdHkgfSBmcm9tICcuL2pzL21ldGEvaGFuZGxlLWluaXRpYWwtZG9tLWludGVyYWN0aXZpdHkuanMnO1xuXG4vLyAqIE1BUktVUFxuaW1wb3J0IHsgY3JlYXRlRE9NIH0gZnJvbSAnLi9qcy9tZXRhL2NyZWF0ZS1kb20uanMnO1xuXG4vLyAqIE1PRElGSUVSU1xuaW1wb3J0IHsgbW9kaWZ5RE9NIH0gZnJvbSAnLi9qcy9tZXRhL21vZGlmeS1kb20uanMnO1xuXG4vLyA+IC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbmxldCBjb250cm9sbGVkRWxlbWVudHM7XG5cbmZ1bmN0aW9uIGFwcEluaXQoKSB7XG4gIGNyZWF0ZURPTSgpO1xuICBtb2RpZnlET00oKTtcbiAgaGFuZGxlSW5pdGlhbERPTUludGVyYWN0aXZpdHkoKTtcbiAgY29udHJvbGxlZEVsZW1lbnRzID0gZ2V0Q29udHJvbGxlZEVsZW1lbnRzKCk7XG59XG5cbi8vIPCfkq0gcHJlc3NTdGFydFxuYXBwSW5pdCgpOyAvLyDwn5qAXG5cbmV4cG9ydCB7IGNvbnRyb2xsZWRFbGVtZW50cyB9O1xuXG4vLyA+IC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbi8vIPCfkq0gcGxheUdyb3VuZCDipLXvuI8iLCJleHBvcnQgZnVuY3Rpb24gY3JlYXRlU3BsaXRUZXh0RnJhZ21lbnQoZWxlbWVudCwgaWQpIHtcbiAgY29uc3Qgc3BsaXRUZXh0RnJhZ21lbnQgPSBkb2N1bWVudC5jcmVhdGVEb2N1bWVudEZyYWdtZW50KCk7XG4gIGNvbnN0IHRleHQgPSBlbGVtZW50LnRleHRDb250ZW50O1xuXG4gIHRleHQuc3BsaXQoJycpLmZvckVhY2goKGxldHRlciwgaW5kZXgpID0+IHtcbiAgICBjb25zdCBsZXR0ZXJTcGFuID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3BhbicpO1xuICAgIGxldHRlclNwYW4uc2V0QXR0cmlidXRlKCdpZCcsIGAke2lkfS0ke2luZGV4ICsgMX1gKTtcbiAgICBsZXR0ZXJTcGFuLmNsYXNzTGlzdC5hZGQoJ2xldHRlcicpO1xuXG4gICAgLy8gVXNlIGEgbm9uLWJyZWFraW5nIHNwYWNlIGZvciBzcGFjZXMgdG8gZW5zdXJlIHRoZXkgYXJlIHByZXNlcnZlZFxuICAgIGxldHRlclNwYW4udGV4dENvbnRlbnQgPSBsZXR0ZXIgPT09ICcgJyA/ICdcXHUwMEEwJyA6IGxldHRlcjtcblxuICAgIHNwbGl0VGV4dEZyYWdtZW50LmFwcGVuZENoaWxkKGxldHRlclNwYW4pO1xuICB9KTtcblxuICByZXR1cm4gc3BsaXRUZXh0RnJhZ21lbnQ7XG59XG4iLCJpbXBvcnQgeyBjcmVhdGVTcGxpdFRleHRGcmFnbWVudCB9IGZyb20gXCIuLi9zcGVjaWFsLWVmZmVjdHMvc3BsaXQtdGV4dFwiO1xuXG4vLyA+IC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbmV4cG9ydCBmdW5jdGlvbiBzcGxpdFRoZVByb2Nlc3NIZWFkaW5nVGV4dCgpIHtcbiAgY29uc3QgZGlhbG9nSGVhZGluZyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdkaWFsb2ctaGVhZGluZycpO1xuXG4gIC8vIFBBUkFNOiBjcmVhdGVTcGxpdFRleHRGcmFnbWVudChlbGVtZW50VG9BcHBlbmRGcmFnbWVudFRvLCBpZEZvckVhY2hMZXR0ZXJQbHVzUG9zaXRpb25JbmRleClcbiAgY29uc3QgZGlhbG9nU3BsaXRUZXh0ID0gY3JlYXRlU3BsaXRUZXh0RnJhZ21lbnQoZGlhbG9nSGVhZGluZywgJ3NwbGl0LXRleHQnKTtcblxuICBkaWFsb2dIZWFkaW5nLnRleHRDb250ZW50ID0gJyc7XG5cbiAgZGlhbG9nSGVhZGluZy5hcHBlbmRDaGlsZChkaWFsb2dTcGxpdFRleHQpO1xufSIsIi8vICogQ09NUE9ORU5UUyBcbmltcG9ydCB7IGNyZWF0ZUhlYWRlciB9IGZyb20gJy4uL21hcmt1cC9oZWFkZXIuanMnO1xuaW1wb3J0IHsgY3JlYXRlQ2FsbFRvQWN0aW9uU2VjdGlvbiB9IGZyb20gJy4uL21hcmt1cC9jYWxsLXRvLWFjdGlvbi5qcyc7XG5pbXBvcnQgeyBjcmVhdGVDb25uZWN0aW9uc1NlY3Rpb24gfSBmcm9tICcuLi9tYXJrdXAvY29ubmVjdGlvbnMuanMnO1xuaW1wb3J0IHsgY3JlYXRlV2hvQXJlV2VTZWN0aW9uIH0gZnJvbSAnLi4vbWFya3VwL3doby1hcmUtd2UuanMnO1xuaW1wb3J0IHsgY3JlYXRlSG93RG9lc0l0V29ya1NlY3Rpb24gfSBmcm9tICcuLi9tYXJrdXAvaG93LWRvZXMtaXQtd29yay5qcyc7XG5pbXBvcnQgeyBjcmVhdGVTdGFydFRoZVByb2Nlc3NTZWN0aW9uIH0gZnJvbSAnLi4vbWFya3VwL3N0YXJ0LXRoZS1wcm9jZXNzLmpzJztcbmltcG9ydCB7IGNyZWF0ZUZvb3RlciB9IGZyb20gJy4uL21hcmt1cC9mb290ZXIuanMnO1xuaW1wb3J0IHsgY3JlYXRlUmVzcG9uc2VNb2RhbCB9IGZyb20gJy4uL21hcmt1cC9jcmVhdGUtcmVzcG9uc2UubW9kYWwuanMnO1xuXG4vLyAqIERBVEFcbmltcG9ydCBjb25uZWN0aW9ucyBmcm9tICcuLi8uLi9qc29uL2Nvbm5lY3Rpb25zLmpzb24nIHdpdGggeyB0eXBlOiAnanNvbicgfTtcbmltcG9ydCBjYXJvdXNlbEltYWdlcyBmcm9tICcuLi8uLi9qc29uL2Nhcm91c2VsLWltYWdlcy5qc29uJyB3aXRoIHsgdHlwZTogJ2pzb24nIH07XG5pbXBvcnQgaW5zdHJ1Y3Rpb25zIGZyb20gJy4uLy4uL2pzb24vaW5zdHJ1Y3Rpb25zLmpzb24nIHdpdGggeyB0eXBlOiAnanNvbicgfTtcbmltcG9ydCBmb3JtIGZyb20gJy4uLy4uL2pzb24vZm9ybS5qc29uJyB3aXRoIHsgdHlwZTogJ2pzb24nIH07XG5pbXBvcnQgY29tcGFueUluZm8gZnJvbSAnLi4vLi4vanNvbi9jb21wYW55LWluZm8uanNvbicgd2l0aCB7IHR5cGU6ICdqc29uJyB9O1xuXG4vLyAqIFNUWUxFU1xuaW1wb3J0ICcuLi8uLi9zYXNzL21haW4uc2Nzcyc7XG5cbi8vID4gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZURPTSgpIHtcbiAgY29uc3QgY29udGVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdjb250ZW50Jyk7XG5cbiAgY29udGVudC5hcHBlbmQoXG4gICAgY3JlYXRlSGVhZGVyKCksXG4gICAgY3JlYXRlQ2FsbFRvQWN0aW9uU2VjdGlvbigpLFxuICAgIGNyZWF0ZUNvbm5lY3Rpb25zU2VjdGlvbihjb25uZWN0aW9ucyksXG4gICAgY3JlYXRlV2hvQXJlV2VTZWN0aW9uKGNhcm91c2VsSW1hZ2VzKSxcbiAgICBjcmVhdGVIb3dEb2VzSXRXb3JrU2VjdGlvbihpbnN0cnVjdGlvbnMpLFxuICAgIGNyZWF0ZVN0YXJ0VGhlUHJvY2Vzc1NlY3Rpb24oZm9ybSksXG4gICAgY3JlYXRlRm9vdGVyKGNvbXBhbnlJbmZvKSxcbiAgICBjcmVhdGVSZXNwb25zZU1vZGFsKClcbiAgKTtcbn0iLCIvLyAqIEFTU0VUU1xuaW1wb3J0IGN5Y2xvbmVDIGZyb20gJy4uLy4uL2Fzc2V0cy9tZWRpYS9sb2dvcy9pbWFnZXMvYW5pbWF0ZWQvMTIzcHgvMi1jLXdoaXRlLW1hdHRlLndlYnAnXG5cbi8vICogREFUQVxuaW1wb3J0IG5hdkxpc3REYXRhIGZyb20gJy4uLy4uL2pzb24vbmF2LWxpbmtzLmpzb24nIHdpdGggeyB0eXBlOiAnanNvbicgfTtcblxuLy8gKiBNQVJLVVAgVVRJVExJVElFU1xuaW1wb3J0IHsgY3JlYXRlTmF2IH0gZnJvbSAnLi4vLi4vdXRpbGl0aWVzL21hcmtkb3duL2NyZWF0ZS1uYXYuanMnO1xuaW1wb3J0IHsgY3JlYXRlSW1hZ2UgfSBmcm9tICcuLi8uLi91dGlsaXRpZXMvbWFya2Rvd24vY3JlYXRlLWltYWdlLmpzJztcbmltcG9ydCB7IGNyZWF0ZUhhbWJ1cmdlciB9IGZyb20gJy4uLy4uL2NvbXBvbmVudHMvY3JlYXRlLWhhbWJ1cmdlci9jcmVhdGUtaGFtYnVyZ2VyLmpzJztcblxuLy8gPiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4vKipcbiAqIEVsZW1lbnQgSWRlbnRpZmllcnM6XG4gKiBAbG9nbyA8aW1nPiAtPiAjaGVhZGVyLWxvZ28uY29tcGFueS1sb2dvXG4gKiBAbG9nb1RleHQgPGgxPiAtPiAjaGVhZGVyLWxvZ28tdGV4dCAuY29tcGFueS1uYW1lXG4gKi9cblxuZnVuY3Rpb24gY3JlYXRlTmF2SGVhZGluZygpIHtcbiAgY29uc3QgaGVhZGluZyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2gyJyk7XG4gIGhlYWRpbmcuc2V0QXR0cmlidXRlKCdpZCcsICduYXYtaGVhZGluZycpO1xuICBoZWFkaW5nLnRleHRDb250ZW50ID0gJ01haW4gTWVudSc7XG5cbiAgcmV0dXJuIGhlYWRpbmc7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVIZWFkZXIoKSB7XG4gIGNvbnN0IGhlYWRlciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2hlYWRlcicpO1xuXG4gIGNvbnN0IGNvbnRlbnRDb250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgY29udGVudENvbnRhaW5lci5zZXRBdHRyaWJ1dGUoJ2NsYXNzJywgJ2NvbnRlbnQtY29udGFpbmVyJyk7XG5cbiAgLy8gc3JjLCBpZCwgY2xhc3NOYW1lcywgYWx0LCBhcmlhTGFiZWxcbiAgY29uc3QgbG9nbyA9IGNyZWF0ZUltYWdlKFxuICAgIGN5Y2xvbmVDLFxuICAgICdoZWFkZXItbG9nbycsXG4gICAgJ2NvbXBhbnktbG9nbycsXG4gICAgJ0N5Y2xvbmUgU3R1ZGlvcyBMb2dvJyxcbiAgICAnQ3ljbG9uZSBTdHVkaW9zIExvZ28nLFxuICAgIFsgJzEyM3B4JywgJzEyM3B4JyBdXG4gICk7XG5cbiAgY29uc3QgbG9nb0xpbmsgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdhJyk7XG4gIGxvZ29MaW5rLnNldEF0dHJpYnV0ZSgnaWQnLCAnaGVhZGVyLWxvZ28tbGluaycpO1xuICBsb2dvTGluay5zZXRBdHRyaWJ1dGUoJ2hyZWYnLCAnLycpO1xuICBsb2dvTGluay5hcHBlbmQobG9nbyk7XG5cbiAgY29uc3QgbG9nb1RleHQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdoNCcpO1xuICBsb2dvVGV4dC5zZXRBdHRyaWJ1dGUoJ2lkJywgJ2hlYWRlci1sb2dvLXRleHQnKTtcbiAgbG9nb1RleHQuY2xhc3NMaXN0LmFkZCgnY29tcGFueS1uYW1lJyk7XG4gIGxvZ29UZXh0LnNldEF0dHJpYnV0ZSgnYXJpYS1sYWJlbCcsICdDb2xsZWN0aXZlIENsb3RoJyk7XG4gIGxvZ29UZXh0LnRleHRDb250ZW50ID0gJ2NvbGxlY3RpdmUgY2xvdGgnO1xuXG4gIGNvbnN0IGhlYWRlckxvZ29Db250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTsgXG4gIGhlYWRlckxvZ29Db250YWluZXIuc2V0QXR0cmlidXRlKCdpZCcsICdoZWFkZXItbG9nby1jb250YWluZXInKTtcbiAgaGVhZGVyTG9nb0NvbnRhaW5lci5hcHBlbmQobG9nb0xpbmssIGxvZ29UZXh0KTtcblxuICBjb25zdCBoYW1idXJnZXIgPSBjcmVhdGVIYW1idXJnZXIoJ25hdicpO1xuXG4gIGNvbnN0IG5hdiA9IGNyZWF0ZU5hdihuYXZMaXN0RGF0YSk7XG4gIG5hdi5wcmVwZW5kKGNyZWF0ZU5hdkhlYWRpbmcoKSk7XG5cbiAgY29udGVudENvbnRhaW5lci5hcHBlbmQoXG4gICAgaGVhZGVyTG9nb0NvbnRhaW5lcixcbiAgICBoYW1idXJnZXIsXG4gICAgbmF2XG4gICk7XG5cbiAgaGVhZGVyLmFwcGVuZChjb250ZW50Q29udGFpbmVyKTtcblxuICByZXR1cm4gaGVhZGVyXG59XG5cblxuIiwiaW1wb3J0ICcuL2hhbWJ1cmdlci5zY3NzJztcblxuLy8gKiBVVElMSVRJRVNcbmltcG9ydCB7IHNldEF0dHJpYnV0ZXMgfSBmcm9tICcuLi8uLi91dGlsaXRpZXMvc2V0LWF0dHJpYnV0ZXMuanMnO1xuXG4vLyA+IC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG5mdW5jdGlvbiBjcmVhdGVIYW1idXJnZXIoYXJpYUNvbnRyb2xzSUQpIHtcbiAgY29uc3QgbmF2VG9nZ2xlQmFycyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICBuYXZUb2dnbGVCYXJzLmNsYXNzTGlzdC5hZGQoJ25hdi10b2dnbGUtYmFycycpO1xuXG4gIGNvbnN0IG5hdlRvZ2dsZUJ1dHRvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpO1xuICBuYXZUb2dnbGVCdXR0b24uY2xhc3NMaXN0LmFkZCgnbmF2LXRvZ2dsZS1idXR0b24nKTtcbiAgc2V0QXR0cmlidXRlcyhuYXZUb2dnbGVCdXR0b24sIHtcbiAgICAnYXJpYS1sYWJlbCc6ICdPcGVuIE5hdmlnYXRpb24gTWVudScsXG4gICAgJ2FyaWEtZXhwYW5kZWQnOiBmYWxzZSxcbiAgICAnYXJpYS1jb250cm9scyc6IGFyaWFDb250cm9sc0lELFxuICB9KTtcbiAgbmF2VG9nZ2xlQnV0dG9uLmFwcGVuZENoaWxkKG5hdlRvZ2dsZUJhcnMpO1xuXG4gIHJldHVybiBuYXZUb2dnbGVCdXR0b247XG59XG5cbmV4cG9ydCB7IGNyZWF0ZUhhbWJ1cmdlciB9O1xuIiwiLyoqXG4gKiBDcmVhdGVzIHRoZSBuYXZpZ2F0aW9uIGVsZW1lbnQuXG4gKiBAcGFyYW0ge2FycmF5fSBqc29uQXJyYXkgQW4gYXJyYXkgb2YgYW5vbnltb3VzIG9iamVjdHMgd2l0aCBzdHJ1Y3R1cmU6IFxuICoge3RleHRDb250ZW50OiBURVhUX0NPTlRFTlQgLGhyZWY6IEhSRUZ9XG4gKiBAcmV0dXJucyB7RWxlbWVudH0gVGhlIG5hdmlnYXRpb24gZWxlbWVudC5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZU5hdihqc29uQXJyYXkpIHtcbiAgY29uc3QgbmF2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnbmF2Jyk7XG4gIFxuICBjb25zdCB1bCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3VsJyk7XG4gIHVsLmNsYXNzTGlzdC5hZGQoJ25hdi11bCcpO1xuXG4gIGpzb25BcnJheS5mb3JFYWNoKGxpbmsgPT4ge1xuICAgIGNvbnN0IGxpID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnbGknKTtcbiAgICBsaS5jbGFzc0xpc3QuYWRkKCduYXYtaXRlbScpO1xuXG4gICAgY29uc3QgYSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2EnKTtcbiAgICBhLmNsYXNzTGlzdC5hZGQoJ25hdi1saW5rJyk7XG5cbiAgICBhLnRleHRDb250ZW50ID0gbGluay50ZXh0Q29udGVudDtcbiAgICBhLmhyZWYgPSBsaW5rLmhyZWY7XG5cbiAgICBsaS5hcHBlbmRDaGlsZChhKTtcbiAgICB1bC5hcHBlbmRDaGlsZChsaSk7XG4gIH0pO1xuXG4gIG5hdi5hcHBlbmRDaGlsZCh1bCk7XG5cbiAgcmV0dXJuIG5hdjtcbn1cbiIsImltcG9ydCB7IGNyZWF0ZUltYWdlIH0gZnJvbSAnLi4vLi4vdXRpbGl0aWVzL21hcmtkb3duL2NyZWF0ZS1pbWFnZSc7XG5cbmltcG9ydCBjYWxsVG9BY3Rpb25JbWFnZU9uZSBmcm9tICcuLi8uLi9qc29uL2NhbGwtdG8tYWN0aW9uLmpzb24nIHdpdGggeyB0eXBlOiAnanNvbicgfTtcblxuLy8gPiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4vLyA+IC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbi8qKlxuICogRWxlbWVudCBJZGVudGlmaWVyczpcbiAgKiBAY2FsbFRvQWN0aW9uTGVmdCA8ZGl2PiAtPiAjY2FsbC10by1hY3Rpb24tbGVmdFxuICAqIEBoZWFkaW5nIDxoMT4gLT4gI2NhbGwtdG8tYWN0aW9uLWhlYWRpbmdcbiAgKiBAYWlUZXh0Tm9kZSAgPHNwYW4+IC0+IC5jYWxsLXRvLWFjdGlvbi1haVxuICAqIEBzdWJoZWFkaW5nIDxoMz4gLT4gI2NhbGwtdG8tYWN0aW9uLXN1YmhlYWRpbmdcbiAgKiBAdGV4dENvbnRlbnQgPHA+IC0+IC5hcnRpY2xlLXRleHQtY29udGVudFxuICovXG5cbmZ1bmN0aW9uIGNyZWF0ZUNhbGxUb0FjdGlvbkxlZnQoKSB7XG4gIGNvbnN0IGNhbGxUb0FjdGlvbkxlZnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgY2FsbFRvQWN0aW9uTGVmdC5zZXRBdHRyaWJ1dGUoJ2lkJywgJ2NhbGwtdG8tYWN0aW9uLWxlZnQnKTtcblxuICBjb25zdCBzcGVjaWFsU3BhbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NwYW4nKTtcbiAgc3BlY2lhbFNwYW4uY2xhc3NMaXN0LmFkZCgnY2xpcHBlZC10ZXh0Jyk7XG4gIHNwZWNpYWxTcGFuLnRleHRDb250ZW50ID0gJ3Nob3cgc29saWRhcml0eSBpbiBzdHlsZScgKyAnICc7XG5cbiAgY29uc3QgaGVhZGluZ0Vtb2ppU3BhbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NwYW4nKTsgIFxuICBoZWFkaW5nRW1vamlTcGFuLmNsYXNzTGlzdC5hZGQoJ2Vtb2ppJywgJ2hlYWRpbmctZW1vamknKTtcbiAgaGVhZGluZ0Vtb2ppU3Bhbi50ZXh0Q29udGVudCA9ICfwn5iOJztcbiAgXG4gIGNvbnN0IGhlYWRpbmcgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdoMScpO1xuICBoZWFkaW5nLnNldEF0dHJpYnV0ZSgnaWQnLCAnY2FsbC10by1hY3Rpb24taGVhZGluZycpO1xuICBoZWFkaW5nLmFwcGVuZChzcGVjaWFsU3BhbiwgaGVhZGluZ0Vtb2ppU3Bhbik7XG5cbiAgY29uc3QgbGVmdFRleHROb2RlID0gZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoJ2ltcGxlbWVudGluZycgKyAnICcpO1xuICBjb25zdCBhaVRleHROb2RlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3BhbicpO1xuICBhaVRleHROb2RlLnRleHRDb250ZW50ID0gJ0FJJztcbiAgYWlUZXh0Tm9kZS5jbGFzc0xpc3QuYWRkKCdjYWxsLXRvLWFjdGlvbi1haScpO1xuICBjb25zdCByaWdodFRleHROb2RlID0gZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoJyAnICsgJ2luIGNyZWF0aXZlIGRlc2lnbi4nKTtcblxuICBjb25zdCBzdWJoZWFkaW5nID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaDMnKTtcbiAgc3ViaGVhZGluZy5zZXRBdHRyaWJ1dGUoJ2lkJywgJ2NhbGwtdG8tYWN0aW9uLXN1YmhlYWRpbmcnKTtcbiAgc3ViaGVhZGluZy5hcHBlbmQobGVmdFRleHROb2RlLCBhaVRleHROb2RlLCByaWdodFRleHROb2RlKTtcblxuICBjb25zdCBwYXJhZ3JhcGhPbmUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdwJyk7XG4gIHBhcmFncmFwaE9uZS5jbGFzc0xpc3QuYWRkKCdhcnRpY2xlLXRleHQtY29udGVudCcpO1xuICBwYXJhZ3JhcGhPbmUudGV4dENvbnRlbnQgPVxuICAgICdPdXIgdGVhbSwgYSBibGVuZCBvZiBkZXNpZ25lcnMsIGFwcGFyZWwgbWFudWZhY3R1cmVycywgYW5kIGJ1c2luZXNzIGV4cGVydHMsIHNwZWNpYWxpemVzIGluIGdlbmVyYXRpbmcgYmVzcG9rZSBhcHBhcmVsIHRoYXQgcmVmbGVjdHMgdGhlIGRpc3RpbmN0IGlkZW50aXR5IG9mIGVhY2ggY29sbGVjdGl2ZSB3ZSB3b3JrIHdpdGguJztcbiAgXG4gIGNvbnN0IHBhcmFncmFwaFR3byA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3AnKTsgXG4gIHBhcmFncmFwaFR3by5jbGFzc0xpc3QuYWRkKCdhcnRpY2xlLXRleHQtY29udGVudCcpO1xuICBwYXJhZ3JhcGhUd28udGV4dENvbnRlbnQgPSAnV2Ugb2ZmZXIgYSBjb21wcmVoZW5zaXZlIHNlcnZpY2UgdGhhdCBzZWFtbGVzc2x5IGludGVncmF0ZXMgZGVzaWduLCBwcm9kdWN0aW9uLCBhbmQgZGVsaXZlcnksIGVuc3VyaW5nIGEgdGFpbG9yZWQgZXhwZXJpZW5jZSBmcm9tIHN0YXJ0IHRvIGZpbmlzaC4nO1xuXG4gIGNvbnN0IGNhbGxUb0FjdGlvbkFydGljbGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdhcnRpY2xlJyk7XG4gIGNhbGxUb0FjdGlvbkFydGljbGUuY2xhc3NMaXN0LmFkZCgnY2FsbC10by1hY3Rpb24tdGV4dC1jb250ZW50Jyk7XG4gIGNhbGxUb0FjdGlvbkFydGljbGUuYXBwZW5kKGhlYWRpbmcsIHN1YmhlYWRpbmcsIHBhcmFncmFwaE9uZSwgcGFyYWdyYXBoVHdvKTtcblxuICBjYWxsVG9BY3Rpb25MZWZ0LmFwcGVuZChjYWxsVG9BY3Rpb25BcnRpY2xlKTtcblxuICByZXR1cm4gY2FsbFRvQWN0aW9uTGVmdDtcbn1cblxuLy8gPiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4vKipcbiAqIEVsZW1lbnQgSWRlbnRpZmllcnM6XG4gKiBAY2FsbFRvQWN0aW9uUmlnaHQgPGRpdj4gLT4gI2NhbGwtdG8tYWN0aW9uLXJpZ2h0XG4gKiBAY2FsbFRvQWN0aW9uSW1hZ2UgPGltZz4gLT4gI2NhbGwtdG8tYWN0aW9uLWltYWdlXG4gKi9cblxuZnVuY3Rpb24gY3JlYXRlQ2FsbFRvQWN0aW9uUmlnaHQoKSB7XG4gIGNvbnN0IGNhbGxUb0FjdGlvblJpZ2h0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gIGNhbGxUb0FjdGlvblJpZ2h0LnNldEF0dHJpYnV0ZSgnaWQnLCAnY2FsbC10by1hY3Rpb24tcmlnaHQnKTtcblxuICAvLyA/IHNyYywgaWQsIGNsYXNzTmFtZXMsIGFsdCwgYXJpYUxhYmVsO1xuICBjb25zdCBjYWxsVG9BY3Rpb25JbWFnZSA9IGNyZWF0ZUltYWdlKFxuICAgIGNhbGxUb0FjdGlvbkltYWdlT25lWzBdLnNyYyxcbiAgICAnY2FsbC10by1hY3Rpb24tcHJvZHVjdC1pbWFnZScsXG4gICAgJycsXG4gICAgY2FsbFRvQWN0aW9uSW1hZ2VPbmVbMF0uYWx0LFxuICAgICczLURpbWVuc2lvbmFsIFByb2R1Y3QgU2hvd2Nhc2UnLFxuICAgIFsnODAwJywgJzgwMCddXG4gICk7XG5cbiAgY2FsbFRvQWN0aW9uUmlnaHQuYXBwZW5kKGNhbGxUb0FjdGlvbkltYWdlKTtcblxuICByZXR1cm4gY2FsbFRvQWN0aW9uUmlnaHQ7XG59XG5cbi8vID4gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuLyoqXG4gKiBFbGVtZW50IElkZW50aWZpZXJzOlxuICogQGNhbGxUb0FjdGlvblNlY3Rpb24gPHNlY3Rpb24+IC0+ICNjYWxsLXRvLWFjdGlvblxuKi9cblxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUNhbGxUb0FjdGlvblNlY3Rpb24oKSB7XG4gIGNvbnN0IGNhbGxUb0FjdGlvblNlY3Rpb24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzZWN0aW9uJyk7XG4gIGNhbGxUb0FjdGlvblNlY3Rpb24uc2V0QXR0cmlidXRlKCdpZCcsICdjYWxsLXRvLWFjdGlvbicpO1xuXG4gIGNvbnN0IGNvbnRlbnRDb250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgY29udGVudENvbnRhaW5lci5jbGFzc0xpc3QuYWRkKCdjb250ZW50LWNvbnRhaW5lcicpO1xuXG4gIGNvbnRlbnRDb250YWluZXIuYXBwZW5kKFxuICAgIGNyZWF0ZUNhbGxUb0FjdGlvbkxlZnQoKSxcbiAgICBjcmVhdGVDYWxsVG9BY3Rpb25SaWdodCgpXG4gICk7XG5cbiAgY2FsbFRvQWN0aW9uU2VjdGlvbi5hcHBlbmQoY29udGVudENvbnRhaW5lcik7XG5cbiAgcmV0dXJuIGNhbGxUb0FjdGlvblNlY3Rpb247XG59XG4iLCIvKipcbiAqIEVsZW1lbnQgSWRlbnRpZmllcnM6XG4gKiBAc2VjdGlvbiA8c2VjdGlvbj4gLT4gI2Nvbm5lY3Rpb25zXG4gKiBAaGVhZGluZyA8aDM+IC0+ICNjb25uZWN0aW9ucy1oZWFkaW5nXG4gKiBAbG9nb0NvbnRhaW5lciA8ZGl2PiAtPiAubG9nby1jb250YWluZXJcbiAqIEBsb2dvIDxpbWc+IC0+IC5jb25uZWN0aW9ucy1sb2dvXG4gKiBAbGluayA8YT4gLT4gLmNvbm5lY3Rpb25zLWxpbmtcbiAqL1xuXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlQ29ubmVjdGlvbnNTZWN0aW9uKGNvbm5lY3Rpb25zSnNvbikge1xuICBjb25zdCBjb25uZWN0aW9uc1NlY3Rpb24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzZWN0aW9uJyk7XG4gIGNvbm5lY3Rpb25zU2VjdGlvbi5zZXRBdHRyaWJ1dGUoJ2lkJywgJ2Nvbm5lY3Rpb25zJyk7XG5cbiAgY29uc3QgY29udGVudENvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICBjb250ZW50Q29udGFpbmVyLmNsYXNzTGlzdC5hZGQoJ2NvbnRlbnQtY29udGFpbmVyJyk7XG5cbiAgLy8gY29uc3QgaGVhZGluZyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2gzJyk7XG4gIC8vIGhlYWRpbmcuc2V0QXR0cmlidXRlKCdpZCcsICdjb25uZWN0aW9ucy1oZWFkaW5nJyk7XG4gIC8vIGhlYWRpbmcudGV4dENvbnRlbnQgPSAnQ29ubmVjdGlvbnMnO1xuXG4gIGNvbnN0IGxvZ29Db250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgbG9nb0NvbnRhaW5lci5jbGFzc0xpc3QuYWRkKCdsb2dvLWNvbnRhaW5lcicpO1xuXG4gIGNvbm5lY3Rpb25zSnNvbi5mb3JFYWNoKChjb25uZWN0aW9uKSA9PiB7XG4gICAgY29uc3QgbG9nbyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2ltZycpO1xuICAgIGxvZ28uY2xhc3NMaXN0LmFkZCgnY29ubmVjdGlvbi1sb2dvJyk7XG4gICAgbG9nby5zcmMgPSBjb25uZWN0aW9uLmxvZ287XG4gICAgbG9nby5hbHQgPSBjb25uZWN0aW9uLm5hbWU7XG5cbiAgICBjb25zdCBsaW5rID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYScpO1xuICAgIGxpbmsuY2xhc3NMaXN0LmFkZCgnY29ubmVjdGlvbnMtbGluaycpO1xuICAgIGxpbmsuaHJlZiA9IGNvbm5lY3Rpb24ubGluaztcbiAgICBsaW5rLnRhcmdldCA9ICdfYmxhbmsnO1xuICAgIGxpbmsucmVsID0gJ25vb3BlbmVyIG5vcmVmZXJyZXInO1xuICAgIGxpbmsuYXBwZW5kKGxvZ28pO1xuXG4gICAgbG9nb0NvbnRhaW5lci5hcHBlbmQobGluayk7XG4gIH0pO1xuXG4gIGNvbnRlbnRDb250YWluZXIuYXBwZW5kKGxvZ29Db250YWluZXIpO1xuICAvLyBhZGQgaGVhZGluZz9cblxuICBjb25uZWN0aW9uc1NlY3Rpb24uYXBwZW5kKGNvbnRlbnRDb250YWluZXIpO1xuXG4gIHJldHVybiBjb25uZWN0aW9uc1NlY3Rpb247XG59XG4iLCIvLyAqIE1BUktVUCBVVElUTElUSUVTXG5pbXBvcnQgeyBjcmVhdGVDYXJvdXNlbCB9IGZyb20gJy4uLy4uL2NvbXBvbmVudHMvY3JlYXRlLWNhcm91c2VsL2Nhcm91c2VsLW1hcmt1cCdcblxuLy8gPiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4vKipcbiAqIEVsZW1lbnQgSWRlbnRpZmllcnM6XG4gKiBAYXJ0aWNsZSA8YXJ0aWNsZT4gLT4gLndoby1hcmUtd2UtdGV4dC1jb250ZW50XG4gKiBAaGVhZGluZyA8aDM+IC0+ICN3aG8tYXJlLXdlLWhlYWRpbmdcbiAqIEBsb2dvIDxpbWc+IC0+ICNoZWFkaW5nLWxvZ28uY29tcGFueS1sb2dvXG4gKiBAbG9nb1RleHQgPGgxPiAtPiAjaGVhZGluZy1sb2dvLXRleHQgLmNvbXBhbnktbmFtZVxuICovXG5cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVXaG9BcmVXZVNlY3Rpb24oY2Fyb3VzZWxJbWFnZXMpIHtcbiAgY29uc3Qgd2hvQXJlV2VTZWN0aW9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc2VjdGlvbicpO1xuICB3aG9BcmVXZVNlY3Rpb24uc2V0QXR0cmlidXRlKCdpZCcsICd3aG8tYXJlLXdlJyk7XG5cbiAgY29uc3QgY29udGVudENvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICBjb250ZW50Q29udGFpbmVyLmNsYXNzTGlzdC5hZGQoJ2NvbnRlbnQtY29udGFpbmVyJyk7XG5cbiAgY29uc3QgY2Fyb3VzZWwgPSBjcmVhdGVDYXJvdXNlbChjYXJvdXNlbEltYWdlcyk7XG5cbiAgY29uc3QgaGVhZGluZyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2gzJyk7XG4gIGhlYWRpbmcuc2V0QXR0cmlidXRlKCdpZCcsJ3doby1hcmUtd2UtaGVhZGluZycpO1xuICBoZWFkaW5nLnRleHRDb250ZW50ID0gJ1dobyBBcmUgV2U/JztcblxuICBjb25zdCBwYXJhZ3JhcGhPbmUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdwJyk7XG4gIHBhcmFncmFwaE9uZS5jbGFzc0xpc3QuYWRkKCdhcnRpY2xlLXRleHQtY29udGVudCcpO1xuICBwYXJhZ3JhcGhPbmUudGV4dENvbnRlbnQgPSAnQ29uY2VpdmVkIHRvIGNyYWZ0IGN1c3RvbSBjb3V0dXJlIGZvciB5b3VyIGNvbGxlY3RpdmUsIG91ciBjb21wYW55IGNoYW1waW9ucyB0aGUgY3JlYXRpb24gb2YgY29oZXNpdmUsIGNhcHRpdmF0aW5nIGNsb3RoaW5nIHRoYXQgY2VsZWJyYXRlcyB5b3VyIHVuaXF1ZSBjYW1hcmFkZXJpZSBhbmQgY2hhcmFjdGVyLic7XG5cbiAgY29uc3QgcGFyYWdyYXBoVHdvID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgncCcpO1xuICBwYXJhZ3JhcGhUd28uY2xhc3NMaXN0LmFkZCgnYXJ0aWNsZS10ZXh0LWNvbnRlbnQnKTtcbiAgcGFyYWdyYXBoVHdvLnRleHRDb250ZW50ID0gJ0Zyb20gY29tcGV0aXRpdmUgdGVhbXMgdG8gY29ycG9yYXRlIGNpcmNsZXMsIHdlIGNvbW1pdCB0byBjdXN0b21pemluZyBjaGljLCBjb21mb3J0YWJsZSBjb21wb3NpdGlvbnMuIFV0aWxpemluZyBjaG9pY2UgbWF0ZXJpYWxzIGFuZCBjdXR0aW5nLWVkZ2UgZGVzaWduIHRlY2huaXF1ZXMsIHdlIGNvbnZlcnQgeW91ciB2aXNpb24gaW50byBhIHdlYXJhYmxlIGNhbnZhcywgY2FwdHVyaW5nIHRoZSBlc3NlbmNlIG9mIHlvdXIgdW5pdHkuJztcblxuICBjb25zdCBwYXJhZ3JhcGhUaHJlZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3AnKTtcbiAgcGFyYWdyYXBoVGhyZWUuY2xhc3NMaXN0LmFkZCgnYXJ0aWNsZS10ZXh0LWNvbnRlbnQnKTtcblxuICBjb25zdCB3aG9BcmVXZUFydGljbGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdhcnRpY2xlJyk7XG4gIHdob0FyZVdlQXJ0aWNsZS5zZXRBdHRyaWJ1dGUoJ2lkJywgJ3doby1hcmUtd2UtdGV4dC1jb250ZW50Jyk7XG4gIHdob0FyZVdlQXJ0aWNsZS5hcHBlbmQoXG4gICAgaGVhZGluZyxcbiAgICBwYXJhZ3JhcGhPbmUsXG4gICAgcGFyYWdyYXBoVHdvXG4gICk7XG5cbiAgY29udGVudENvbnRhaW5lci5hcHBlbmQoXG4gICAgY2Fyb3VzZWwsXG4gICAgd2hvQXJlV2VBcnRpY2xlXG4gICk7XG5cbiAgd2hvQXJlV2VTZWN0aW9uLmFwcGVuZChjb250ZW50Q29udGFpbmVyKTtcblxuICByZXR1cm4gd2hvQXJlV2VTZWN0aW9uO1xufSIsImV4cG9ydCBmdW5jdGlvbiBjcmVhdGVIb3dEb2VzSXRXb3JrU2VjdGlvbihpbnN0cnVjdGlvbnNKc29uKSB7XG4gIGNvbnN0IGNyZWF0ZUhvd0RvZXNJdFdvcmtTZWN0aW9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc2VjdGlvbicpO1xuICBjcmVhdGVIb3dEb2VzSXRXb3JrU2VjdGlvbi5zZXRBdHRyaWJ1dGUoJ2lkJywgJ2hvdy1kb2VzLWl0LXdvcmsnKTtcblxuICBjb25zdCBjb250ZW50Q29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gIGNvbnRlbnRDb250YWluZXIuY2xhc3NMaXN0LmFkZCgnY29udGVudC1jb250YWluZXInKTtcblxuICBjb25zdCBob3dEb2VzSXRXb3JrVGV4dENvbnRlbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdhcnRpY2xlJyk7XG4gIGhvd0RvZXNJdFdvcmtUZXh0Q29udGVudC5jbGFzc0xpc3QuYWRkKCdob3ctZG9lcy1pdC13b3JrLXRleHQtY29udGVudCcpO1xuXG4gIGNvbnN0IGhvd0RvZXNJdFdvcmtIZWFkaW5nID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaDMnKTtcbiAgaG93RG9lc0l0V29ya0hlYWRpbmcuc2V0QXR0cmlidXRlKCdpZCcsICdob3ctZG9lcy1pdC13b3JrLWhlYWRpbmcnKTtcbiAgaG93RG9lc0l0V29ya0hlYWRpbmcudGV4dENvbnRlbnQgPSAnSG93IERvZXMgSXQgV29yaz8nO1xuXG4gIGNvbnRlbnRDb250YWluZXIuYXBwZW5kKGhvd0RvZXNJdFdvcmtIZWFkaW5nKTtcblxuICBjb25zdCBpbnN0cnVjdGlvbnNDb250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgaW5zdHJ1Y3Rpb25zQ29udGFpbmVyLnNldEF0dHJpYnV0ZSgnaWQnLCAnaW5zdHJ1Y3Rpb25zLWNvbnRhaW5lcicpO1xuXG4gIGluc3RydWN0aW9uc0pzb24uZm9yRWFjaCgoaW5zdHJ1Y3Rpb24sIGluZGV4KSA9PiB7XG4gICAgY29uc3QgaW5zdHJ1Y3Rpb25BcnRpY2xlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYXJ0aWNsZScpO1xuICAgIGluc3RydWN0aW9uQXJ0aWNsZS5jbGFzc0xpc3QuYWRkKCdpbnN0cnVjdGlvbi1hcnRpY2xlJyk7XG5cbiAgICBjb25zdCBzdGVwTnVtYmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgc3RlcE51bWJlci5jbGFzc0xpc3QuYWRkKCdzdGVwLW51bWJlcicpO1xuICAgIHN0ZXBOdW1iZXIudGV4dENvbnRlbnQgPSBgMCR7aW5kZXggKyAxfSBgO1xuXG4gICAgY29uc3QgaW5zdHJ1Y3Rpb25UaXRsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2g0Jyk7XG4gICAgaW5zdHJ1Y3Rpb25UaXRsZS5jbGFzc0xpc3QuYWRkKCdpbnN0cnVjdGlvbi1udW1iZXInKTtcbiAgICBpbnN0cnVjdGlvblRpdGxlLnRleHRDb250ZW50ID0gaW5zdHJ1Y3Rpb24udGl0bGU7XG5cbiAgICBjb25zdCBpbnN0cnVjdGlvblRpdGxlQ29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgaW5zdHJ1Y3Rpb25UaXRsZUNvbnRhaW5lci5jbGFzc0xpc3QuYWRkKCdpbnN0cnVjdGlvbi10aXRsZS1jb250YWluZXInKTtcbiAgICBpbnN0cnVjdGlvblRpdGxlQ29udGFpbmVyLmFwcGVuZChzdGVwTnVtYmVyLCBpbnN0cnVjdGlvblRpdGxlKTtcblxuICAgIGNvbnN0IHRleHRDb250ZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgdGV4dENvbnRlbnQuY2xhc3NMaXN0LmFkZCgnaW5zdHJ1Y3Rpb24tdGV4dC1jb250ZW50Jyk7XG4gICAgaW5zdHJ1Y3Rpb24udGV4dENvbnRlbnQuZm9yRWFjaCgocGFyYWdhcGgpID0+IHtcbiAgICAgIGNvbnN0IHBhcmFncmFwaCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3AnKTtcbiAgICAgIHBhcmFncmFwaC5jbGFzc0xpc3QuYWRkKCdhcnRpY2xlLXRleHQtY29udGVudCcpO1xuICAgICAgcGFyYWdyYXBoLnRleHRDb250ZW50ID0gcGFyYWdhcGg7XG4gICAgICB0ZXh0Q29udGVudC5hcHBlbmRDaGlsZChwYXJhZ3JhcGgpO1xuICAgIH0pO1xuXG4gICAgaW5zdHJ1Y3Rpb25BcnRpY2xlLmFwcGVuZChpbnN0cnVjdGlvblRpdGxlQ29udGFpbmVyLCB0ZXh0Q29udGVudCk7XG5cbiAgICBpbnN0cnVjdGlvbnNDb250YWluZXIuYXBwZW5kQ2hpbGQoaW5zdHJ1Y3Rpb25BcnRpY2xlKTtcblxuICB9KTtcbiAgXG4gIGhvd0RvZXNJdFdvcmtUZXh0Q29udGVudC5hcHBlbmRDaGlsZChpbnN0cnVjdGlvbnNDb250YWluZXIpO1xuICBjb250ZW50Q29udGFpbmVyLmFwcGVuZENoaWxkKGhvd0RvZXNJdFdvcmtUZXh0Q29udGVudCk7XG5cbiAgY3JlYXRlSG93RG9lc0l0V29ya1NlY3Rpb24uYXBwZW5kKGNvbnRlbnRDb250YWluZXIpO1xuXG4gIHJldHVybiBjcmVhdGVIb3dEb2VzSXRXb3JrU2VjdGlvbjtcbn1cbiIsImZ1bmN0aW9uIGNyZWF0ZUZvcm0oZm9ybUpzb24pIHtcbiAgY29uc3QgZmllbGRTZXRPbmUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdmaWVsZHNldCcpO1xuICBmaWVsZFNldE9uZS5zZXRBdHRyaWJ1dGUoJ2lkJywgJ2ZpZWxkLXNldC1vbmUnKTtcbiAgZmllbGRTZXRPbmUuY2xhc3NMaXN0LmFkZCgnZmllbGQtc2V0JywgJ2FjdGl2ZScpO1xuICBmaWVsZFNldE9uZS5kYXRhc2V0LmZpZWxkU2V0ID0gMTtcblxuICBjb25zdCBmaWVsZFNldFR3byA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2ZpZWxkc2V0Jyk7XG4gIGZpZWxkU2V0VHdvLnNldEF0dHJpYnV0ZSgnaWQnLCAnZmllbGQtc2V0LXR3bycpO1xuICBmaWVsZFNldFR3by5jbGFzc0xpc3QuYWRkKCdmaWVsZC1zZXQnKTtcbiAgZmllbGRTZXRUd28uZGF0YXNldC5maWVsZFNldCA9IDI7XG5cbiAgY29uc3QgZmllbGRTZXRUaHJlZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2ZpZWxkc2V0Jyk7XG4gIGZpZWxkU2V0VGhyZWUuc2V0QXR0cmlidXRlKCdpZCcsICdmaWVsZC1zZXQtdGhyZWUnKTtcbiAgZmllbGRTZXRUaHJlZS5jbGFzc0xpc3QuYWRkKCdmaWVsZC1zZXQnKTtcbiAgZmllbGRTZXRUaHJlZS5kYXRhc2V0LmZpZWxkU2V0ID0gMztcblxuICBmb3JtSnNvbi5mb3JFYWNoKChmaWVsZCwgaW5kZXgpID0+IHtcbiAgICBjb25zdCBsYWJlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2xhYmVsJyk7XG4gICAgbGFiZWwuc2V0QXR0cmlidXRlKCdmb3InLCBmaWVsZC5pZCk7XG4gICAgbGFiZWwudGV4dENvbnRlbnQgPSBmaWVsZC5sYWJlbDtcblxuICAgIGxldCBpbnB1dDtcbiAgICBpZiAoZmllbGQudHlwZSA9PT0gJ3NlbGVjdCcpIHtcbiAgICAgIGNvbnN0IHBsYWNlaG9sZGVyT3B0aW9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnb3B0aW9uJyk7XG4gICAgICBwbGFjZWhvbGRlck9wdGlvbi5zZXRBdHRyaWJ1dGUoJ3ZhbHVlJywgJycpO1xuICAgICAgcGxhY2Vob2xkZXJPcHRpb24uc2V0QXR0cmlidXRlKCdkaXNhYmxlZCcsICd0cnVlJyk7XG4gICAgICBwbGFjZWhvbGRlck9wdGlvbi5zZXRBdHRyaWJ1dGUoJ3NlbGVjdGVkJywgJ3RydWUnKTtcbiAgICAgIHBsYWNlaG9sZGVyT3B0aW9uLnRleHRDb250ZW50ID0gJ21ha2UgYSBzZWxlY3Rpb24nO1xuXG4gICAgICBpbnB1dCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NlbGVjdCcpO1xuICAgICAgaW5wdXQuc2V0QXR0cmlidXRlKCdpZCcsIGZpZWxkLmlkKTtcbiAgICAgIGlucHV0LnNldEF0dHJpYnV0ZSgnbmFtZScsIGZpZWxkLmlkKTtcbiAgICAgIGlucHV0LmFwcGVuZENoaWxkKHBsYWNlaG9sZGVyT3B0aW9uKTtcblxuICAgICAgY29uc3Qgb3B0aW9ucyA9IGZpZWxkLm9wdGlvbnM7XG4gICAgICBvcHRpb25zLmZvckVhY2goKG9wdGlvbikgPT4ge1xuICAgICAgICBjb25zdCBzZWxlY3RPcHRpb24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdvcHRpb24nKTtcbiAgICAgICAgc2VsZWN0T3B0aW9uLnNldEF0dHJpYnV0ZSgndmFsdWUnLCBvcHRpb24pO1xuICAgICAgICBzZWxlY3RPcHRpb24udGV4dENvbnRlbnQgPSBvcHRpb247XG4gICAgICAgIGlucHV0LmFwcGVuZENoaWxkKHNlbGVjdE9wdGlvbik7XG4gICAgICB9KTtcbiAgICB9IGVsc2UgaWYgKGZpZWxkLnR5cGUgPT09ICd0ZXh0YXJlYScpIHtcbiAgICAgIGlucHV0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChmaWVsZC50eXBlKTtcbiAgICAgIGlucHV0LnNldEF0dHJpYnV0ZSgnaWQnLCBmaWVsZC5pZCk7XG4gICAgICBpbnB1dC5zZXRBdHRyaWJ1dGUoJ25hbWUnLCBmaWVsZC5pZCk7XG4gICAgICBpbnB1dC5zZXRBdHRyaWJ1dGUoJ21pbmxlbmd0aCcsIDk5KTtcbiAgICAgIGlucHV0LnNldEF0dHJpYnV0ZSgnbWF4bGVuZ3RoJywgOTk5KTtcbiAgICB9IGVsc2UgaWYgKGZpZWxkLnR5cGUgPT09ICdudW1iZXInKSB7XG4gICAgICBpbnB1dCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2lucHV0Jyk7XG4gICAgICBpbnB1dC5zZXRBdHRyaWJ1dGUoJ2lkJywgZmllbGQuaWQpO1xuICAgICAgaW5wdXQuc2V0QXR0cmlidXRlKCduYW1lJywgZmllbGQuaWQpO1xuICAgICAgaW5wdXQuc2V0QXR0cmlidXRlKCd0eXBlJywgZmllbGQudHlwZSk7XG4gICAgICBpbnB1dC5zZXRBdHRyaWJ1dGUoJ21pbicsIDEpO1xuICAgIH0gZWxzZSB7XG4gICAgICBpbnB1dCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2lucHV0Jyk7XG4gICAgICBpbnB1dC5zZXRBdHRyaWJ1dGUoJ2lkJywgZmllbGQuaWQpO1xuICAgICAgaW5wdXQuc2V0QXR0cmlidXRlKCduYW1lJywgZmllbGQuaWQpO1xuICAgICAgaW5wdXQuc2V0QXR0cmlidXRlKCd0eXBlJywgZmllbGQudHlwZSk7XG4gICAgfVxuXG4gICAgaWYgKGZpZWxkLnBhdHRlcm4pIHtcbiAgICAgIGlucHV0LnNldEF0dHJpYnV0ZSgncGF0dGVybicsIGlucHV0LnNldEF0dHJpYnV0ZSgnZGF0YS1wYXR0ZXJuJywgZmllbGQucGF0dGVybikpO1xuICAgIH1cblxuICAgIGlmIChmaWVsZC5wbGFjZWhvbGRlcikge1xuICAgICAgaW5wdXQuc2V0QXR0cmlidXRlKCdwbGFjZWhvbGRlcicsIGZpZWxkLnBsYWNlaG9sZGVyKTtcbiAgICB9XG5cbiAgICBpZiAoZmllbGQucmVxdWlyZWQpIHtcbiAgICAgIGlucHV0LnNldEF0dHJpYnV0ZSgncmVxdWlyZWQnLCAndHJ1ZScpO1xuXG4gICAgICBjb25zdCByZXF1aXJlZEFzdGVyaXNrID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3BhbicpO1xuICAgICAgcmVxdWlyZWRBc3Rlcmlzay5jbGFzc0xpc3QuYWRkKCdyZXF1aXJlZC1hc3RlcmlzaycpO1xuICAgICAgcmVxdWlyZWRBc3Rlcmlzay50ZXh0Q29udGVudCA9ICfinL0nICsgJyAnO1xuICAgICAgcmVxdWlyZWRBc3Rlcmlzay5zZXRBdHRyaWJ1dGUoJ2FyaWEtbGFiZWwnLCAncmVxdWlyZWQgZmllbGQgYXN0ZXJpc2snKTtcbiAgICAgIGxhYmVsLnByZXBlbmQocmVxdWlyZWRBc3Rlcmlzayk7XG4gICAgfVxuXG4gICAgY29uc3QgZmllbGRFbGVtZW50Q29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgZmllbGRFbGVtZW50Q29udGFpbmVyLmNsYXNzTGlzdC5hZGQoJ2ZpZWxkLWVsZW1lbnQtY29udGFpbmVyJyk7XG4gICAgZmllbGRFbGVtZW50Q29udGFpbmVyLmFwcGVuZChpbnB1dCk7XG5cbiAgICBjb25zdCBmaWVsZENvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgIGZpZWxkQ29udGFpbmVyLnNldEF0dHJpYnV0ZSgnaWQnLCBgZm9ybS1maWVsZC1jb250YWluZXItJHsrK2luZGV4fWApO1xuICAgIGZpZWxkQ29udGFpbmVyLmNsYXNzTGlzdC5hZGQoJ2Zvcm0tZmllbGQtY29udGFpbmVyJyk7XG4gICAgaWYgKGZpZWxkLmZpZWxkU2V0ID09PSAxKSB7XG4gICAgICBmaWVsZENvbnRhaW5lci5kYXRhc2V0LmZpZWxkU2V0ID0gMTtcbiAgICB9IGVsc2UgaWYgKGZpZWxkLmZpZWxkU2V0ID09PSAyKSB7XG4gICAgICBmaWVsZENvbnRhaW5lci5kYXRhc2V0LmZpZWxkU2V0ID0gMjtcbiAgICB9IGVsc2UgaWYgKGZpZWxkLmZpZWxkU2V0ID09PSAzKSB7XG4gICAgICBmaWVsZENvbnRhaW5lci5kYXRhc2V0LmZpZWxkU2V0ID0gMztcbiAgICB9XG4gICAgZmllbGRDb250YWluZXIuYXBwZW5kKGxhYmVsLCBmaWVsZEVsZW1lbnRDb250YWluZXIpO1xuXG4gICAgaWYgKGZpZWxkLmZpZWxkU2V0ID09PSAxKSB7XG4gICAgICBmaWVsZFNldE9uZS5hcHBlbmRDaGlsZChmaWVsZENvbnRhaW5lcik7XG4gICAgfSBlbHNlIGlmIChmaWVsZC5maWVsZFNldCA9PT0gMikge1xuICAgICAgZmllbGRTZXRUd28uYXBwZW5kQ2hpbGQoZmllbGRDb250YWluZXIpO1xuICAgIH0gZWxzZSBpZiAoZmllbGQuZmllbGRTZXQgPT09IDMpIHtcbiAgICAgIGZpZWxkU2V0VGhyZWUuYXBwZW5kQ2hpbGQoZmllbGRDb250YWluZXIpO1xuICAgIH1cbiAgfSk7XG5cbiAgY29uc3QgZm9ybVJlcXVpcmVtZW50VGV4dCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3AnKTtcbiAgZm9ybVJlcXVpcmVtZW50VGV4dC5zZXRBdHRyaWJ1dGUoJ2lkJywgJ2Zvcm0tcmVxdWlyZW1lbnQtdGV4dCcpO1xuICBjb25zdCBhc3Rlcmlza1NwYW4gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzcGFuJyk7XG4gIGFzdGVyaXNrU3Bhbi5jbGFzc0xpc3QuYWRkKCdhc3Rlcmlzay1zcGFuJyk7XG4gIGFzdGVyaXNrU3Bhbi50ZXh0Q29udGVudCA9ICfinL0nO1xuICBhc3Rlcmlza1NwYW4uc2V0QXR0cmlidXRlKCdhcmlhLWxhYmVsJywgJ3JlcXVpcmVkIGZpZWxkIGFzdGVyaXNrJyk7XG4gIGNvbnN0IHRleHROb2RlT25lID0gZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoJyDvvJ0gcmVxdWlyZWQnKTtcbiAgZm9ybVJlcXVpcmVtZW50VGV4dC5hcHBlbmQoYXN0ZXJpc2tTcGFuLCB0ZXh0Tm9kZU9uZSk7XG5cbiAgY29uc3QgY2hhcmFjdGVyQ291bnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdwJyk7XG4gIGNoYXJhY3RlckNvdW50LnNldEF0dHJpYnV0ZSgnaWQnLCAnY2hhcmFjdGVyLWNvdW50Jyk7XG4gIGNoYXJhY3RlckNvdW50LnRleHRDb250ZW50ID0gJzAvOTknO1xuXG4gIGNvbnN0IGZvcm1SZXF1aXJlbWVudHNDb250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgZm9ybVJlcXVpcmVtZW50c0NvbnRhaW5lci5zZXRBdHRyaWJ1dGUoJ2lkJywgJ2Zvcm0tcmVxdWlyZW1lbnRzLWNvbnRhaW5lcicpO1xuICBmb3JtUmVxdWlyZW1lbnRzQ29udGFpbmVyLmFwcGVuZChmb3JtUmVxdWlyZW1lbnRUZXh0LCBjaGFyYWN0ZXJDb3VudCk7XG5cbiAgY29uc3QgZm9ybUZpZWxkTWFpbkNvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICBmb3JtRmllbGRNYWluQ29udGFpbmVyLnNldEF0dHJpYnV0ZSgnaWQnLCAnZm9ybS1maWVsZC1tYWluLWNvbnRhaW5lcicpO1xuICBmb3JtRmllbGRNYWluQ29udGFpbmVyLmFwcGVuZChcbiAgICBmaWVsZFNldE9uZSxcbiAgICBmaWVsZFNldFR3byxcbiAgICBmaWVsZFNldFRocmVlXG4gICk7XG4gIGZvcm1GaWVsZE1haW5Db250YWluZXIuYXBwZW5kQ2hpbGQoZm9ybVJlcXVpcmVtZW50c0NvbnRhaW5lcik7XG5cbiAgY29uc3QgZm9ybSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2Zvcm0nKTtcbiAgZm9ybS5zZXRBdHRyaWJ1dGUoJ2lkJywgJ3N0YXJ0LXRoZS1wcm9jZXNzLWZvcm0nKTtcbiAgZm9ybS5hcHBlbmRDaGlsZChmb3JtRmllbGRNYWluQ29udGFpbmVyKTtcblxuICByZXR1cm4gZm9ybTtcbn1cblxuZnVuY3Rpb24gY3JlYXRlRm9ybURpYWxvZyhmb3JtSnNvbikge1xuICBjb25zdCBkaWFsb2dIZWFkaW5nID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaDInKTtcbiAgZGlhbG9nSGVhZGluZy5zZXRBdHRyaWJ1dGUoJ2lkJywgJ2RpYWxvZy1oZWFkaW5nJyk7XG4gIGRpYWxvZ0hlYWRpbmcudGV4dENvbnRlbnQgPSAnVGhlIFByb2Nlc3MnO1xuXG4gIGNvbnN0IHN0ZXBOdW1iZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdoMycpO1xuICBzdGVwTnVtYmVyLnNldEF0dHJpYnV0ZSgnaWQnLCAnc3RlcC1udW1iZXInKTtcbiAgc3RlcE51bWJlci50ZXh0Q29udGVudCA9ICdTdGVwIDEnO1xuXG4gIGNvbnN0IGRpYWxvZ0Nsb3NlQnV0dG9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYnV0dG9uJyk7XG4gIGRpYWxvZ0Nsb3NlQnV0dG9uLnNldEF0dHJpYnV0ZSgnaWQnLCAncHJvY2Vzcy1kaWFsb2ctY2xvc2UtYnV0dG9uJyk7XG4gIGRpYWxvZ0Nsb3NlQnV0dG9uLnNldEF0dHJpYnV0ZSgndHlwZScsICdidXR0b24nKTtcbiAgZGlhbG9nQ2xvc2VCdXR0b24uc2V0QXR0cmlidXRlKCdhcmlhLWxhYmVsJywgJ0Nsb3NlIERpYWxvZycpO1xuICBkaWFsb2dDbG9zZUJ1dHRvbi50ZXh0Q29udGVudCA9ICfinJUnO1xuXG4gIGNvbnN0IGRpYWxvZ1RvcENvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICBkaWFsb2dUb3BDb250YWluZXIuc2V0QXR0cmlidXRlKCdpZCcsICdkaWFsb2ctdG9wLWNvbnRhaW5lcicpO1xuICBkaWFsb2dUb3BDb250YWluZXIuYXBwZW5kKHN0ZXBOdW1iZXIsIGRpYWxvZ0Nsb3NlQnV0dG9uKTtcblxuICBjb25zdCBwcmV2aW91c0J1dHRvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpO1xuICBwcmV2aW91c0J1dHRvbi5zZXRBdHRyaWJ1dGUoJ2lkJywgJ3ByZXZpb3VzLWJ1dHRvbicpO1xuICBwcmV2aW91c0J1dHRvbi5zZXRBdHRyaWJ1dGUoJ2Rpc2FibGVkJywgJ3RydWUnKTtcbiAgcHJldmlvdXNCdXR0b24udHlwZSA9ICdidXR0b24nO1xuICBwcmV2aW91c0J1dHRvbi5kYXRhc2V0LmVsZW1lbnQgPSAnYnV0dG9uJztcbiAgcHJldmlvdXNCdXR0b24udGV4dENvbnRlbnQgPSAncHJldmlvdXMnO1xuXG4gIGNvbnN0IG5leHRCdXR0b24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdidXR0b24nKTtcbiAgbmV4dEJ1dHRvbi5zZXRBdHRyaWJ1dGUoJ2lkJywgJ25leHQtYnV0dG9uJyk7XG4gIG5leHRCdXR0b24udHlwZSA9ICdidXR0b24nO1xuICBuZXh0QnV0dG9uLmRhdGFzZXQuZWxlbWVudCA9ICdidXR0b24nO1xuICBuZXh0QnV0dG9uLnRleHRDb250ZW50ID0gJ25leHQnO1xuXG4gIGNvbnN0IHN1Ym1pdEJ1dHRvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpO1xuICBzdWJtaXRCdXR0b24uc2V0QXR0cmlidXRlKCdpZCcsICdzdWJtaXQtYnV0dG9uJyk7XG4gIHN1Ym1pdEJ1dHRvbi5zZXRBdHRyaWJ1dGUoJ2Zvcm0nLCAnc3RhcnQtdGhlLXByb2Nlc3MtZm9ybScpO1xuICBzdWJtaXRCdXR0b24uc2V0QXR0cmlidXRlKCd0eXBlJywgJ3N1Ym1pdCcpO1xuICBzdWJtaXRCdXR0b24uc2V0QXR0cmlidXRlKCdkaXNhYmxlZCcsICd0cnVlJyk7XG4gIHN1Ym1pdEJ1dHRvbi5kYXRhc2V0LmVsZW1lbnQgPSAnYnV0dG9uJztcbiAgc3VibWl0QnV0dG9uLnRleHRDb250ZW50ID0gJ3N1Ym1pdCc7XG5cbiAgY29uc3QgZGlhbG9nQnV0dG9uQ29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gIGRpYWxvZ0J1dHRvbkNvbnRhaW5lci5zZXRBdHRyaWJ1dGUoJ2lkJywgJ2RpYWxvZy1idXR0b24tY29udGFpbmVyJyk7XG4gIGRpYWxvZ0J1dHRvbkNvbnRhaW5lci5hcHBlbmQocHJldmlvdXNCdXR0b24sIG5leHRCdXR0b24sIHN1Ym1pdEJ1dHRvbik7XG5cbiAgY29uc3QgZm9ybSA9IGNyZWF0ZUZvcm0oZm9ybUpzb24pO1xuICBmb3JtLmFwcGVuZENoaWxkKGRpYWxvZ0J1dHRvbkNvbnRhaW5lcik7XG5cbiAgY29uc3QgZGlhbG9nID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGlhbG9nJyk7XG4gIGRpYWxvZy5zZXRBdHRyaWJ1dGUoJ2lkJywgJ3N0YXJ0LXRoZS1wcm9jZXNzLWRpYWxvZycpO1xuICBkaWFsb2cuYXBwZW5kKGRpYWxvZ0hlYWRpbmcsIGRpYWxvZ1RvcENvbnRhaW5lciwgZm9ybSk7XG5cbiAgcmV0dXJuIGRpYWxvZztcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVN0YXJ0VGhlUHJvY2Vzc1NlY3Rpb24oZm9ybUpzb24pIHtcbiAgY29uc3Qgc3RhcnRUaGVQcm9jZXNzU2VjdGlvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NlY3Rpb24nKTtcbiAgc3RhcnRUaGVQcm9jZXNzU2VjdGlvbi5zZXRBdHRyaWJ1dGUoJ2lkJywgJ3N0YXJ0LXRoZS1wcm9jZXNzJyk7XG5cbiAgY29uc3QgY29udGVudENvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICBjb250ZW50Q29udGFpbmVyLmNsYXNzTGlzdC5hZGQoJ2NvbnRlbnQtY29udGFpbmVyJyk7XG5cbiAgY29uc3Qgc3RhcnRUaGVQcm9jZXNzQnV0dG9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYnV0dG9uJyk7XG4gIHN0YXJ0VGhlUHJvY2Vzc0J1dHRvbi5zZXRBdHRyaWJ1dGUoJ2lkJywgJ3N0YXJ0LXRoZS1wcm9jZXNzLWJ1dHRvbicpO1xuICBzdGFydFRoZVByb2Nlc3NCdXR0b24udGV4dENvbnRlbnQgPSAnc3RhcnQgdGhlIHByb2Nlc3MnO1xuXG4gIGNvbnN0IGZvcm1EaWFsb2cgPSBjcmVhdGVGb3JtRGlhbG9nKGZvcm1Kc29uKTtcblxuICBjb250ZW50Q29udGFpbmVyLmFwcGVuZChzdGFydFRoZVByb2Nlc3NCdXR0b24sIGZvcm1EaWFsb2cpO1xuXG4gIHN0YXJ0VGhlUHJvY2Vzc1NlY3Rpb24uYXBwZW5kKGNvbnRlbnRDb250YWluZXIpO1xuXG4gIHJldHVybiBzdGFydFRoZVByb2Nlc3NTZWN0aW9uO1xufSIsImV4cG9ydCBmdW5jdGlvbiBjcmVhdGVGb290ZXIoY29tcGFueSwgbGluaykge1xuICBjb25zdCBmb290ZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdmb290ZXInKTtcblxuICBjb25zdCBjb250ZW50Q29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gIGNvbnRlbnRDb250YWluZXIuY2xhc3NMaXN0LmFkZCgnY29udGVudC1jb250YWluZXInKTtcblxuICBpZiAoY29tcGFueS5uYW1lKSB7XG4gICAgY29uc3QgY3VycmVudFllYXIgPSBuZXcgRGF0ZSgpLmdldEZ1bGxZZWFyKCk7XG4gICAgY29uc3QgZm9vdGVyVGV4dCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3AnKTtcbiAgICBmb290ZXJUZXh0LnNldEF0dHJpYnV0ZSgnaWQnLCAnZm9vdGVyLXRleHQnKTtcbiAgICBmb290ZXJUZXh0LnRleHRDb250ZW50ID0gYMKpICR7Y3VycmVudFllYXJ9ICR7Y29tcGFueS5uYW1lfWA7XG5cbiAgICBjb250ZW50Q29udGFpbmVyLmFwcGVuZENoaWxkKGZvb3RlclRleHQpO1xuICB9XG5cbiAgaWYgKGNvbXBhbnkubG9nbykge1xuICAgIGNvbnN0IGZvb3RlckxvZ28gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpbWcnKTtcbiAgICBmb290ZXJMb2dvLnNldEF0dHJpYnV0ZSgnaWQnLCAnZm9vdGVyLWxvZ28nKTtcbiAgICBmb290ZXJMb2dvLnNldEF0dHJpYnV0ZSgnc3JjJywgY29tcGFueS5sb2dvKTtcbiAgICBmb290ZXJMb2dvLnNldEF0dHJpYnV0ZSgnYWx0JywgYCR7Y29tcGFueS5uYW1lfSBsb2dvYCk7XG5cbiAgICBpZiAoY29tcGFueS5saW5rKSB7XG4gICAgICBjb25zdCBmb290ZXJMb2dvTGluayA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2EnKTtcbiAgICAgIGZvb3RlckxvZ29MaW5rLnNldEF0dHJpYnV0ZSgnaWQnLCAnZm9vdGVyLWxvZ28tbGluaycpO1xuICAgICAgZm9vdGVyTG9nb0xpbmsuc2V0QXR0cmlidXRlKCdocmVmJywgY29tcGFueS5saW5rKTtcbiAgICAgIGZvb3RlckxvZ29MaW5rLnNldEF0dHJpYnV0ZSgndGFyZ2V0JywgJ19ibGFuaycpO1xuICAgICAgZm9vdGVyTG9nb0xpbmsuYXBwZW5kQ2hpbGQoZm9vdGVyTG9nbyk7XG4gICAgICBcbiAgICAgIGNvbnRlbnRDb250YWluZXIuYXBwZW5kQ2hpbGQoZm9vdGVyTG9nb0xpbmspO1xuICAgIH0gZWxzZSB7XG4gICAgICBjb250ZW50Q29udGFpbmVyLmFwcGVuZENoaWxkKGZvb3RlckxvZ28pO1xuICAgIH1cbiAgfVxuXG4gIGZvb3Rlci5hcHBlbmRDaGlsZChjb250ZW50Q29udGFpbmVyKTtcblxuICByZXR1cm4gZm9vdGVyO1xufVxuIiwiaW1wb3J0IHN1Y2Nlc3NCb3QgZnJvbSAnLi4vLi4vYXNzZXRzL21lZGlhL2dpZnMvc3VjY2Vzc0JvdC5naWYnO1xuXG4vLyDwn5KtIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbi8vID8gYXNzdW1lZCB0byBiZSBzdWNlc3NmdWwgc3VibWlzc2lvblxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVJlc3BvbnNlTW9kYWwoKSB7XG4gIGNvbnN0IHJlc3BvbnNlTW9kYWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaWFsb2cnKTtcbiAgcmVzcG9uc2VNb2RhbC5zZXRBdHRyaWJ1dGUoJ2lkJywgJ3Jlc3BvbnNlLWRpYWxvZycpO1xuXG4gIGNvbnN0IHJlc3BvbnNlRGlhbG9nQ2xvc2VCdXR0b24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdidXR0b24nKTtcbiAgcmVzcG9uc2VEaWFsb2dDbG9zZUJ1dHRvbi5zZXRBdHRyaWJ1dGUoJ2NsYXNzJywgJ2RzLWNsb3NlLWJ1dHRvbicpO1xuICByZXNwb25zZURpYWxvZ0Nsb3NlQnV0dG9uLnNldEF0dHJpYnV0ZSgnaWQnLCAncmVzcG9uc2UtcHJvY2Vzcy1kaWFsb2ctY2xvc2UtYnV0dG9uJyk7XG4gIHJlc3BvbnNlRGlhbG9nQ2xvc2VCdXR0b24uc2V0QXR0cmlidXRlKCd0eXBlJywgJ2J1dHRvbicpO1xuICByZXNwb25zZURpYWxvZ0Nsb3NlQnV0dG9uLnNldEF0dHJpYnV0ZSgnYXJpYS1sYWJlbCcsICdDbG9zZSBEaWFsb2cnKTtcbiAgcmVzcG9uc2VEaWFsb2dDbG9zZUJ1dHRvbi50ZXh0Q29udGVudCA9ICfinJUnO1xuXG4gIGNvbnN0IHJlc3BvbnNlRGlhbG9nSGVhZGVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaDMnKTtcbiAgcmVzcG9uc2VEaWFsb2dIZWFkZXIuc2V0QXR0cmlidXRlKCdpZCcsICdyZXNwb25zZS1kaWFsb2ctaGVhZGluZycpO1xuICByZXNwb25zZURpYWxvZ0hlYWRlci50ZXh0Q29udGVudCA9ICdTdWJtaXNzaW9uIGNvbmZpcm1lZC4gUGxlYXNlIHN0YW5kIGJ5IGZvciBpbW1pbmVudCBjb250YWN0IPCfkq0nO1xuXG4gIGNvbnN0IHJlc3BvbnNlRGlhbG9nUGFyYWdyYXBoID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgncCcpO1xuICByZXNwb25zZURpYWxvZ1BhcmFncmFwaC5zZXRBdHRyaWJ1dGUoJ2lkJywgJ3Jlc3BvbnNlLWRpYWxvZy1wYXJhZ3JhcGgnKTtcbiAgcmVzcG9uc2VEaWFsb2dQYXJhZ3JhcGgudGV4dENvbnRlbnQgPSAnWW91ciBjb29wZXJhdGlvbiB3aXRoIHRoZSBjb2xsZWN0aXZlIGlzIGFwcHJlY2lhdGVkLic7XG5cbiAgY29uc3QgcmVzcG9uc2VEaWFsb2dJbWFnZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2ltZycpO1xuICByZXNwb25zZURpYWxvZ0ltYWdlLnNldEF0dHJpYnV0ZSgnaWQnLCAncmVzcG9uc2UtZGlhbG9nLWltYWdlJyk7XG4gIHJlc3BvbnNlRGlhbG9nSW1hZ2Uuc2V0QXR0cmlidXRlKCdzcmMnLCBzdWNjZXNzQm90KTtcblxuICBjb25zdCByZXNwb25zZU1vZGFsQ29udGVudENvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICByZXNwb25zZU1vZGFsQ29udGVudENvbnRhaW5lci5zZXRBdHRyaWJ1dGUoJ2lkJywgJ3Jlc3BvbnNlLWRpYWxvZy1jb250ZW50LWNvbnRhaW5lcicpO1xuICByZXNwb25zZU1vZGFsQ29udGVudENvbnRhaW5lci5hcHBlbmQoXG4gICAgcmVzcG9uc2VEaWFsb2dDbG9zZUJ1dHRvbixcbiAgICByZXNwb25zZURpYWxvZ0hlYWRlcixcbiAgICByZXNwb25zZURpYWxvZ1BhcmFncmFwaCxcbiAgICByZXNwb25zZURpYWxvZ0ltYWdlLFxuICApO1xuXG4gIHJlc3BvbnNlTW9kYWwuYXBwZW5kQ2hpbGQocmVzcG9uc2VNb2RhbENvbnRlbnRDb250YWluZXIpO1xuXG4gIHJldHVybiByZXNwb25zZU1vZGFsO1xufSIsImltcG9ydCB7IGhhbmRsZVRhcmdldFNjcm9sbCB9IGZyb20gJy4uL2hhbmRsZXJzL2hhbmRsZS10YXJnZXQtc2Nyb2xsLWJlaGF2aW9yLmpzJztcbmltcG9ydCB7IGhhbmRsZU5hdlRvZ2dsZUJ1dHRvbiB9IGZyb20gJy4uLy4uL2NvbXBvbmVudHMvY3JlYXRlLWhhbWJ1cmdlci9oYW5kbGUtaGFtYnVyZ2VyLmpzJztcbmltcG9ydCB7IGhhbmRsZUNhcm91c2VsIH0gZnJvbSAnLi4vLi4vY29tcG9uZW50cy9jcmVhdGUtY2Fyb3VzZWwvaGFuZGxlLWNhcm91c2VsLmpzJztcbmltcG9ydCB7IHNob3dQcm9jZXNzTW9kYWwgfSBmcm9tICcuLi9oYW5kbGVycy9oYW5kbGUtcHJvY2Vzcy1tb2RhbC5qcyc7XG5pbXBvcnQgeyBhY3RpdmF0ZUludGVyc2VjdGlvbk9ic2VydmVycyB9IGZyb20gJy4uL2hhbmRsZXJzL2hhbmRsZS1pbnRlcnNlY3Rpb24tb2JzZXJ2ZXJzLmpzJztcbmltcG9ydCB7IGhhbmRsZU5hdkxpbmtQb3N0Q2xpY2sgfSBmcm9tICcuLi9oYW5kbGVycy9oYW5kbGUtbmF2LWxpbmstcG9zdC1jbGljay1iZWhhdmlvci5qcyc7XG5pbXBvcnQgeyBhZGROYXZMaW5rSGlnaGxpZ2h0Q2xhc3MgfSBmcm9tICcuLi9oYW5kbGVycy9oYW5kbGUtaGlnaGxpZ2h0LXN0YXJ0LXByb2Nlc3MtbmF2LWxpbmsuanMnO1xuXG4vLyA+IC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbmV4cG9ydCBmdW5jdGlvbiBoYW5kbGVJbml0aWFsRE9NSW50ZXJhY3Rpdml0eSgpIHtcbiAgY29uc3QgbmF2TGlua3MgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCdhW2hyZWZePVwiI1wiXScpO1xuICBuYXZMaW5rcy5mb3JFYWNoKChhbmNob3IpID0+IHtcbiAgICBhbmNob3IuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBoYW5kbGVUYXJnZXRTY3JvbGwpO1xuICB9KTtcblxuICBjb25zdCBuYXZUb2dnbGVCdXR0b24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcubmF2LXRvZ2dsZS1idXR0b24nKTtcbiAgbmF2VG9nZ2xlQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgaGFuZGxlTmF2VG9nZ2xlQnV0dG9uKTtcblxuICBjb25zdCBzdGFydFRoZVByb2Nlc3NCdXR0b24gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnc3RhcnQtdGhlLXByb2Nlc3MtYnV0dG9uJyk7XG4gIHN0YXJ0VGhlUHJvY2Vzc0J1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIHNob3dQcm9jZXNzTW9kYWwpO1xuXG4gIGNvbnN0IHN0YXJ0VGhlUHJvY2Vzc05hdkxpbmsgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcubmF2LWxpbmtbaHJlZj1cIiNzdGFydC10aGUtcHJvY2Vzc1wiXScpO1xuICBzdGFydFRoZVByb2Nlc3NOYXZMaW5rLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgYWRkTmF2TGlua0hpZ2hsaWdodENsYXNzKTtcbiAgXG4gIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdsb2FkJywgaGFuZGxlTmF2TGlua1Bvc3RDbGljayk7XG4gIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdyZXNpemUnLCBoYW5kbGVOYXZMaW5rUG9zdENsaWNrKTtcbiAgXG4gIGhhbmRsZUNhcm91c2VsKCk7XG4gIGFjdGl2YXRlSW50ZXJzZWN0aW9uT2JzZXJ2ZXJzKCk7XG59IiwiaW1wb3J0IHsgY3JlYXRlRGlhbG9nQ29udHJvbGxlciB9IGZyb20gXCIuLi8uLi91dGlsaXRpZXMvZGlzcGxheVN0dWZmXCI7XG5cbi8vIPCfkq0gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuZXhwb3J0IGZ1bmN0aW9uIGdldENvbnRyb2xsZWRFbGVtZW50cygpIHtcbiAgbGV0IGNvbnRyb2xsZWRFbGVtZW50cyA9IHt9O1xuXG4gIGNvbnN0IHJlc3BvbnNlTW9kYWwgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncmVzcG9uc2UtZGlhbG9nJyk7XG4gIGNvbnRyb2xsZWRFbGVtZW50cy5yZXNwb25zZU1vZGFsID0ge1xuICAgIGVsZW1lbnQ6IHJlc3BvbnNlTW9kYWwsXG4gICAgY29udHJvbGxlcjogY3JlYXRlRGlhbG9nQ29udHJvbGxlcihyZXNwb25zZU1vZGFsKVxuICB9O1xuXG4gIC8vID8gYWRkIG1vcmUgY29udHJvbGxlZCBlbGVtZW50cyBoZXJlXG5cbiAgcmV0dXJuIGNvbnRyb2xsZWRFbGVtZW50cztcbn0iXSwibmFtZXMiOlsiX193ZWJwYWNrX3JlcXVpcmVfXyIsImV4cG9ydHMiLCJkZWZpbml0aW9uIiwia2V5IiwibyIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZW51bWVyYWJsZSIsImdldCIsInRvZ2dsZU1vZGFsU3RhdGUiLCJtb2RhbFN0YXRlIiwiRXJyb3IiLCJjbG9zZUJ1dHRvblN0YXRlIiwibGlzdGVuZXJBdHRhY2hlZCIsInRvZ2dsZU1vZGFsQXR0cmlidXRlcyIsIm1vZGFsRWxlbWVudCIsImdldEF0dHJpYnV0ZSIsInNldEF0dHJpYnV0ZSIsImNyZWF0ZURpYWxvZ0NvbnRyb2xsZXIiLCJkaWFsb2dFbGVtZW50IiwiSFRNTEVsZW1lbnQiLCJ0YWdOYW1lIiwiZXhhbWluZUFyZ3VtZW50T25DYWxsIiwiZWxlbWVudCIsImRpYWxvZ1NlbGVjdG9yIiwiaWQiLCJjb25jYXQiLCJjbGFzc05hbWUiLCJzcGxpdCIsImpvaW4iLCJjbG9zZUJ1dHRvbiIsInF1ZXJ5U2VsZWN0b3IiLCJzZWxlY3RvciIsImV4YW1pbmVDbG9zZUJ1dHRvbiIsImluaXRpYWxpemVDbG9zZUJ1dHRvbiIsImRpYWxvZ1N0YXRlIiwic2FuaXRpemVEaWFsb2ciLCJjbGFzc0xpc3QiLCJyZW1vdmUiLCJjbG9zZSIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJjbG9zZURpYWxvZyIsImFkZCIsImFkZEV2ZW50TGlzdGVuZXIiLCJvcGVuRGlhbG9nIiwib3BlbiIsImluc3BlY3REaWFsb2ciLCJzaG93TW9kYWwiLCJoYW5kbGVUYXJnZXRTY3JvbGwiLCJlIiwicHJldmVudERlZmF1bHQiLCJ0YXJnZXRJZCIsInRoaXMiLCJ0YXJnZXRFbGVtZW50IiwiZG9jdW1lbnQiLCJoZWFkZXJIZWlnaHQiLCJvZmZzZXRIZWlnaHQiLCJ0YXJnZXRQb3NpdGlvbiIsImdldEJvdW5kaW5nQ2xpZW50UmVjdCIsInRvcCIsIndpbmRvdyIsInNjcm9sbFkiLCJzY3JvbGxUbyIsImJlaGF2aW9yIiwiY2hlY2tUYXJnZXRFbGVtZW50RXhpc3RlbmNlIiwiY29uc29sZSIsImVycm9yIiwiZyIsImdsb2JhbFRoaXMiLCJGdW5jdGlvbiIsIm9iaiIsInByb3AiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJzY3JpcHRVcmwiLCJpbXBvcnRTY3JpcHRzIiwibG9jYXRpb24iLCJjdXJyZW50U2NyaXB0Iiwic3JjIiwic2NyaXB0cyIsImdldEVsZW1lbnRzQnlUYWdOYW1lIiwibGVuZ3RoIiwiaSIsInRlc3QiLCJyZXBsYWNlIiwicCIsIm5hdlN0YXRlIiwiYW5pbWF0aW5nIiwidG9nZ2xlTmF2VmlzaWJpbGl0eSIsImlzTmF2VG9nZ2xlQWN0aXZlIiwibmF2IiwiaGFuZGxlTmF2VG9nZ2xlQnV0dG9uIiwibmF2VG9nZ2xlQnV0dG9uIiwiY29udGFpbnMiLCJzbGlkZUluZGV4IiwiaXNTbGlkZVRyYW5zaXRpb25pbmciLCJwbHVzU2xpZGVzIiwiaW5kZXgiLCJzaG93U2xpZGVzIiwiYWN0aXZlQ2Fyb3VzZWxTbGlkZSIsImRlYWN0aXZhdGluZ0Nhcm91c2VsU2xpZGUiLCJjYXJvdXNlbFNsaWRlcyIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJjYXJvdXNlbFNsaWRlc0xlbmd0aCIsInJlc2V0U2xpZGVJbmRleCIsInNldERlYWN0aXZhdGVkU2xpZGVUb0Rpc3BsYXlOb25lUmVmIiwic2V0RGVhY3RpdmF0ZWRTbGlkZVRvRGlzcGxheU5vbmUiLCJjYXJvdXNlbE5hdmlnYXRpb25CdXR0b25zIiwic2V0TmV3QWN0aXZlU2xpZGUiLCJ1cGRhdGVSb290QW5pbWF0aW9uUHJvcGVydHkiLCJyb290RWxlbWVudCIsImRpcmVjdGlvbiIsInN0eWxlIiwic2V0UHJvcGVydHkiLCJoYW5kbGVDYXJvdXNlbCIsImRvY3VtZW50RWxlbWVudCIsImxlZnRBcnJvdyIsInJpZ2h0QXJyb3ciLCJjdXJyZW50U2xpZGVJbmRleCIsImhhbmRsZUNhcm91c2VsQXJyb3dDbGljayIsImZvckVhY2giLCJidXR0b24iLCJjdXJyZW50U2xpZGUiLCJoYW5kbGVDYXJvdXNlbE5hdmlnYXRpb25CdXR0b25DbGljayIsImdldEVsZW1lbnQiLCJhcmd1bWVudHMiLCJ1bmRlZmluZWQiLCJnZXRBbGxFbGVtZW50cyIsImFkZExpc3RlbmVyIiwiZXZlbnQiLCJoYW5kbGVyIiwicmVtb3ZlTGlzdGVuZXIiLCJ0b2dnbGVDbGFzcyIsImFjdGlvbiIsInNldERpc2FibGVkU3RhdGUiLCJzdGF0ZSIsImRpc2FibGVkIiwiaGFuZGxlVGV4dEFyZWFDaGFyYWN0ZXJDb3VudCIsInRleHRBcmVhIiwidGFyZ2V0Iiwic3VibWl0QnV0dG9uIiwicHJvY2Vzc0RpYWxvZ0VsZW1lbnRzIiwiY2hhcmFjdGVyQ291bnQiLCJ0ZXh0QXJlYUNoYXJhY3RlckNvdW50IiwidmFsdWUiLCJ0cmltIiwiaXNUZXh0QXJlYVZhbGlkIiwidGV4dENvbnRlbnQiLCJmb3JtIiwic3RlcE51bWJlciIsInByZXZpb3VzQnV0dG9uIiwibmV4dEJ1dHRvbiIsIm1vZGFsIiwiYnV0dG9uQ29udGFpbmVyIiwiZmllbGRTZXQiLCJudW0iLCJuYW1lRmllbGQiLCJzd2FwRmllbGRTZXQiLCJvbGRGaWVsZFNldCIsIm5ld0ZpZWxkU2V0IiwibnVtYmVyIiwiZm9ybVN0YXRlIiwic2V0TmV3RmllbGRTZXQiLCJ0b2dnbGVUZXh0QXJlYUNvbXBvbmVudHMiLCJ1cGRhdGVVSVBvc3RTdWJtaXNzaW9uIiwicmVzdWx0IiwicmVzcG9uc2VEaWFsb2dDb250cm9sbGVkT2JqZWN0IiwiY29udHJvbGxlZEVsZW1lbnRzIiwicmVzcG9uc2VEaWFsb2dFbGVtZW50IiwicmVzcG9uc2VEaWFsb2dDb250cm9sbGVyIiwiY29udHJvbGxlciIsInJlc3BvbnNlRGlhbG9nSGVhZGluZyIsInJlc3BvbnNlRGlhbG9nUGFyYWdyYXBoIiwicmVzcG9uc2VEaWFsb2dJbWFnZSIsInN0YXR1cyIsInN1Y2Nlc3NCb3QiLCJyZXNwb25zZUJvdHMiLCJmaW5kIiwiYm90IiwiYWx0IiwiY2xpY2siLCJtZXNzYWdlIiwiZXJyb3JCb3QiLCJfcmVnZW5lcmF0b3JSdW50aW1lIiwidCIsInIiLCJuIiwiU3ltYm9sIiwiYSIsIml0ZXJhdG9yIiwiYyIsImFzeW5jSXRlcmF0b3IiLCJ1IiwidG9TdHJpbmdUYWciLCJkZWZpbmUiLCJjb25maWd1cmFibGUiLCJ3cml0YWJsZSIsIndyYXAiLCJHZW5lcmF0b3IiLCJjcmVhdGUiLCJDb250ZXh0IiwibWFrZUludm9rZU1ldGhvZCIsInRyeUNhdGNoIiwidHlwZSIsImFyZyIsImgiLCJsIiwiZiIsInMiLCJ5IiwiR2VuZXJhdG9yRnVuY3Rpb24iLCJHZW5lcmF0b3JGdW5jdGlvblByb3RvdHlwZSIsImQiLCJnZXRQcm90b3R5cGVPZiIsInYiLCJ2YWx1ZXMiLCJkZWZpbmVJdGVyYXRvck1ldGhvZHMiLCJfaW52b2tlIiwiQXN5bmNJdGVyYXRvciIsImludm9rZSIsIl90eXBlb2YiLCJyZXNvbHZlIiwiX19hd2FpdCIsInRoZW4iLCJjYWxsSW52b2tlV2l0aE1ldGhvZEFuZEFyZyIsImRvbmUiLCJtZXRob2QiLCJkZWxlZ2F0ZSIsIm1heWJlSW52b2tlRGVsZWdhdGUiLCJzZW50IiwiX3NlbnQiLCJkaXNwYXRjaEV4Y2VwdGlvbiIsImFicnVwdCIsIlR5cGVFcnJvciIsInJlc3VsdE5hbWUiLCJuZXh0IiwibmV4dExvYyIsInB1c2hUcnlFbnRyeSIsInRyeUxvYyIsImNhdGNoTG9jIiwiZmluYWxseUxvYyIsImFmdGVyTG9jIiwidHJ5RW50cmllcyIsInB1c2giLCJyZXNldFRyeUVudHJ5IiwiY29tcGxldGlvbiIsInJlc2V0IiwiaXNOYU4iLCJkaXNwbGF5TmFtZSIsImlzR2VuZXJhdG9yRnVuY3Rpb24iLCJjb25zdHJ1Y3RvciIsIm5hbWUiLCJtYXJrIiwic2V0UHJvdG90eXBlT2YiLCJfX3Byb3RvX18iLCJhd3JhcCIsImFzeW5jIiwiUHJvbWlzZSIsImtleXMiLCJyZXZlcnNlIiwicG9wIiwicHJldiIsImNoYXJBdCIsInNsaWNlIiwic3RvcCIsInJ2YWwiLCJoYW5kbGUiLCJjb21wbGV0ZSIsImZpbmlzaCIsImRlbGVnYXRlWWllbGQiLCJfYXJyYXlMaWtlVG9BcnJheSIsImFyciIsImxlbiIsImFycjIiLCJBcnJheSIsImFzeW5jR2VuZXJhdG9yU3RlcCIsImdlbiIsInJlamVjdCIsIl9uZXh0IiwiX3Rocm93IiwiaW5mbyIsIl9tYWtlRmV0Y2hSZXF1ZXN0IiwiZm4iLCJfY2FsbGVlIiwiZm9ybURhdGFKc29uIiwicmVzcG9uc2UiLCJlcnJvck1lc3NhZ2UiLCJfY29udGV4dCIsImZldGNoIiwiaGVhZGVycyIsImJvZHkiLCJqc29uIiwidDAiLCJzdWNjZXNzIiwiZGF0YSIsInN0YXR1c1RleHQiLCJ0MSIsImluY2x1ZGVzIiwic2VsZiIsImFyZ3MiLCJhcHBseSIsImVyciIsImNvbGxlY3RGb3JtRGF0YSIsImN1cnJlbnRGaWVsZFNldEVsZW1lbnQiLCJmaWVsZHMiLCJmcm9tIiwiZmlsdGVyIiwiZmllbGQiLCJtYXAiLCJ2YWx1ZVRvVXNlIiwicmVwbGFjZUFsbEJ1dE51bWJlcnNBbmRQbHVzU2lnbiIsInRvZ2dsZVBob25lSW5wdXRTYW5pdGl6YXRpb25MaXN0ZW5lciIsInRlbGVwaG9uZUlucHV0IiwiaGFuZGxlU2VsZWN0UGxhY2Vob2xkZXIiLCJzZWxlY3QiLCJzZWxlY3RlZE9wdGlvbiIsIm9wdGlvbnMiLCJzZWxlY3RlZEluZGV4IiwiYWNjdW11bGF0ZWRGb3JtRGF0YSIsInVwZGF0ZUZpZWxkU2V0Rm9ybURhdGEiLCJmb3JtRGF0YUFycmF5IiwiY2xlYXIiLCJwcmludCIsImVudHJpZXMiLCJfcmVmIiwiX3JlZjIiLCJfc2xpY2VkVG9BcnJheSIsIl9yZWYzIiwiX3JlZjQiLCJhY2N1bXVsYXRlZEZvcm1EYXRhRmFjdG9yeSIsImhhbmRsZURpYWxvZ0J1dHRvbnMiLCJ0b2dnbGVGb3JtTGlzdGVuZXJzIiwiY3VycmVudEZpZWxkU2V0Iiwic2VsZWN0cyIsImdldEN1cnJlbnRGaWVsZFNldCIsImNsaWNrZWRCdXR0b24iLCJwcmV2aW91c0ZpZWxkU2V0IiwiYWxsRmllbGRzZXRzVmFsaWQiLCJoaWdobGlnaHRJbnZhbGlkRmllbGQiLCJjbG9zZXN0IiwiYW5pbWF0aW9uRW5kQ2FsbGJhY2siLCJpc0lucHV0IiwiaXNTZWxlY3QiLCJwYXR0ZXJuIiwiUmVnRXhwIiwiaW5wdXRWYWx1ZSIsImhhc1BhdHRlcm5BbmRJc1JlcXVpcmVkIiwicmVxdWlyZWQiLCJoYXNQYXR0ZXJuQW5kSGFzVmFsdWUiLCJpc051bWJlcklucHV0IiwiY2hlY2tWYWxpZGl0eSIsImRhdGFGcm9tQ3VycmVudEZpZWxkU2V0IiwiaW5jcmVtZW50RmllbGRTZXQiLCJoYW5kbGVOZXh0QnV0dG9uQ2xpY2siLCJkZWNyZW1lbnRGaWVsZFNldCIsImhhbmRsZVByZXZpb3VzQnV0dG9uQ2xpY2siLCJib2R5SlNPTiIsImZ1bGxGb3JtRGF0YSIsInRleHRBcmVhRmllbGRzZXQiLCJmb3JtRGF0YSIsInRleHRBcmVhRGF0YSIsImFsbEZpZWxkRGF0YU9iamVjdCIsIl9pIiwiX09iamVjdCRlbnRyaWVzIiwiaXNBcnJheSIsIl9hcnJheVdpdGhIb2xlcyIsIl9pdGVyYWJsZVRvQXJyYXlMaW1pdCIsIm1pbkxlbiIsInRvU3RyaW5nIiwiX3Vuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5IiwiX25vbkl0ZXJhYmxlUmVzdCIsImdldEZvcm1hdHRlZEZvcm1EYXRhIiwiSlNPTiIsInN0cmluZ2lmeSIsImZvcm1hdERhdGFGb3JTdWJtaXNzaW9uIiwiX3giLCJtYWtlRmV0Y2hSZXF1ZXN0IiwiY2xvc2VNb2RhbCIsInN0YXJ0VGhlUHJvY2Vzc01vZGFsIiwidG9nZ2xlRGlhbG9nVGV4dEFuaW1hdGlvbkNsYXNzIiwiaW5pdGlhdGVNb2RhbENsb3NlIiwicmVzZXRNb2RhbCIsImRpYWxvZ1NwbGl0VGV4dCIsImxldHRlciIsInNldFRpbWVvdXQiLCJzaG93UHJvY2Vzc01vZGFsIiwiZm9jdXMiLCJ0b2dnbGVJc0ludGVyc2VjdGluZ0NsYXNzIiwiZW50cnkiLCJpc0ludGVyc2VjdGluZyIsInNlY3Rpb25PYnNlcnZlciIsIkludGVyc2VjdGlvbk9ic2VydmVyIiwidGhyZXNob2xkIiwicGFyYWdyYXBoT2JzZXJ2ZXIiLCJzdGFydFByb2Nlc3NCdXR0b25PYnNlcnZlciIsImhhbmRsZU5hdlBvc3RDbGljayIsImhhbmRsZU5hdkxpbmtQb3N0Q2xpY2siLCJ2aWV3cG9ydFdpZHRoIiwib2Zmc2V0V2lkdGgiLCJuYXZMaW5rcyIsImFyaWFFeHBhbmRlZCIsIm5hdkxpbmsiLCJyZW1vdmVOYXZMaW5rSGlnaGxpZ2h0Q2xhc3MiLCJhZGROYXZMaW5rSGlnaGxpZ2h0Q2xhc3MiLCJzdGFydFRoZVByb2Nlc3NCdXR0b24iLCJnZXRFbGVtZW50QnlJZCIsImNyZWF0ZUltYWdlIiwiY2xhc3NOYW1lcyIsImFyaWFMYWJlbCIsInNpemVBcnJheSIsImltZyIsImNyZWF0ZUVsZW1lbnQiLCJfc2l6ZUFycmF5IiwiaGVpZ2h0Iiwid2lkdGgiLCJzZXRBdHRyaWJ1dGVzIiwiYXR0cmlidXRlcyIsImNyZWF0ZUNhcm91c2VsIiwiaW1hZ2VzQXJyYXkiLCJjYXJvdXNlbCIsImNhcm91c2VsQ29udGFpbmVyIiwiY2Fyb3VzZWxTbGlkZUNvbnRhaW5lciIsImltYWdlIiwiaW1hZ2VGaWdjYXB0aW9uRWxlbWVudCIsImltYWdlRWxlbWVudCIsImltYWdlSW5kZXhTcGFuRWxlbWVudCIsImltYWdlRmlndXJlRWxlbWVudCIsImFwcGVuZCIsImNhcm91c2VsU2xpZGUiLCJjcmVhdGVDYXJvdXNlbFNsaWRlQ29udGFpbmVyIiwiY3JlYXRlQ2Fyb3VzZWxDb250YWluZXIiLCJjYXJvdXNlbE5hdmlnYXRpb25Db250YWluZXIiLCJjYXJvdXNlbE5hdmlnYXRpb25CdXR0b25Db250YWluZXIiLCJjYXJvdXNlbE5hdmlnYXRpb25CdXR0b24iLCJhcHBlbmRDaGlsZCIsImNyZWF0ZUNhcm91c2VsTmF2aWdhdGlvbkNvbnRhaW5lciIsInNlY3Rpb25zIiwicGFyYWdyYXBocyIsInN0YXJ0UHJvY2Vzc0J1dHRvbiIsInNwbGl0VGV4dEZyYWdtZW50IiwiZGlhbG9nSGVhZGluZyIsImhlYWRlciIsImNvbnRlbnRDb250YWluZXIiLCJsb2dvIiwiY3ljbG9uZUMiLCJsb2dvTGluayIsImxvZ29UZXh0IiwiaGVhZGVyTG9nb0NvbnRhaW5lciIsImhlYWRpbmciLCJoYW1idXJnZXIiLCJhcmlhQ29udHJvbHNJRCIsIm5hdlRvZ2dsZUJhcnMiLCJjcmVhdGVIYW1idXJnZXIiLCJqc29uQXJyYXkiLCJ1bCIsImxpbmsiLCJsaSIsImhyZWYiLCJjcmVhdGVOYXYiLCJuYXZMaXN0RGF0YSIsInByZXBlbmQiLCJjcmVhdGVIZWFkZXIiLCJjYWxsVG9BY3Rpb25TZWN0aW9uIiwiY2FsbFRvQWN0aW9uTGVmdCIsInNwZWNpYWxTcGFuIiwiaGVhZGluZ0Vtb2ppU3BhbiIsImxlZnRUZXh0Tm9kZSIsImNyZWF0ZVRleHROb2RlIiwiYWlUZXh0Tm9kZSIsInJpZ2h0VGV4dE5vZGUiLCJzdWJoZWFkaW5nIiwicGFyYWdyYXBoT25lIiwicGFyYWdyYXBoVHdvIiwiY2FsbFRvQWN0aW9uQXJ0aWNsZSIsImNyZWF0ZUNhbGxUb0FjdGlvbkxlZnQiLCJjYWxsVG9BY3Rpb25SaWdodCIsImNhbGxUb0FjdGlvbkltYWdlIiwiY2FsbFRvQWN0aW9uSW1hZ2VPbmUiLCJjcmVhdGVDYWxsVG9BY3Rpb25SaWdodCIsImNyZWF0ZUNhbGxUb0FjdGlvblNlY3Rpb24iLCJjb25uZWN0aW9uc0pzb24iLCJjb25uZWN0aW9uc1NlY3Rpb24iLCJsb2dvQ29udGFpbmVyIiwiY29ubmVjdGlvbiIsInJlbCIsImNyZWF0ZUNvbm5lY3Rpb25zU2VjdGlvbiIsImNvbm5lY3Rpb25zIiwiY2Fyb3VzZWxJbWFnZXMiLCJ3aG9BcmVXZVNlY3Rpb24iLCJ3aG9BcmVXZUFydGljbGUiLCJjcmVhdGVXaG9BcmVXZVNlY3Rpb24iLCJpbnN0cnVjdGlvbnNKc29uIiwiY3JlYXRlSG93RG9lc0l0V29ya1NlY3Rpb24iLCJob3dEb2VzSXRXb3JrVGV4dENvbnRlbnQiLCJob3dEb2VzSXRXb3JrSGVhZGluZyIsImluc3RydWN0aW9uc0NvbnRhaW5lciIsImluc3RydWN0aW9uIiwiaW5zdHJ1Y3Rpb25BcnRpY2xlIiwiaW5zdHJ1Y3Rpb25UaXRsZSIsInRpdGxlIiwiaW5zdHJ1Y3Rpb25UaXRsZUNvbnRhaW5lciIsInBhcmFnYXBoIiwicGFyYWdyYXBoIiwiaW5zdHJ1Y3Rpb25zIiwiZm9ybUpzb24iLCJzdGFydFRoZVByb2Nlc3NTZWN0aW9uIiwiZm9ybURpYWxvZyIsImRpYWxvZ0Nsb3NlQnV0dG9uIiwiZGlhbG9nVG9wQ29udGFpbmVyIiwiZGF0YXNldCIsImRpYWxvZ0J1dHRvbkNvbnRhaW5lciIsImZpZWxkU2V0T25lIiwiZmllbGRTZXRUd28iLCJmaWVsZFNldFRocmVlIiwiaW5wdXQiLCJsYWJlbCIsInBsYWNlaG9sZGVyT3B0aW9uIiwib3B0aW9uIiwic2VsZWN0T3B0aW9uIiwicGxhY2Vob2xkZXIiLCJyZXF1aXJlZEFzdGVyaXNrIiwiZmllbGRFbGVtZW50Q29udGFpbmVyIiwiZmllbGRDb250YWluZXIiLCJmb3JtUmVxdWlyZW1lbnRUZXh0IiwiYXN0ZXJpc2tTcGFuIiwidGV4dE5vZGVPbmUiLCJmb3JtUmVxdWlyZW1lbnRzQ29udGFpbmVyIiwiZm9ybUZpZWxkTWFpbkNvbnRhaW5lciIsImNyZWF0ZUZvcm0iLCJkaWFsb2ciLCJjcmVhdGVGb3JtRGlhbG9nIiwiY3JlYXRlU3RhcnRUaGVQcm9jZXNzU2VjdGlvbiIsImNvbXBhbnkiLCJmb290ZXIiLCJjdXJyZW50WWVhciIsIkRhdGUiLCJnZXRGdWxsWWVhciIsImZvb3RlclRleHQiLCJmb290ZXJMb2dvIiwiZm9vdGVyTG9nb0xpbmsiLCJjcmVhdGVGb290ZXIiLCJjb21wYW55SW5mbyIsInJlc3BvbnNlTW9kYWwiLCJyZXNwb25zZURpYWxvZ0Nsb3NlQnV0dG9uIiwicmVzcG9uc2VEaWFsb2dIZWFkZXIiLCJyZXNwb25zZU1vZGFsQ29udGVudENvbnRhaW5lciIsImNyZWF0ZVJlc3BvbnNlTW9kYWwiLCJjcmVhdGVEb2N1bWVudEZyYWdtZW50IiwibGV0dGVyU3BhbiIsImFuY2hvciIsInNlY3Rpb24iLCJvYnNlcnZlIiwiZ2V0Q29udHJvbGxlZEVsZW1lbnRzIl0sInNvdXJjZVJvb3QiOiIifQ==