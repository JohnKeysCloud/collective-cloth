/*! For license information please see index.bundle.js.LICENSE.txt */
(()=>{"use strict";var e={};function t(e){if(!e)throw new Error("Invalid modal state object passed to toggleModalState function.");if(!e.closeButtonState)throw new Error("Invalid close button state object passed to toggleModalState function.");e.listenerAttached=!e.listenerAttached,e.closeButtonState.listenerAttached=!e.closeButtonState.listenerAttached}function n(e){"true"===e.getAttribute("aria-hidden")?(e.setAttribute("aria-hidden","false"),e.setAttribute("aria-modal","true")):(e.setAttribute("aria-hidden","true"),e.setAttribute("aria-modal","false"))}function r(e){var r;!function(e){if(!e)throw new Error("Invalid argument passed to dsCreateDialogController function.");if(!(e instanceof HTMLElement))throw new Error("The provided argument is not a valid HTML element.");if("DIALOG"!==e.tagName)throw new Error("The element you passed in is not a dialog element.")}(e),(r=e).setAttribute("aria-modal","false"),r.setAttribute("aria-hidden","true");var a,o=(a=e).id?"#".concat(a.id):a.className?".".concat(a.className.split(" ").join(".")):"specified element",i=e.querySelector(".ds-close-button");(function(e,t){if(!e)throw new Error("Close button not found for the modal element: ".concat(t,"… Double check to ensure it has a class of '.ds-close-button'."));if("BUTTON"!==e.tagName)throw new Error("The close button for the modal element: ".concat(t," is not a button element."))})(i,o),function(e){e.setAttribute("aria-label","Close Dialog")}(i);var c={listenerAttached:!1,closeButtonState:{listenerAttached:!1}},s=function r(){e.classList.remove("closing"),e.close(),n(e),i.removeEventListener("click",l),e.removeEventListener("animationend",r),t(c)},l=function(){e.classList.add("closing"),e.addEventListener("animationend",s)};return{openDialog:function(){!function(){if(e.open)throw new Error("The following dialog is already open: ".concat(o,"."));if(c.listenerAttached)throw new Error("A listener is already attached to this dialog element: ".concat(o,"."));if(c.closeButtonState.listenerAttached)throw new Error("A listener is already attached to the close button of the dialog element: ".concat(o,"."))}(),e.showModal(),n(e),i.addEventListener("click",l),t(c)},closeDialog:l}}function a(e){return a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},a(e)}function o(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,i(r.key),r)}}function i(e){var t=function(e,t){if("object"!=a(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!=a(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==a(t)?t:String(t)}e.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),(()=>{var t;e.g.importScripts&&(t=e.g.location+"");var n=e.g.document;if(!t&&n&&(n.currentScript&&(t=n.currentScript.src),!t)){var r=n.getElementsByTagName("script");if(r.length)for(var a=r.length-1;a>-1&&(!t||!/^http(s?):/.test(t));)t=r[a--].src}if(!t)throw new Error("Automatic publicPath is not supported in this browser");t=t.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),e.p=t})();var c=new(function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.elements={}}var t,n;return t=e,(n=[{key:"getAllControlledElements",value:function(){return this.elements}},{key:"getControlledElement",value:function(e){return this.elements[e].element}},{key:"getControlledElementController",value:function(e){return this.elements[e].controller}},{key:"setControlledElement",value:function(e,t,n){if(!e)throw new Error("No id provided for controlled element.");if(!t)throw new Error("No element provided for controlled element.");if(!n)throw new Error("No controller callback (class/factory) provided for controlled element.");this.elements[e]||(this.elements[e]={}),this.elements[e].element=t,this.elements[e].controller=n}}])&&o(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}());function s(e){e.preventDefault();var t=this.getAttribute("href"),n=document.querySelector(t);if(n){var r=document.querySelector("header").offsetHeight,a=n.getBoundingClientRect().top+window.scrollY-r;window.scrollTo({top:a,behavior:"smooth"})}}function l(e){var t=document.querySelector(e);if(t)return t;console.error("Element not found for selector: ".concat(e))}window.addEventListener("load",(function(){var e=document.getElementById("response-dialog");c.setControlledElement("responseModal",e,r(e))}));var u={animating:!1};function d(e){var t=l("nav");e?e&&(t.classList.remove("expanded"),u.animating=!1):(t.classList.add("expanded"),u.animating=!0)}function m(){var e=l(".nav-toggle-button"),t=e.classList.contains("active");if(t)e.classList.remove("active"),e.setAttribute("aria-label","Open Navigation Menu"),e.setAttribute("aria-expanded",!1),d(t);else{if(!0===u.animating)return;e.classList.add("active"),e.setAttribute("aria-label","Close Navigation Menu"),e.setAttribute("aria-expanded",!0),d(t)}e.addEventListener("click",m)}var f=1,p=!1;function v(e){h(f+=e)}function h(e){var t,n,r=document.querySelectorAll(".carousel-slide");document.querySelectorAll(".carousel-navigation-button"),function(e,t){t>e?f=1:t<1&&(f=e)}(r.length,e),(t=document.querySelector(".carousel-slide.active")).classList.add("deactivating"),p=!0,(n=t).setDeactivatedSlideToDisplayNoneRef=function(){!function(e){e.classList.remove("deactivating","active"),p=!1,e.removeEventListener("animationend",e.setDeactivatedSlideToDisplayNoneRef)}(n)},n.addEventListener("animationend",n.setDeactivatedSlideToDisplayNoneRef),document.querySelector(".carousel-navigation-button.active").classList.remove("active"),function(){var e=document.querySelectorAll(".carousel-slide"),t=document.querySelectorAll(".carousel-navigation-button");e[f-1].classList.add("active"),t[f-1].classList.add("active")}()}function g(e,t){"left"===t?(e.style.setProperty("--fade-in","var(--left-fade-in-animation)"),e.style.setProperty("--fade-out","var(--left-fade-out-animation)")):"right"===t&&(e.style.setProperty("--fade-in","var(--right-fade-in-animation)"),e.style.setProperty("--fade-out","var(--right-fade-out-animation)"))}function b(){var e=document.documentElement;!function(e){var t=document.querySelector(".carousel-arrow.left-arrow"),n=document.querySelector(".carousel-arrow.right-arrow");t&&t.addEventListener("click",(function(){if(!p){var t=f;v(-1),g(e,"left"),t<=f&&g(e,"right")}})),n&&n.addEventListener("click",(function(){if(!p){var t=f;v(1),g(e,"right"),t>=f&&g(e,"left")}}))}(e),function(e){document.querySelectorAll(".carousel-navigation-button").forEach((function(t,n){t.addEventListener("click",(function(){if(!t.classList.contains("active")&&!p){var r=f;!function(e){h(f=e)}(n+1),r<f?g(e,"right"):r>f&&g(e,"left")}}))}))}(e)}var y=function(e){return(arguments.length>1&&void 0!==arguments[1]?arguments[1]:document).querySelector(e)},E=function(e){return(arguments.length>1&&void 0!==arguments[1]?arguments[1]:document).querySelectorAll(e)},w=function(e,t,n){return e.addEventListener(t,n)},A=function(e,t,n){return e.removeEventListener(t,n)},S=function(e,t,n){return e.classList[t](n)},x=function(e,t){return e.disabled=t};function L(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,a,o,i,c=[],s=!0,l=!1;try{if(o=(n=n.call(e)).next,0===t){if(Object(n)!==n)return;s=!1}else for(;!(s=(r=o.call(n)).done)&&(c.push(r.value),c.length!==t);s=!0);}catch(e){l=!0,a=e}finally{try{if(!s&&null!=n.return&&(i=n.return(),Object(i)!==i))return}finally{if(l)throw a}}return c}}(e,t)||function(e,t){if(e){if("string"==typeof e)return C(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?C(e,t):void 0}}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function C(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function k(e){var t=e.target,n=O.submitButton(),r=O.characterCount(),a=t.value.trim().length,o=a>=99;r.textContent="".concat(a,"/").concat(99),o?(x(n,!1),S(r,"add","valid")):(x(n,!0),S(r,"remove","valid"))}var O={form:function(){return y("#start-the-process-form")},stepNumber:function(){return y("#step-number")},characterCount:function(){return y("#character-count")},submitButton:function(){return y("#submit-button")},previousButton:function(){return y("#previous-button")},nextButton:function(){return y("#next-button")},modal:function(){return y("#start-the-process-dialog")},closeButton:function(){return y("#process-dialog-close-button")},buttonContainer:function(){return y("#dialog-button-container")},fieldSet:function(e){return y('[data-field-set="'.concat(e,'"]'))},textArea:function(){return y("textarea")},nameField:function(){return y("#name")}},N=function(e,t){var n;S(O.fieldSet(e),"remove","active"),S(O.fieldSet(t),"add","active"),n=t,O.stepNumber().textContent="Step ".concat(n),U.setNewFieldSet(t)},q=function(e){var t=O.textArea(),n=O.characterCount();"enable"===e?(S(n,"add","active"),t.value.trim().length>=99&&(S(n,"add","valid"),x(O.submitButton(),!1)),w(t,"input",k)):"disable"===e&&(S(n,"remove","active"),S(n,"remove","valid"),x(O.submitButton(),!0),A(t,"input",k))};const T=JSON.parse('[{"id":"success","src":"https://collective-cloth.s3.us-east-2.amazonaws.com/_s3-static-assets/media/images/response-bots/successBot.gif","alt":"Success Bot"},{"id":"error","src":"https://collective-cloth.s3.us-east-2.amazonaws.com/_s3-static-assets/media/images/response-bots/errorBot.gif","alt":"Error Bot"}]');function B(e){var t=c.getControlledElement("responseModal"),n=c.getControlledElementController("responseModal"),r=t.querySelector("#response-dialog-heading"),a=t.querySelector("#response-dialog-paragraph"),o=t.querySelector("#response-dialog-image");if("success"===e.status){r.textContent="Submission confirmed. Please stand by for imminent contact. 💭",a.textContent="Your cooperation with the collective is appreciated.";var i=T.find((function(e){return"success"===e.id}));o.src=i.src,o.alt=i.alt,O&&O.closeButton&&O.closeButton().click()}else{r.textContent="Submission Failed. Please try again. 💭",a.textContent=e.message;var s=T.find((function(e){return"error"===e.id}));o.src=s.src,o.alt=s.alt}n.openDialog()}function j(e){return j="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},j(e)}function P(){P=function(){return t};var e,t={},n=Object.prototype,r=n.hasOwnProperty,a=Object.defineProperty||function(e,t,n){e[t]=n.value},o="function"==typeof Symbol?Symbol:{},i=o.iterator||"@@iterator",c=o.asyncIterator||"@@asyncIterator",s=o.toStringTag||"@@toStringTag";function l(e,t,n){return Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}),e[t]}try{l({},"")}catch(e){l=function(e,t,n){return e[t]=n}}function u(e,t,n,r){var o=t&&t.prototype instanceof g?t:g,i=Object.create(o.prototype),c=new q(r||[]);return a(i,"_invoke",{value:C(e,n,c)}),i}function d(e,t,n){try{return{type:"normal",arg:e.call(t,n)}}catch(e){return{type:"throw",arg:e}}}t.wrap=u;var m="suspendedStart",f="suspendedYield",p="executing",v="completed",h={};function g(){}function b(){}function y(){}var E={};l(E,i,(function(){return this}));var w=Object.getPrototypeOf,A=w&&w(w(T([])));A&&A!==n&&r.call(A,i)&&(E=A);var S=y.prototype=g.prototype=Object.create(E);function x(e){["next","throw","return"].forEach((function(t){l(e,t,(function(e){return this._invoke(t,e)}))}))}function L(e,t){function n(a,o,i,c){var s=d(e[a],e,o);if("throw"!==s.type){var l=s.arg,u=l.value;return u&&"object"==j(u)&&r.call(u,"__await")?t.resolve(u.__await).then((function(e){n("next",e,i,c)}),(function(e){n("throw",e,i,c)})):t.resolve(u).then((function(e){l.value=e,i(l)}),(function(e){return n("throw",e,i,c)}))}c(s.arg)}var o;a(this,"_invoke",{value:function(e,r){function a(){return new t((function(t,a){n(e,r,t,a)}))}return o=o?o.then(a,a):a()}})}function C(t,n,r){var a=m;return function(o,i){if(a===p)throw new Error("Generator is already running");if(a===v){if("throw"===o)throw i;return{value:e,done:!0}}for(r.method=o,r.arg=i;;){var c=r.delegate;if(c){var s=k(c,r);if(s){if(s===h)continue;return s}}if("next"===r.method)r.sent=r._sent=r.arg;else if("throw"===r.method){if(a===m)throw a=v,r.arg;r.dispatchException(r.arg)}else"return"===r.method&&r.abrupt("return",r.arg);a=p;var l=d(t,n,r);if("normal"===l.type){if(a=r.done?v:f,l.arg===h)continue;return{value:l.arg,done:r.done}}"throw"===l.type&&(a=v,r.method="throw",r.arg=l.arg)}}}function k(t,n){var r=n.method,a=t.iterator[r];if(a===e)return n.delegate=null,"throw"===r&&t.iterator.return&&(n.method="return",n.arg=e,k(t,n),"throw"===n.method)||"return"!==r&&(n.method="throw",n.arg=new TypeError("The iterator does not provide a '"+r+"' method")),h;var o=d(a,t.iterator,n.arg);if("throw"===o.type)return n.method="throw",n.arg=o.arg,n.delegate=null,h;var i=o.arg;return i?i.done?(n[t.resultName]=i.value,n.next=t.nextLoc,"return"!==n.method&&(n.method="next",n.arg=e),n.delegate=null,h):i:(n.method="throw",n.arg=new TypeError("iterator result is not an object"),n.delegate=null,h)}function O(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function N(e){var t=e.completion||{};t.type="normal",delete t.arg,e.completion=t}function q(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(O,this),this.reset(!0)}function T(t){if(t||""===t){var n=t[i];if(n)return n.call(t);if("function"==typeof t.next)return t;if(!isNaN(t.length)){var a=-1,o=function n(){for(;++a<t.length;)if(r.call(t,a))return n.value=t[a],n.done=!1,n;return n.value=e,n.done=!0,n};return o.next=o}}throw new TypeError(j(t)+" is not iterable")}return b.prototype=y,a(S,"constructor",{value:y,configurable:!0}),a(y,"constructor",{value:b,configurable:!0}),b.displayName=l(y,s,"GeneratorFunction"),t.isGeneratorFunction=function(e){var t="function"==typeof e&&e.constructor;return!!t&&(t===b||"GeneratorFunction"===(t.displayName||t.name))},t.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,y):(e.__proto__=y,l(e,s,"GeneratorFunction")),e.prototype=Object.create(S),e},t.awrap=function(e){return{__await:e}},x(L.prototype),l(L.prototype,c,(function(){return this})),t.AsyncIterator=L,t.async=function(e,n,r,a,o){void 0===o&&(o=Promise);var i=new L(u(e,n,r,a),o);return t.isGeneratorFunction(n)?i:i.next().then((function(e){return e.done?e.value:i.next()}))},x(S),l(S,s,"Generator"),l(S,i,(function(){return this})),l(S,"toString",(function(){return"[object Generator]"})),t.keys=function(e){var t=Object(e),n=[];for(var r in t)n.push(r);return n.reverse(),function e(){for(;n.length;){var r=n.pop();if(r in t)return e.value=r,e.done=!1,e}return e.done=!0,e}},t.values=T,q.prototype={constructor:q,reset:function(t){if(this.prev=0,this.next=0,this.sent=this._sent=e,this.done=!1,this.delegate=null,this.method="next",this.arg=e,this.tryEntries.forEach(N),!t)for(var n in this)"t"===n.charAt(0)&&r.call(this,n)&&!isNaN(+n.slice(1))&&(this[n]=e)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(t){if(this.done)throw t;var n=this;function a(r,a){return c.type="throw",c.arg=t,n.next=r,a&&(n.method="next",n.arg=e),!!a}for(var o=this.tryEntries.length-1;o>=0;--o){var i=this.tryEntries[o],c=i.completion;if("root"===i.tryLoc)return a("end");if(i.tryLoc<=this.prev){var s=r.call(i,"catchLoc"),l=r.call(i,"finallyLoc");if(s&&l){if(this.prev<i.catchLoc)return a(i.catchLoc,!0);if(this.prev<i.finallyLoc)return a(i.finallyLoc)}else if(s){if(this.prev<i.catchLoc)return a(i.catchLoc,!0)}else{if(!l)throw new Error("try statement without catch or finally");if(this.prev<i.finallyLoc)return a(i.finallyLoc)}}}},abrupt:function(e,t){for(var n=this.tryEntries.length-1;n>=0;--n){var a=this.tryEntries[n];if(a.tryLoc<=this.prev&&r.call(a,"finallyLoc")&&this.prev<a.finallyLoc){var o=a;break}}o&&("break"===e||"continue"===e)&&o.tryLoc<=t&&t<=o.finallyLoc&&(o=null);var i=o?o.completion:{};return i.type=e,i.arg=t,o?(this.method="next",this.next=o.finallyLoc,h):this.complete(i)},complete:function(e,t){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&t&&(this.next=t),h},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.finallyLoc===e)return this.complete(n.completion,n.afterLoc),N(n),h}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.tryLoc===e){var r=n.completion;if("throw"===r.type){var a=r.arg;N(n)}return a}}throw new Error("illegal catch attempt")},delegateYield:function(t,n,r){return this.delegate={iterator:T(t),resultName:n,nextLoc:r},"next"===this.method&&(this.arg=e),h}},t}function I(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function F(e,t,n,r,a,o,i){try{var c=e[o](i),s=c.value}catch(e){return void n(e)}c.done?t(s):Promise.resolve(s).then(r,a)}function _(){var e;return e=P().mark((function e(t){var n,r,a;return P().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,fetch("/api/submit-form",{method:"POST",headers:{"Content-Type":"application/json"},body:t});case 3:return r=e.sent,e.prev=4,e.next=7,r.json();case 7:n=e.sent,e.next=16;break;case 10:return e.prev=10,e.t0=e.catch(4),console.error("Failed to parse JSON response:",e.t0),B(n={status:"error",message:"Failed to parse JSON response"}),e.abrupt("return",{success:!1,error:e.t0.message});case 16:if(200!==r.status){e.next=21;break}return B(n),e.abrupt("return",{success:!0,data:n});case 21:if(400!==r.status){e.next=27;break}return console.error("Request error:",n.error),B({status:"error",message:"Invalid request sent"}),e.abrupt("return",{success:!1,error:"Invalid request"});case 27:return console.error("Unexpected response status:",r.status),B({status:"error",message:"An unexpected error occurred"}),e.abrupt("return",{success:!1,error:r.statusText});case 30:e.next=39;break;case 32:return e.prev=32,e.t1=e.catch(0),console.error("Client-side error - form submission:",e.t1),a=e.t1.message,e.t1.message.includes("NetworkError")&&(a="Please check your internet connection and try again."),B(e.t1.message),e.abrupt("return",{success:!1,error:a});case 39:case"end":return e.stop()}}),e,null,[[0,32],[4,10]])})),_=function(){var t=this,n=arguments;return new Promise((function(r,a){var o=e.apply(t,n);function i(e){F(o,r,a,i,c,"next",e)}function c(e){F(o,r,a,i,c,"throw",e)}i(void 0)}))},_.apply(this,arguments)}function D(e){var t=E("input, select, textarea",e);return Array.from(t).filter((function(e){return e.name})).map((function(e){var t="INPUT"===e.tagName||"TEXTAREA"===e.tagName?e.value.trim():e.value;return[e.name,t]}))}function z(e){this.value=this.value.replace(/[^\d+\-() ]/g,"")}function M(e){var t=document.querySelector('input[type="tel"]');if("add"===e)t.addEventListener("input",z);else{if("remove"!==e)throw new Error('togglePhoneInputSanitization accepts only "add" and "remove" as arguments.');t.removeEventListener("input",z)}}function G(e){var t=e.target,n=t.options[t.selectedIndex];!0!==n.disabled&&""!==n.value&&t.classList.add("valid")}var J=function(){var e={};return{updateFieldSetFormData:function(t,n){e[n]=t},get:function(){return e},clear:function(){return e={}},print:function(){Object.entries(e).forEach((function(e){var t=L(e,2);t[0],t[1].forEach((function(e){var t=L(e,2);t[0],t[1]}))}))}}}();function W(e){if("BUTTON"===e.target.tagName){var t=function(e){var t,n;M(1===e?"add":"remove"),t=2===e?"add":"remove",n=E("select"),"add"===t?n.forEach((function(e){w(e,"change",G)})):"remove"===t&&n.forEach((function(e){A(e,"change",G)}))},n=U.getCurrentFieldSet(),r=O.fieldSet(n),a=e.target,o=O.previousButton(),i=O.nextButton(),c=O.submitButton();if(a===i)!function(e,t,n){var r=O.previousButton(),a=O.nextButton();if(o=!0,E("input, select, textarea",n).forEach((function(e){var t=function(){e.classList.add("is-invalid"),w(e.closest(".field-element-container"),"animationend",(function t(){S(e,"remove","is-invalid"),A(e.closest(".field-element-container"),"animationend",t)})),o=!1},n="INPUT"===e.tagName,r="SELECT"===e.tagName;if(n){var a=e.getAttribute("data-pattern")?new RegExp(e.getAttribute("data-pattern")):null,i=e.value.trim(),c=a&&e.required,s=a&&""!==i,l="number"===e.getAttribute("type");c||s?a.test(e.value.trim())||t():l&&(e.checkValidity()||t())}else r&&(e.value||t())})),o){var o,i=D(n);J.updateFieldSetFormData(i,U.getCurrentFieldSet()),N(e,U.incrementFieldSet()),1!==U.getCurrentFieldSet()&&x(r,!1),3===U.getCurrentFieldSet()&&(x(a,!0),t("enable"))}}(n,q,r),t(n+1);else if(a===o)!function(e,t){var n=O.previousButton(),r=O.nextButton();N(e,U.decrementFieldSet()),1===U.getCurrentFieldSet()&&x(n,!0),3!==U.getCurrentFieldSet()&&x(r,!1),3===e&&t("disable")}(n,q),t(n-1);else if(a===c){var s=function(e,t){e.preventDefault();var n=function(e,t){var n={},r=D(e);t.updateFieldSetFormData(r,U.getCurrentFieldSet());for(var a=t.get(),o=0,i=Object.entries(a);o<i.length;o++)i[o][1].forEach((function(e){var t,r,a=(r=2,function(e){if(Array.isArray(e))return e}(t=e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,a,o,i,c=[],s=!0,l=!1;try{if(o=(n=n.call(e)).next,0===t){if(Object(n)!==n)return;s=!1}else for(;!(s=(r=o.call(n)).done)&&(c.push(r.value),c.length!==t);s=!0);}catch(e){l=!0,a=e}finally{try{if(!s&&null!=n.return&&(i=n.return(),Object(i)!==i))return}finally{if(l)throw a}}return c}}(t,r)||function(e,t){if(e){if("string"==typeof e)return I(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?I(e,t):void 0}}(t,r)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=a[0],i=a[1];n[o]=i}));return n}(t,J);return JSON.stringify(n)}(e,r);!function(e){_.apply(this,arguments)}(s)}M(1===n?"add":"remove")}}var $,U=($=1,{getCurrentFieldSet:function(){return $},setNewFieldSet:function(e){return $=e},incrementFieldSet:function(){return++$},decrementFieldSet:function(){return--$}});function R(){var e=O.modal();e.classList.remove("closing"),e.removeEventListener("animationend",R),e.close(),function(){var e=U.getCurrentFieldSet();O.form().reset(),O.characterCount().textContent="0/99",1!==e&&(x(O.previousButton(),!0),x(O.nextButton(),!1),N(e,1),3===e&&x(O.submitButton(),!0)),E("select").forEach((function(e){return S(e,"remove","valid")})),H(),M("remove"),q("disable"),A(O.closeButton(),"click",Y)}()}function Y(){var e=O.modal();S(e,"add","closing"),w(e,"animationend",R)}function H(){var e=E("#dialog-heading .letter");e[0].classList.contains("animate-letter")?e.forEach((function(e){e.classList.remove("animate-letter")})):e.forEach((function(e,t){setTimeout((function(){e.classList.add("animate-letter")}),123*(t+1))}))}function Z(){O.modal().showModal(),O.nameField().focus(),M("add"),H(),w(O.closeButton(),"click",Y),w(O.buttonContainer(),"click",W)}function V(e){e.forEach((function(e){e.isIntersecting?e.target.classList.add("intersecting"):e.target.classList.remove("intersecting")}))}var X=new IntersectionObserver(V,{threshold:.45}),K=new IntersectionObserver(V,{threshold:.45}),Q=new IntersectionObserver(V,{threshold:.5});function ee(){document.querySelector(".nav-toggle-button").click()}function te(){var e=document.documentElement.offsetWidth,t=document.querySelector(".nav-toggle-button"),n=document.querySelectorAll(".nav-link");t&&(e>1024?("true"===t.ariaExpanded&&t.click(),t.removeEventListener("click",m),n.forEach((function(e){return e.removeEventListener("click",ee)}))):(t.addEventListener("click",m),n.forEach((function(e){return e.addEventListener("click",ee)}))))}function ne(e){this.classList.remove("highlight"),this.removeEventListener("animationend",ne)}function re(){var e=document.getElementById("start-the-process-button");e.classList.add("highlight"),e.addEventListener("animationend",ne)}const ae=e.p+"a03f02b512a3b5f04437.webp",oe=JSON.parse('[{"textContent":"home","href":"#call-to-action"},{"textContent":"who are we?","href":"#who-are-we"},{"textContent":"how does it work?","href":"#how-does-it-work"},{"textContent":"start the process","href":"#start-the-process"}]');function ie(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function ce(e,t,n,r,a,o){if("string"!=typeof t||"string"!=typeof e||"string"!=typeof r||"string"!=typeof n&&!Array.isArray(n)||"string"!=typeof a)throw new Error("Invalid input type. Please provide valid input types.");var i=document.createElement("img");if(i.setAttribute("id",t),i.src=e,i.alt=r,n&&("string"==typeof n?i.classList.add(n):Array.isArray(n)&&n.forEach((function(e){return i.classList.add(e)}))),i.setAttribute("aria-label",a),!o)throw new Error("Please add a size array for the image.");var c,s,l=(s=2,function(e){if(Array.isArray(e))return e}(c=o)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,a,o,i,c=[],s=!0,l=!1;try{if(o=(n=n.call(e)).next,0===t){if(Object(n)!==n)return;s=!1}else for(;!(s=(r=o.call(n)).done)&&(c.push(r.value),c.length!==t);s=!0);}catch(e){l=!0,a=e}finally{try{if(!s&&null!=n.return&&(i=n.return(),Object(i)!==i))return}finally{if(l)throw a}}return c}}(c,s)||function(e,t){if(e){if("string"==typeof e)return ie(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?ie(e,t):void 0}}(c,s)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),u=l[0],d=l[1];return i.setAttribute("height",u),i.setAttribute("width",d),i}function se(e,t){for(var n in t)e.setAttribute(n,t[n])}const le=JSON.parse('[{"$":"https://collective-cloth.s3.us-east-2.amazonaws.com/_s3-static-assets/media/images/product-images/animated/team-capsule-large-animated.webp","C":"3-Dimensional Product Showcase"}]');function ue(e){var t=document.createElement("figure");t.classList.add("carousel");var n=function(e){var t=document.createElement("button");t.classList.add("arrow","right-arrow","carousel-arrow"),se(t,{type:"button","aria-label":"Next"});var n=function(e){if(!e||!e.length)throw new Error("No images provided for carousel.");var t=document.createElement("div");return t.classList.add("carousel-slide-container"),e.forEach((function(n,r){var a=document.createElement("figcaption");a.classList.add("carousel-image-caption"),a.textContent=n.alt;var o=document.createElement("img");o.classList.add("carousel-image","non-interactive"),se(o,{src:n.src,alt:n.alt});var i=document.createElement("span");i.classList.add("carousel-image-index"),i.textContent="".concat(r+1,"/").concat(e.length);var c=document.createElement("figure");c.classList.add("carousel-image-container"),c.append(i,o,a);var s=document.createElement("div");s.classList.add("carousel-slide"),0===r&&s.classList.add("active"),s.setAttribute("data-index",r+1),s.append(c),t.append(s)})),t}(e),r=document.createElement("button");r.classList.add("arrow","left-arrow","carousel-arrow"),se(r,{type:"button","aria-label":"Previous"});var a=document.createElement("div");return a.classList.add("carousel-container"),a.append(r,n,t),a}(e),r=function(e){if(!e.length)throw new Error("No images provided for carousel.");var t=document.createElement("div");t.classList.add("carousel-navigation-button-container"),e.forEach((function(e,n){var r=document.createElement("button");r.classList.add("carousel-navigation-button"),0===n&&r.classList.add("active"),se(r,{type:"button","aria-label":"Go to slide ".concat(n+1),"data-index":n+1}),t.append(r)}));var n=document.createElement("div");return n.classList.add("carousel-navigation-container"),n.appendChild(t),n}(e);return t.append(n,r),t}const de=e.p+"73dbabb4528a8e2f6d55.gif",me=JSON.parse('[{"name":"Time Capsule NY","link":"http://www.timecapsuleny.io","logo":"https://collective-cloth.s3.us-east-2.amazonaws.com/_s3-static-assets/media/images/company-logos/tcny-grayscale45.svg"},{"name":"American PoolPlayers Association","link":"https://poolplayers.com/","logo":"https://collective-cloth.s3.us-east-2.amazonaws.com/_s3-static-assets/media/images/company-logos/apa-grayscale45.svg"}]'),fe=JSON.parse('[{"src":"https://collective-cloth.s3.us-east-2.amazonaws.com/_s3-static-assets/media/images/carousel-images/carousel-image-1.webp","alt":"Carousel image 1"},{"src":"https://collective-cloth.s3.us-east-2.amazonaws.com/_s3-static-assets/media/images/carousel-images/carousel-image-2.webp","alt":"Carousel image 2"},{"src":"https://collective-cloth.s3.us-east-2.amazonaws.com/_s3-static-assets/media/images/carousel-images/carousel-image-3.webp","alt":"Carousel image 3"},{"src":"https://collective-cloth.s3.us-east-2.amazonaws.com/_s3-static-assets/media/images/carousel-images/carousel-image-4.webp","alt":"Carousel image 4"}]'),pe=JSON.parse('[{"title":"Start the Process","textContent":["Share details about your collective and design preferences below.","Our team will promptly contact you to discuss your tailored needs."]},{"title":"Design Collaboration","textContent":["Work closely with our designers to create your product.","Upon final approval, you\'ll receive a personalized quote."]},{"title":"Production & Delivery","textContent":["We produce and emblazon your garments with the chosen designs.","Finally, your order is meticulously prepared and shipped directly to you."]}]'),ve=JSON.parse('[{"fieldSet":1,"id":"name","label":"Enter your name:","pattern":"^[a-zA-Z]+(([\',. -][a-zA-Z ])?[a-zA-Z]*)*$","placeholder":"John Doe","required":true,"type":"text"},{"fieldSet":1,"id":"email","label":"Enter your email address:","pattern":"^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\\\.[a-zA-Z]{2,}$","placeholder":"example@email.com","required":true,"type":"email"},{"fieldSet":1,"id":"phone","label":"Enter your phone number:","pattern":"^\\\\+?[0-9]{1,3}?[-. ]?([0-9]{2,4}?[-. ]?){1,3}[0-9]{4,6}$","placeholder":"212-555-1234","required":false,"type":"tel"},{"fieldSet":2,"id":"collective_type","label":"What type of collective do you represent?","options":["Sports/E-Sports Team","Corporate Entity","Non-Profit Organization","Educational Institution","Special Event Group","Other"],"required":true,"type":"select"},{"fieldSet":2,"id":"garment_type","label":"Specify garment type:","options":["Crewneck T-Shirt","Tank-Top","Crewneck Sweater","Hoodie","Polo Shirt","Windbreaker Jacket","Baseball Cap","Beanie","Other"],"required":true,"type":"select"},{"fieldSet":2,"id":"color","label":"In what color?","options":["Black","White","Grey","Red","Green","Blue","Purple","Pink","Yellow","Orange","Other"],"required":true,"type":"select"},{"fieldSet":2,"id":"quantity","label":"How many?","placeholder":"e.g., 50","required":true,"type":"number"},{"fieldSet":3,"id":"vision","label":"Tell us your vision:","placeholder":"Convey your concept 💭 \\n 〔 99 character min. 〕 \\n \\n Interested in an AI generated custom logo? \\n \\n Where should the designs appear on the garment(s)? \\n \\n Should all items in a style (e.g., shirts, sweaters, hats) be identical or unique? \\n \\n Provide as many details as possible about your design preferences and ideas.","required":true,"type":"textarea"}]'),he=JSON.parse('{"name":"collective cloth","logo":"https://cyclone-studios.s3.us-east-2.amazonaws.com/s3_cyclone-studios/alphaLogos/cycloneStudios/cycloneStudios.svg","link":"https://www.cyclonestud.io/"}');var ge,be,ye,Ee,we,Ae,Se;document.getElementById("content").append(function(){var e=document.createElement("header"),t=document.createElement("div");t.setAttribute("class","content-container");var n=ce(ae,"header-logo","company-logo","Cyclone Studios Logo","Cyclone Studios Logo",["123px","123px"]),r=document.createElement("a");r.setAttribute("id","header-logo-link"),r.setAttribute("href","/"),r.append(n);var a=document.createElement("h4");a.setAttribute("id","header-logo-text"),a.classList.add("company-name"),a.setAttribute("aria-label","Collective Cloth"),a.textContent="collective cloth";var o=document.createElement("div");o.setAttribute("id","header-logo-container"),o.append(r,a);var i,c=function(e){var t=document.createElement("div");t.classList.add("nav-toggle-bars");var n=document.createElement("button");return n.classList.add("nav-toggle-button"),se(n,{"aria-label":"Open Navigation Menu","aria-expanded":!1,"aria-controls":"nav"}),n.appendChild(t),n}(),s=function(e){var t=document.createElement("nav"),n=document.createElement("ul");return n.classList.add("nav-ul"),e.forEach((function(e){var t=document.createElement("li");t.classList.add("nav-item");var r=document.createElement("a");r.classList.add("nav-link"),r.textContent=e.textContent,r.href=e.href,t.appendChild(r),n.appendChild(t)})),t.appendChild(n),t}(oe);return s.prepend(((i=document.createElement("h2")).setAttribute("id","nav-heading"),i.textContent="Main Menu",i)),t.append(o,c,s),e.append(t),e}(),function(){var e=document.createElement("section");e.setAttribute("id","call-to-action");var t=document.createElement("div");return t.classList.add("content-container"),t.append(function(){var e=document.createElement("div");e.setAttribute("id","call-to-action-left");var t=document.createElement("span");t.classList.add("clipped-text"),t.textContent="show solidarity in style ";var n=document.createElement("span");n.classList.add("emoji","heading-emoji"),n.textContent="😎";var r=document.createElement("h1");r.setAttribute("id","call-to-action-heading"),r.append(t,n);var a=document.createTextNode("implementing "),o=document.createElement("span");o.textContent="AI",o.classList.add("call-to-action-ai");var i=document.createTextNode(" in creative design."),c=document.createElement("h3");c.setAttribute("id","call-to-action-subheading"),c.append(a,o,i);var s=document.createElement("p");s.classList.add("article-text-content"),s.textContent="Our team, a blend of designers, apparel manufacturers, and business experts, specializes in generating bespoke apparel that reflects the distinct identity of each collective we work with.";var l=document.createElement("p");l.classList.add("article-text-content"),l.textContent="We offer a comprehensive service that seamlessly integrates design, production, and delivery, ensuring a tailored experience from start to finish.";var u=document.createElement("article");return u.classList.add("call-to-action-text-content"),u.append(r,c,s,l),e.append(u),e}(),function(){var e=document.createElement("div");e.setAttribute("id","call-to-action-right");var t=ce(le[0].$,"call-to-action-product-image","",le[0].C,"3-Dimensional Product Showcase",["800","800"]);return e.append(t),e}()),e.append(t),e}(),function(e){var t=document.createElement("section");t.setAttribute("id","connections");var n=document.createElement("div");n.classList.add("content-container");var r=document.createElement("div");return r.classList.add("logo-container"),e.forEach((function(e){var t=document.createElement("img");t.classList.add("connection-logo"),t.src=e.logo,t.alt=e.name;var n=document.createElement("a");n.classList.add("connections-link"),n.href=e.link,n.target="_blank",n.rel="noopener noreferrer",n.append(t),r.append(n)})),n.append(r),t.append(n),t}(me),function(e){var t=document.createElement("section");t.setAttribute("id","who-are-we");var n=document.createElement("div");n.classList.add("content-container");var r=ue(e),a=document.createElement("h3");a.setAttribute("id","who-are-we-heading"),a.textContent="Who Are We?";var o=document.createElement("p");o.classList.add("article-text-content"),o.textContent="Conceived to craft custom couture for your collective, our company champions the creation of cohesive, captivating clothing that celebrates your unique camaraderie and character.";var i=document.createElement("p");i.classList.add("article-text-content"),i.textContent="From competitive teams to corporate circles, we commit to customizing chic, comfortable compositions. Utilizing choice materials and cutting-edge design techniques, we convert your vision into a wearable canvas, capturing the essence of your unity.",document.createElement("p").classList.add("article-text-content");var c=document.createElement("article");return c.setAttribute("id","who-are-we-text-content"),c.append(a,o,i),n.append(r,c),t.append(n),t}(fe),function(e){var t=document.createElement("section");t.setAttribute("id","how-does-it-work");var n=document.createElement("div");n.classList.add("content-container");var r=document.createElement("article");r.classList.add("how-does-it-work-text-content");var a=document.createElement("h3");a.setAttribute("id","how-does-it-work-heading"),a.textContent="How Does It Work?",n.append(a);var o=document.createElement("div");return o.setAttribute("id","instructions-container"),e.forEach((function(e,t){var n=document.createElement("article");n.classList.add("instruction-article");var r=document.createElement("div");r.classList.add("step-number"),r.textContent="0".concat(t+1," ");var a=document.createElement("h4");a.classList.add("instruction-number"),a.textContent=e.title;var i=document.createElement("div");i.classList.add("instruction-title-container"),i.append(r,a);var c=document.createElement("div");c.classList.add("instruction-text-content"),e.textContent.forEach((function(e){var t=document.createElement("p");t.classList.add("article-text-content"),t.textContent=e,c.appendChild(t)})),n.append(i,c),o.appendChild(n)})),r.appendChild(o),n.appendChild(r),t.append(n),t}(pe),function(e){var t=document.createElement("section");t.setAttribute("id","start-the-process");var n=document.createElement("div");n.classList.add("content-container");var r=document.createElement("button");r.setAttribute("id","start-the-process-button"),r.textContent="start the process";var a=function(e){var t=document.createElement("h2");t.setAttribute("id","dialog-heading"),t.textContent="The Process";var n=document.createElement("h3");n.setAttribute("id","step-number"),n.textContent="Step 1";var r=document.createElement("button");r.setAttribute("id","process-dialog-close-button"),r.setAttribute("type","button"),r.setAttribute("aria-label","Close Dialog"),r.textContent="✕";var a=document.createElement("div");a.setAttribute("id","dialog-top-container"),a.append(n,r);var o=document.createElement("button");o.setAttribute("id","previous-button"),o.setAttribute("disabled","true"),o.type="button",o.dataset.element="button",o.textContent="previous";var i=document.createElement("button");i.setAttribute("id","next-button"),i.type="button",i.dataset.element="button",i.textContent="next";var c=document.createElement("button");c.setAttribute("id","submit-button"),c.setAttribute("form","start-the-process-form"),c.setAttribute("type","submit"),c.setAttribute("disabled","true"),c.dataset.element="button",c.textContent="submit";var s=document.createElement("div");s.setAttribute("id","dialog-button-container"),s.append(o,i,c);var l=function(e){var t=document.createElement("fieldset");t.setAttribute("id","field-set-one"),t.classList.add("field-set","active"),t.dataset.fieldSet=1;var n=document.createElement("fieldset");n.setAttribute("id","field-set-two"),n.classList.add("field-set"),n.dataset.fieldSet=2;var r=document.createElement("fieldset");r.setAttribute("id","field-set-three"),r.classList.add("field-set"),r.dataset.fieldSet=3,e.forEach((function(e,a){var o,i=document.createElement("label");if(i.setAttribute("for",e.id),i.textContent=e.label,"select"===e.type){var c=document.createElement("option");c.setAttribute("value",""),c.setAttribute("disabled","true"),c.setAttribute("selected","true"),c.textContent="make a selection",(o=document.createElement("select")).setAttribute("id",e.id),o.setAttribute("name",e.id),o.appendChild(c),e.options.forEach((function(e){var t=document.createElement("option");t.setAttribute("value",e),t.textContent=e,o.appendChild(t)}))}else"textarea"===e.type?((o=document.createElement(e.type)).setAttribute("id",e.id),o.setAttribute("name",e.id),o.setAttribute("minlength",99),o.setAttribute("maxlength",999)):"number"===e.type?((o=document.createElement("input")).setAttribute("id",e.id),o.setAttribute("name",e.id),o.setAttribute("type",e.type),o.setAttribute("min",1)):((o=document.createElement("input")).setAttribute("id",e.id),o.setAttribute("name",e.id),o.setAttribute("type",e.type));if(e.pattern&&o.setAttribute("pattern",o.setAttribute("data-pattern",e.pattern)),e.placeholder&&o.setAttribute("placeholder",e.placeholder),e.required){o.setAttribute("required","true");var s=document.createElement("span");s.classList.add("required-asterisk"),s.textContent="✽ ",s.setAttribute("aria-label","required field asterisk"),i.prepend(s)}var l=document.createElement("div");l.classList.add("field-element-container"),l.append(o);var u=document.createElement("div");u.setAttribute("id","form-field-container-".concat(++a)),u.classList.add("form-field-container"),1===e.fieldSet?u.dataset.fieldSet=1:2===e.fieldSet?u.dataset.fieldSet=2:3===e.fieldSet&&(u.dataset.fieldSet=3),u.append(i,l),1===e.fieldSet?t.appendChild(u):2===e.fieldSet?n.appendChild(u):3===e.fieldSet&&r.appendChild(u)}));var a=document.createElement("p");a.setAttribute("id","form-requirement-text");var o=document.createElement("span");o.classList.add("asterisk-span"),o.textContent="✽",o.setAttribute("aria-label","required field asterisk");var i=document.createTextNode(" ＝ required");a.append(o,i);var c=document.createElement("p");c.setAttribute("id","character-count"),c.textContent="0/99";var s=document.createElement("div");s.setAttribute("id","form-requirements-container"),s.append(a,c);var l=document.createElement("div");l.setAttribute("id","form-field-main-container"),l.append(t,n,r),l.appendChild(s);var u=document.createElement("form");return u.setAttribute("id","start-the-process-form"),u.appendChild(l),u}(e);l.appendChild(s);var u=document.createElement("dialog");return u.setAttribute("id","start-the-process-dialog"),u.append(t,a,l),u}(e);return n.append(r,a),t.append(n),t}(ve),function(e,t){var n=document.createElement("footer"),r=document.createElement("div");if(r.classList.add("content-container"),e.name){var a=(new Date).getFullYear(),o=document.createElement("p");o.setAttribute("id","footer-text"),o.textContent="© ".concat(a," ").concat(e.name),r.appendChild(o)}if(e.logo){var i=document.createElement("img");if(i.setAttribute("id","footer-logo"),i.setAttribute("src",e.logo),i.setAttribute("alt","".concat(e.name," logo")),e.link){var c=document.createElement("a");c.setAttribute("id","footer-logo-link"),c.setAttribute("href",e.link),c.setAttribute("target","_blank"),c.appendChild(i),r.appendChild(c)}else r.appendChild(i)}return n.appendChild(r),n}(he),function(){var e=document.createElement("dialog");e.setAttribute("id","response-dialog");var t=document.createElement("button");t.setAttribute("class","ds-close-button"),t.setAttribute("id","response-process-dialog-close-button"),t.setAttribute("type","button"),t.setAttribute("aria-label","Close Dialog"),t.textContent="✕";var n=document.createElement("h3");n.setAttribute("id","response-dialog-heading"),n.textContent="Submission confirmed. Please stand by for imminent contact 💭";var r=document.createElement("p");r.setAttribute("id","response-dialog-paragraph"),r.textContent="Your cooperation with the collective is appreciated.";var a=document.createElement("img");a.setAttribute("id","response-dialog-image"),a.setAttribute("src",de);var o=document.createElement("div");return o.setAttribute("id","response-dialog-content-container"),o.append(t,n,r,a),e.appendChild(o),e}()),Ae=document.getElementById("dialog-heading"),Ee=Ae,we=document.createDocumentFragment(),Ee.textContent.split("").forEach((function(e,t){var n=document.createElement("span");n.setAttribute("id","".concat("split-text","-").concat(t+1)),n.classList.add("letter"),n.textContent=" "===e?" ":e,we.appendChild(n)})),Se=we,Ae.textContent="",Ae.appendChild(Se),document.querySelectorAll('a[href^="#"]').forEach((function(e){e.addEventListener("click",s)})),document.querySelector(".nav-toggle-button").addEventListener("click",m),document.getElementById("start-the-process-button").addEventListener("click",Z),document.querySelector('.nav-link[href="#start-the-process"]').addEventListener("click",re),window.addEventListener("load",te),window.addEventListener("resize",te),b(),ge=document.querySelectorAll("section"),be=document.querySelectorAll("p"),ye=document.getElementById("start-the-process-button"),ge.forEach((function(e){return X.observe(e)})),be.forEach((function(e){return K.observe(e)})),Q.observe(ye),c.getAllControlledElements()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,