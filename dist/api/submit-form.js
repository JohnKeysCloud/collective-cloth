const fs=require("fs"),path=require("path"),sgMail=require("@sendgrid/mail");sgMail.setApiKey(process.env.SENDGRID_API_KEY);const msg={to:"test@example.com",from:"test@example.com",subject:"Sending with SendGrid is Fun",text:"and easy to do anywhere, even with Node.js",html:"<strong>and easy to do anywhere, even with Node.js</strong>"};sgMail.send(msg).then((()=>{console.log("Email sent")})).catch((e=>{console.error(e)}));export default async(e,t)=>{if("POST"===e.method)try{const s=path.join(__dirname,"..","templates","email.html"),o=async(e,t,o,a)=>{try{const a={to:e,from:t,subject:o,html:s};await sgMail.send(a),console.log("Email Sent")}catch(e){console.error("Error sending email:",e)}},{name:a,email:n,phone:r,collective_type:i,garment_type:l,color:c,quantity:m,vision:d}=e.body;console.log("Received data:",{name:a,email:n,phone:r,collective_type:i,garment_type:l,color:c,quantity:m,vision:d}),o("test@example.com","your-email@example.com","Sending with SendGrid is Fun","./path/to/your-file.html"),t.status(200).json({status:"success",message:"Data received and processed"})}catch(e){console.error("Error processing request:",e),t.status(500).json({status:"error",message:"Internal Server Error"})}else t.setHeader("Allow",["POST"]),t.status(405).end("Method Not Allowed")};