/*! For license information please see index.bundle.js.LICENSE.txt */
(()=>{"use strict";var t={};function e(t){t.preventDefault();var e=this.getAttribute("href"),n=document.querySelector(e);if(n){var r=document.querySelector("header").offsetHeight,a=n.getBoundingClientRect().top+window.scrollY-r;window.scrollTo({top:a,behavior:"smooth"})}}function n(t){var e=document.querySelector(t);if(e)return e;console.error("Element not found for selector: ".concat(t))}t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"==typeof window)return window}}(),(()=>{var e;t.g.importScripts&&(e=t.g.location+"");var n=t.g.document;if(!e&&n&&(n.currentScript&&(e=n.currentScript.src),!e)){var r=n.getElementsByTagName("script");if(r.length)for(var a=r.length-1;a>-1&&(!e||!/^http(s?):/.test(e));)e=r[a--].src}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=e})();var r={animating:!1};function a(t){var e=n("nav");t?t&&(e.classList.remove("expanded"),r.animating=!1):(e.classList.add("expanded"),r.animating=!0)}function o(){var t=n(".nav-toggle-button"),e=t.classList.contains("active");if(e)t.classList.remove("active"),t.setAttribute("aria-label","Open Navigation Menu"),t.setAttribute("aria-expanded",!1),a(e);else{if(!0===r.animating)return;t.classList.add("active"),t.setAttribute("aria-label","Close Navigation Menu"),t.setAttribute("aria-expanded",!0),a(e)}t.addEventListener("click",o)}var i=1,c=!1;function s(t){l(i+=t)}function l(t){var e,n,r=document.querySelectorAll(".carousel-slide");document.querySelectorAll(".carousel-navigation-button"),function(t,e){e>t?i=1:e<1&&(i=t)}(r.length,t),(e=document.querySelector(".carousel-slide.active")).classList.add("deactivating"),c=!0,(n=e).setDeactivatedSlideToDisplayNoneRef=function(){!function(t){t.classList.remove("deactivating","active"),c=!1,t.removeEventListener("animationend",t.setDeactivatedSlideToDisplayNoneRef)}(n)},n.addEventListener("animationend",n.setDeactivatedSlideToDisplayNoneRef),document.querySelector(".carousel-navigation-button.active").classList.remove("active"),function(){var t=document.querySelectorAll(".carousel-slide"),e=document.querySelectorAll(".carousel-navigation-button");t[i-1].classList.add("active"),e[i-1].classList.add("active")}()}function u(t,e){"left"===e?(t.style.setProperty("--fade-in","var(--left-fade-in-animation)"),t.style.setProperty("--fade-out","var(--left-fade-out-animation)")):"right"===e&&(t.style.setProperty("--fade-in","var(--right-fade-in-animation)"),t.style.setProperty("--fade-out","var(--right-fade-out-animation)"))}function d(){var t=document.documentElement;!function(t){var e=document.querySelector(".carousel-arrow.left-arrow"),n=document.querySelector(".carousel-arrow.right-arrow");e&&e.addEventListener("click",(function(){if(!c){var e=i;s(-1),u(t,"left"),e<=i&&u(t,"right")}})),n&&n.addEventListener("click",(function(){if(!c){var e=i;s(1),u(t,"right"),e>=i&&u(t,"left")}}))}(t),function(t){document.querySelectorAll(".carousel-navigation-button").forEach((function(e,n){e.addEventListener("click",(function(){if(!e.classList.contains("active")&&!c){var r=i;!function(t){l(i=t)}(n+1),r<i?u(t,"right"):r>i&&u(t,"left")}}))}))}(t)}var m=function(t){return(arguments.length>1&&void 0!==arguments[1]?arguments[1]:document).querySelector(t)},f=function(t){return(arguments.length>1&&void 0!==arguments[1]?arguments[1]:document).querySelectorAll(t)},p=function(t,e,n){return t.addEventListener(e,n)},v=function(t,e,n){return t.removeEventListener(e,n)},h=function(t,e,n){return t.classList[e](n)},g=function(t,e){return t.disabled=e};function b(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){var n=null==t?null:"undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(null!=n){var r,a,o,i,c=[],s=!0,l=!1;try{if(o=(n=n.call(t)).next,0===e){if(Object(n)!==n)return;s=!1}else for(;!(s=(r=o.call(n)).done)&&(c.push(r.value),c.length!==e);s=!0);}catch(t){l=!0,a=t}finally{try{if(!s&&null!=n.return&&(i=n.return(),Object(i)!==i))return}finally{if(l)throw a}}return c}}(t,e)||function(t,e){if(t){if("string"==typeof t)return y(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);return"Object"===n&&t.constructor&&(n=t.constructor.name),"Map"===n||"Set"===n?Array.from(t):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?y(t,e):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function y(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,r=new Array(e);n<e;n++)r[n]=t[n];return r}function E(t){var e=t.target,n=w.submitButton(),r=w.characterCount(),a=e.value.trim().length,o=a>=99;r.textContent="".concat(a,"/").concat(99),o?(g(n,!1),h(r,"add","valid")):(g(n,!0),h(r,"remove","valid"))}var w={form:function(){return m("#start-the-process-form")},stepNumber:function(){return m("#step-number")},characterCount:function(){return m("#character-count")},submitButton:function(){return m("#submit-button")},previousButton:function(){return m("#previous-button")},nextButton:function(){return m("#next-button")},modal:function(){return m("#start-the-process-dialog")},closeButton:function(){return m("#dialog-close-button")},buttonContainer:function(){return m("#dialog-button-container")},fieldSet:function(t){return m('[data-field-set="'.concat(t,'"]'))},textArea:function(){return m("textarea")},nameField:function(){return m("#name")}},A=function(t,e){var n;h(w.fieldSet(t),"remove","active"),h(w.fieldSet(e),"add","active"),n=e,w.stepNumber().textContent="Step ".concat(n),B.setNewFieldSet(e)},x=function(t){var e=w.textArea(),n=w.characterCount();"enable"===t?(h(n,"add","active"),e.value.trim().length>=99&&(h(n,"add","valid"),g(w.submitButton(),!1)),p(e,"input",E)):"disable"===t&&(h(n,"remove","active"),h(n,"remove","valid"),g(w.submitButton(),!0),v(e,"input",E))};function L(t){return L="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},L(t)}function S(){S=function(){return e};var t,e={},n=Object.prototype,r=n.hasOwnProperty,a=Object.defineProperty||function(t,e,n){t[e]=n.value},o="function"==typeof Symbol?Symbol:{},i=o.iterator||"@@iterator",c=o.asyncIterator||"@@asyncIterator",s=o.toStringTag||"@@toStringTag";function l(t,e,n){return Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}),t[e]}try{l({},"")}catch(t){l=function(t,e,n){return t[e]=n}}function u(t,e,n,r){var o=e&&e.prototype instanceof g?e:g,i=Object.create(o.prototype),c=new j(r||[]);return a(i,"_invoke",{value:O(t,n,c)}),i}function d(t,e,n){try{return{type:"normal",arg:t.call(e,n)}}catch(t){return{type:"throw",arg:t}}}e.wrap=u;var m="suspendedStart",f="suspendedYield",p="executing",v="completed",h={};function g(){}function b(){}function y(){}var E={};l(E,i,(function(){return this}));var w=Object.getPrototypeOf,A=w&&w(w(F([])));A&&A!==n&&r.call(A,i)&&(E=A);var x=y.prototype=g.prototype=Object.create(E);function C(t){["next","throw","return"].forEach((function(e){l(t,e,(function(t){return this._invoke(e,t)}))}))}function k(t,e){function n(a,o,i,c){var s=d(t[a],t,o);if("throw"!==s.type){var l=s.arg,u=l.value;return u&&"object"==L(u)&&r.call(u,"__await")?e.resolve(u.__await).then((function(t){n("next",t,i,c)}),(function(t){n("throw",t,i,c)})):e.resolve(u).then((function(t){l.value=t,i(l)}),(function(t){return n("throw",t,i,c)}))}c(s.arg)}var o;a(this,"_invoke",{value:function(t,r){function a(){return new e((function(e,a){n(t,r,e,a)}))}return o=o?o.then(a,a):a()}})}function O(e,n,r){var a=m;return function(o,i){if(a===p)throw new Error("Generator is already running");if(a===v){if("throw"===o)throw i;return{value:t,done:!0}}for(r.method=o,r.arg=i;;){var c=r.delegate;if(c){var s=q(c,r);if(s){if(s===h)continue;return s}}if("next"===r.method)r.sent=r._sent=r.arg;else if("throw"===r.method){if(a===m)throw a=v,r.arg;r.dispatchException(r.arg)}else"return"===r.method&&r.abrupt("return",r.arg);a=p;var l=d(e,n,r);if("normal"===l.type){if(a=r.done?v:f,l.arg===h)continue;return{value:l.arg,done:r.done}}"throw"===l.type&&(a=v,r.method="throw",r.arg=l.arg)}}}function q(e,n){var r=n.method,a=e.iterator[r];if(a===t)return n.delegate=null,"throw"===r&&e.iterator.return&&(n.method="return",n.arg=t,q(e,n),"throw"===n.method)||"return"!==r&&(n.method="throw",n.arg=new TypeError("The iterator does not provide a '"+r+"' method")),h;var o=d(a,e.iterator,n.arg);if("throw"===o.type)return n.method="throw",n.arg=o.arg,n.delegate=null,h;var i=o.arg;return i?i.done?(n[e.resultName]=i.value,n.next=e.nextLoc,"return"!==n.method&&(n.method="next",n.arg=t),n.delegate=null,h):i:(n.method="throw",n.arg=new TypeError("iterator result is not an object"),n.delegate=null,h)}function N(t){var e={tryLoc:t[0]};1 in t&&(e.catchLoc=t[1]),2 in t&&(e.finallyLoc=t[2],e.afterLoc=t[3]),this.tryEntries.push(e)}function T(t){var e=t.completion||{};e.type="normal",delete e.arg,t.completion=e}function j(t){this.tryEntries=[{tryLoc:"root"}],t.forEach(N,this),this.reset(!0)}function F(e){if(e||""===e){var n=e[i];if(n)return n.call(e);if("function"==typeof e.next)return e;if(!isNaN(e.length)){var a=-1,o=function n(){for(;++a<e.length;)if(r.call(e,a))return n.value=e[a],n.done=!1,n;return n.value=t,n.done=!0,n};return o.next=o}}throw new TypeError(L(e)+" is not iterable")}return b.prototype=y,a(x,"constructor",{value:y,configurable:!0}),a(y,"constructor",{value:b,configurable:!0}),b.displayName=l(y,s,"GeneratorFunction"),e.isGeneratorFunction=function(t){var e="function"==typeof t&&t.constructor;return!!e&&(e===b||"GeneratorFunction"===(e.displayName||e.name))},e.mark=function(t){return Object.setPrototypeOf?Object.setPrototypeOf(t,y):(t.__proto__=y,l(t,s,"GeneratorFunction")),t.prototype=Object.create(x),t},e.awrap=function(t){return{__await:t}},C(k.prototype),l(k.prototype,c,(function(){return this})),e.AsyncIterator=k,e.async=function(t,n,r,a,o){void 0===o&&(o=Promise);var i=new k(u(t,n,r,a),o);return e.isGeneratorFunction(n)?i:i.next().then((function(t){return t.done?t.value:i.next()}))},C(x),l(x,s,"Generator"),l(x,i,(function(){return this})),l(x,"toString",(function(){return"[object Generator]"})),e.keys=function(t){var e=Object(t),n=[];for(var r in e)n.push(r);return n.reverse(),function t(){for(;n.length;){var r=n.pop();if(r in e)return t.value=r,t.done=!1,t}return t.done=!0,t}},e.values=F,j.prototype={constructor:j,reset:function(e){if(this.prev=0,this.next=0,this.sent=this._sent=t,this.done=!1,this.delegate=null,this.method="next",this.arg=t,this.tryEntries.forEach(T),!e)for(var n in this)"t"===n.charAt(0)&&r.call(this,n)&&!isNaN(+n.slice(1))&&(this[n]=t)},stop:function(){this.done=!0;var t=this.tryEntries[0].completion;if("throw"===t.type)throw t.arg;return this.rval},dispatchException:function(e){if(this.done)throw e;var n=this;function a(r,a){return c.type="throw",c.arg=e,n.next=r,a&&(n.method="next",n.arg=t),!!a}for(var o=this.tryEntries.length-1;o>=0;--o){var i=this.tryEntries[o],c=i.completion;if("root"===i.tryLoc)return a("end");if(i.tryLoc<=this.prev){var s=r.call(i,"catchLoc"),l=r.call(i,"finallyLoc");if(s&&l){if(this.prev<i.catchLoc)return a(i.catchLoc,!0);if(this.prev<i.finallyLoc)return a(i.finallyLoc)}else if(s){if(this.prev<i.catchLoc)return a(i.catchLoc,!0)}else{if(!l)throw new Error("try statement without catch or finally");if(this.prev<i.finallyLoc)return a(i.finallyLoc)}}}},abrupt:function(t,e){for(var n=this.tryEntries.length-1;n>=0;--n){var a=this.tryEntries[n];if(a.tryLoc<=this.prev&&r.call(a,"finallyLoc")&&this.prev<a.finallyLoc){var o=a;break}}o&&("break"===t||"continue"===t)&&o.tryLoc<=e&&e<=o.finallyLoc&&(o=null);var i=o?o.completion:{};return i.type=t,i.arg=e,o?(this.method="next",this.next=o.finallyLoc,h):this.complete(i)},complete:function(t,e){if("throw"===t.type)throw t.arg;return"break"===t.type||"continue"===t.type?this.next=t.arg:"return"===t.type?(this.rval=this.arg=t.arg,this.method="return",this.next="end"):"normal"===t.type&&e&&(this.next=e),h},finish:function(t){for(var e=this.tryEntries.length-1;e>=0;--e){var n=this.tryEntries[e];if(n.finallyLoc===t)return this.complete(n.completion,n.afterLoc),T(n),h}},catch:function(t){for(var e=this.tryEntries.length-1;e>=0;--e){var n=this.tryEntries[e];if(n.tryLoc===t){var r=n.completion;if("throw"===r.type){var a=r.arg;T(n)}return a}}throw new Error("illegal catch attempt")},delegateYield:function(e,n,r){return this.delegate={iterator:F(e),resultName:n,nextLoc:r},"next"===this.method&&(this.arg=t),h}},e}function C(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,r=new Array(e);n<e;n++)r[n]=t[n];return r}function k(t,e,n,r,a,o,i){try{var c=t[o](i),s=c.value}catch(t){return void n(t)}c.done?e(s):Promise.resolve(s).then(r,a)}function O(){var t;return t=S().mark((function t(e){var n,r;return S().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.prev=0,t.next=3,fetch("/api/submit-form",{method:"POST",headers:{"Content-Type":"application/json"},body:e});case 3:if(!(n=t.sent).ok){t.next=12;break}return t.next=7,n.json();case 7:return r=t.sent,t.abrupt("return",{success:!0,data:r});case 12:return console.error("Server-side error - form submission failed"),result.message||n.statusText,t.abrupt("return",{success:!1,error:result.message});case 15:t.next=21;break;case 17:t.prev=17,t.t0=t.catch(0),console.error("Client-side error - form submission:",t.t0),t.t0.message;case 21:case"end":return t.stop()}}),t,null,[[0,17]])})),O=function(){var e=this,n=arguments;return new Promise((function(r,a){var o=t.apply(e,n);function i(t){k(o,r,a,i,c,"next",t)}function c(t){k(o,r,a,i,c,"throw",t)}i(void 0)}))},O.apply(this,arguments)}function q(t){var e=f("input, select, textarea",t);return Array.from(e).filter((function(t){return t.name})).map((function(t){var e="INPUT"===t.tagName||"TEXTAREA"===t.tagName?t.value.trim():t.value;return[t.name,e]}))}function N(t){this.value=this.value.replace(/[^\d+\-() ]/g,"")}function T(t){var e=document.querySelector('input[type="tel"]');if("add"===t)e.addEventListener("input",N);else{if("remove"!==t)throw new Error('togglePhoneInputSanitization accepts only "add" and "remove" as arguments.');e.removeEventListener("input",N)}}function j(t){var e=t.target,n=e.options[e.selectedIndex];!0!==n.disabled&&""!==n.value&&e.classList.add("valid")}var F=function(){var t={};return{updateFieldSetFormData:function(e,n){console.log("Updating fieldSet: ".concat(n)),t[n]=e},get:function(){return t},clear:function(){return t={}},print:function(){Object.entries(t).forEach((function(t){var e=b(t,2),n=e[0],r=e[1];console.log("Fieldset: ".concat(n)),r.forEach((function(t){var e=b(t,2),n=e[0],r=e[1];console.log("".concat(n,": ").concat(r))}))}))}}}();function P(t){if("BUTTON"===t.target.tagName){var e=function(t){var e,n;T(1===t?"add":"remove"),e=2===t?"add":"remove",n=f("select"),"add"===e?n.forEach((function(t){p(t,"change",j)})):"remove"===e&&n.forEach((function(t){v(t,"change",j)}))},n=B.getCurrentFieldSet(),r=w.fieldSet(n),a=t.target,o=w.previousButton(),i=w.nextButton(),c=w.submitButton();if(a===i)!function(t,e,n){var r=w.previousButton(),a=w.nextButton();if(o=!0,f("input, select, textarea",n).forEach((function(t){var e=function(){t.classList.add("is-invalid"),p(t.closest(".field-element-container"),"animationend",(function e(){h(t,"remove","is-invalid"),v(t.closest(".field-element-container"),"animationend",e)})),o=!1},n="INPUT"===t.tagName,r="SELECT"===t.tagName;if(n){var a=t.getAttribute("data-pattern")?new RegExp(t.getAttribute("data-pattern")):null,i=t.value.trim(),c=a&&t.required,s=a&&""!==i,l="number"===t.getAttribute("type");c||s?a.test(t.value.trim())||e():l&&(t.checkValidity()||e())}else r&&(t.value||e())})),o){var o,i=q(n);F.updateFieldSetFormData(i,B.getCurrentFieldSet()),A(t,B.incrementFieldSet()),1!==B.getCurrentFieldSet()&&g(r,!1),3===B.getCurrentFieldSet()&&(g(a,!0),e("enable"))}}(n,x,r),e(n+1);else if(a===o)!function(t,e){var n=w.previousButton(),r=w.nextButton();A(t,B.decrementFieldSet()),1===B.getCurrentFieldSet()&&g(n,!0),3!==B.getCurrentFieldSet()&&g(r,!1),3===t&&e("disable")}(n,x),e(n-1);else if(a===c){var s=function(t,e){t.preventDefault();var n=function(t,e){var n={},r=q(t);e.updateFieldSetFormData(r,B.getCurrentFieldSet());for(var a=e.get(),o=0,i=Object.entries(a);o<i.length;o++)i[o][1].forEach((function(t){var e,r,a=(r=2,function(t){if(Array.isArray(t))return t}(e=t)||function(t,e){var n=null==t?null:"undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(null!=n){var r,a,o,i,c=[],s=!0,l=!1;try{if(o=(n=n.call(t)).next,0===e){if(Object(n)!==n)return;s=!1}else for(;!(s=(r=o.call(n)).done)&&(c.push(r.value),c.length!==e);s=!0);}catch(t){l=!0,a=t}finally{try{if(!s&&null!=n.return&&(i=n.return(),Object(i)!==i))return}finally{if(l)throw a}}return c}}(e,r)||function(t,e){if(t){if("string"==typeof t)return C(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);return"Object"===n&&t.constructor&&(n=t.constructor.name),"Map"===n||"Set"===n?Array.from(t):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?C(t,e):void 0}}(e,r)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=a[0],i=a[1];n[o]=i}));return n}(e,F),r=JSON.stringify(n);return console.log(r),r}(t,r);!function(t){O.apply(this,arguments)}(s)}T(1===n?"add":"remove")}}var I,B=(I=1,{getCurrentFieldSet:function(){return I},setNewFieldSet:function(t){return I=t},incrementFieldSet:function(){return++I},decrementFieldSet:function(){return--I}});function _(){var t=w.modal();t.classList.remove("closing"),t.removeEventListener("animationend",_),t.close(),function(){var t=B.getCurrentFieldSet();w.form().reset(),w.characterCount().textContent="0/99",1!==t&&(g(w.previousButton(),!0),g(w.nextButton(),!1),A(t,1),3===t&&g(w.submitButton(),!0)),f("select").forEach((function(t){return h(t,"remove","valid")})),D(),T("remove"),x("disable"),v(w.closeButton(),"click",z)}()}function z(){var t=w.modal();h(t,"add","closing"),p(t,"animationend",_)}function D(){var t=f("#dialog-heading .letter");t[0].classList.contains("animate-letter")?t.forEach((function(t){t.classList.remove("animate-letter")})):t.forEach((function(t,e){setTimeout((function(){t.classList.add("animate-letter")}),123*(e+1))}))}function G(){w.modal().showModal(),w.nameField().focus(),T("add"),D(),p(w.closeButton(),"click",z),p(w.buttonContainer(),"click",P)}function W(t){t.forEach((function(t){t.isIntersecting?t.target.classList.add("intersecting"):t.target.classList.remove("intersecting")}))}var J=new IntersectionObserver(W,{threshold:.45}),M=new IntersectionObserver(W,{threshold:.45}),U=new IntersectionObserver(W,{threshold:.5});function $(){document.querySelector(".nav-toggle-button").click()}function R(){var t=document.documentElement.offsetWidth,e=document.querySelector(".nav-toggle-button"),n=document.querySelectorAll(".nav-link");e&&(t>1024?("true"===e.ariaExpanded&&e.click(),e.removeEventListener("click",o),n.forEach((function(t){return t.removeEventListener("click",$)}))):(e.addEventListener("click",o),n.forEach((function(t){return t.addEventListener("click",$)}))))}function Y(t){this.classList.remove("highlight"),this.removeEventListener("animationend",Y)}function Z(){var t=document.getElementById("start-the-process-button");t.classList.add("highlight"),t.addEventListener("animationend",Y)}const H=t.p+"a03f02b512a3b5f04437.webp",V=JSON.parse('[{"textContent":"home","href":"#call-to-action"},{"textContent":"who are we?","href":"#who-are-we"},{"textContent":"how does it work?","href":"#how-does-it-work"},{"textContent":"start the process","href":"#start-the-process"}]');function X(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,r=new Array(e);n<e;n++)r[n]=t[n];return r}function K(t,e,n,r,a,o){if("string"!=typeof e||"string"!=typeof t||"string"!=typeof r||"string"!=typeof n&&!Array.isArray(n)||"string"!=typeof a)throw new Error("Invalid input type. Please provide valid input types.");var i=document.createElement("img");if(i.setAttribute("id",e),i.src=t,i.alt=r,n&&("string"==typeof n?i.classList.add(n):Array.isArray(n)&&n.forEach((function(t){return i.classList.add(t)}))),i.setAttribute("aria-label",a),!o)throw new Error("Please add a size array for the image.");var c,s,l=(s=2,function(t){if(Array.isArray(t))return t}(c=o)||function(t,e){var n=null==t?null:"undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(null!=n){var r,a,o,i,c=[],s=!0,l=!1;try{if(o=(n=n.call(t)).next,0===e){if(Object(n)!==n)return;s=!1}else for(;!(s=(r=o.call(n)).done)&&(c.push(r.value),c.length!==e);s=!0);}catch(t){l=!0,a=t}finally{try{if(!s&&null!=n.return&&(i=n.return(),Object(i)!==i))return}finally{if(l)throw a}}return c}}(c,s)||function(t,e){if(t){if("string"==typeof t)return X(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);return"Object"===n&&t.constructor&&(n=t.constructor.name),"Map"===n||"Set"===n?Array.from(t):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?X(t,e):void 0}}(c,s)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),u=l[0],d=l[1];return i.setAttribute("height",u),i.setAttribute("width",d),i}function Q(t,e){for(var n in e)t.setAttribute(n,e[n])}function tt(t){var e=document.createElement("figure");e.classList.add("carousel");var n=function(t){var e=document.createElement("button");e.classList.add("arrow","right-arrow","carousel-arrow"),Q(e,{type:"button","aria-label":"Next"});var n=function(t){if(!t||!t.length)throw new Error("No images provided for carousel.");var e=document.createElement("div");return e.classList.add("carousel-slide-container"),t.forEach((function(n,r){var a=document.createElement("figcaption");a.classList.add("carousel-image-caption"),a.textContent=n.alt;var o=document.createElement("img");o.classList.add("carousel-image","non-interactive"),Q(o,{src:n.src,alt:n.alt});var i=document.createElement("span");i.classList.add("carousel-image-index"),i.textContent="".concat(r+1,"/").concat(t.length);var c=document.createElement("figure");c.classList.add("carousel-image-container"),c.append(i,o,a);var s=document.createElement("div");s.classList.add("carousel-slide"),0===r&&s.classList.add("active"),s.setAttribute("data-index",r+1),s.append(c),e.append(s)})),e}(t),r=document.createElement("button");r.classList.add("arrow","left-arrow","carousel-arrow"),Q(r,{type:"button","aria-label":"Previous"});var a=document.createElement("div");return a.classList.add("carousel-container"),a.append(r,n,e),a}(t),r=function(t){if(!t.length)throw new Error("No images provided for carousel.");var e=document.createElement("div");e.classList.add("carousel-navigation-button-container"),t.forEach((function(t,n){var r=document.createElement("button");r.classList.add("carousel-navigation-button"),0===n&&r.classList.add("active"),Q(r,{type:"button","aria-label":"Go to slide ".concat(n+1),"data-index":n+1}),e.append(r)}));var n=document.createElement("div");return n.classList.add("carousel-navigation-container"),n.appendChild(e),n}(t);return e.append(n,r),e}const et=JSON.parse('[{"name":"Time Capsule NY","link":"http://www.timecapsuleny.io","logo":"https://collective-cloth.s3.us-east-2.amazonaws.com/static-assets/logos_grayscale45/tcny.svg"},{"name":"American PoolPlayers Association","link":"https://poolplayers.com/","logo":"https://collective-cloth.s3.us-east-2.amazonaws.com/static-assets/logos_grayscale45/apa.svg"}]'),nt=JSON.parse('[{"src":"https://collective-cloth.s3.us-east-2.amazonaws.com/static-assets/carousel_images/carousel-image-1.webp","alt":"Carousel image 1"},{"src":"https://collective-cloth.s3.us-east-2.amazonaws.com/static-assets/carousel_images/carousel-image-2.webp","alt":"Carousel image 2"},{"src":"https://collective-cloth.s3.us-east-2.amazonaws.com/static-assets/carousel_images/carousel-image-3.webp","alt":"Carousel image 3"},{"src":"https://collective-cloth.s3.us-east-2.amazonaws.com/static-assets/carousel_images/carousel-image-4.webp","alt":"Carousel image 4"}]'),rt=JSON.parse('[{"title":"Start the Process","textContent":["Share details about your collective and design preferences below.","Our team will promptly contact you to discuss your tailored needs."]},{"title":"Design Collaboration","textContent":["Work closely with our designers to create your product.","Upon final approval, you\'ll receive a personalized quote."]},{"title":"Production & Delivery","textContent":["We produce and emblazon your garments with the chosen designs.","Finally, your order is meticulously prepared and shipped directly to you."]}]'),at=JSON.parse('[{"fieldSet":1,"id":"name","label":"Enter your name:","pattern":"^[a-zA-Z]+(([\',. -][a-zA-Z ])?[a-zA-Z]*)*$","placeholder":"John Doe","required":true,"type":"text"},{"fieldSet":1,"id":"email","label":"Enter your email address:","pattern":"^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\\\.[a-zA-Z]{2,}$","placeholder":"example@email.com","required":true,"type":"email"},{"fieldSet":1,"id":"phone","label":"Enter your phone number:","pattern":"^\\\\+?[0-9]{1,3}?[-. ]?([0-9]{2,4}?[-. ]?){1,3}[0-9]{4,6}$","placeholder":"212-555-1234","required":false,"type":"tel"},{"fieldSet":2,"id":"collective_type","label":"What type of collective do you represent?","options":["Sports/E-Sports Team","Corporate Entity","Non-Profit Organization","Educational Institution","Special Event Group","Other"],"required":true,"type":"select"},{"fieldSet":2,"id":"garment_type","label":"Specify garment type:","options":["Crewneck T-Shirt","Tank-Top","Crewneck Sweater","Hoodie","Polo Shirt","Windbreaker Jacket","Baseball Cap","Beanie","Other"],"required":true,"type":"select"},{"fieldSet":2,"id":"color","label":"In what color?","options":["Black","White","Grey","Red","Green","Blue","Purple","Pink","Yellow","Orange","Other"],"required":true,"type":"select"},{"fieldSet":2,"id":"quantity","label":"How many?","placeholder":"e.g., 50","required":true,"type":"number"},{"fieldSet":3,"id":"vision","label":"Tell us your vision:","placeholder":"Convey your concept 💭 \\n 〔 99 character min. 〕 \\n \\n Interested in an AI generated custom logo? \\n \\n Where should the designs appear on the garment(s)? \\n \\n Should all items in a style (e.g., shirts, sweaters, hats) be identical or unique? \\n \\n Provide as many details as possible about your design preferences and ideas.","required":true,"type":"textarea"}]'),ot=JSON.parse('{"name":"collective cloth","logo":"https://collective-cloth.s3.us-east-2.amazonaws.com/static-assets/logos/cycloneStudios.svg","link":"https://www.cyclonestud.io/"}');var it,ct,st,lt,ut,dt,mt;document.getElementById("content").append(function(){var t=document.createElement("header"),e=document.createElement("div");e.setAttribute("class","content-container");var n=K(H,"header-logo","company-logo","Cyclone Studios Logo","Cyclone Studios Logo",["123px","123px"]),r=document.createElement("a");r.setAttribute("id","header-logo-link"),r.setAttribute("href","/"),r.append(n);var a=document.createElement("h4");a.setAttribute("id","header-logo-text"),a.classList.add("company-name"),a.setAttribute("aria-label","Collective Cloth"),a.textContent="collective cloth";var o=document.createElement("div");o.setAttribute("id","header-logo-container"),o.append(r,a);var i,c=function(t){var e=document.createElement("div");e.classList.add("nav-toggle-bars");var n=document.createElement("button");return n.classList.add("nav-toggle-button"),Q(n,{"aria-label":"Open Navigation Menu","aria-expanded":!1,"aria-controls":"nav"}),n.appendChild(e),n}(),s=function(t){var e=document.createElement("nav"),n=document.createElement("ul");return n.classList.add("nav-ul"),t.forEach((function(t){var e=document.createElement("li");e.classList.add("nav-item");var r=document.createElement("a");r.classList.add("nav-link"),r.textContent=t.textContent,r.href=t.href,e.appendChild(r),n.appendChild(e)})),e.appendChild(n),e}(V);return s.prepend(((i=document.createElement("h2")).setAttribute("id","nav-heading"),i.textContent="Main Menu",i)),e.append(o,c,s),t.append(e),t}(),function(){var t=document.createElement("section");t.setAttribute("id","call-to-action");var e=document.createElement("div");return e.classList.add("content-container"),e.append(function(){var t=document.createElement("div");t.setAttribute("id","call-to-action-left");var e=document.createElement("span");e.classList.add("clipped-text"),e.textContent="show solidarity in style ";var n=document.createElement("span");n.classList.add("emoji","heading-emoji"),n.textContent="😎";var r=document.createElement("h1");r.setAttribute("id","call-to-action-heading"),r.append(e,n);var a=document.createTextNode("implementing "),o=document.createElement("span");o.textContent="AI",o.classList.add("call-to-action-ai");var i=document.createTextNode(" in creative design."),c=document.createElement("h3");c.setAttribute("id","call-to-action-subheading"),c.append(a,o,i);var s=document.createElement("p");s.classList.add("article-text-content"),s.textContent="Our team, a blend of designers, apparel manufacturers, and business experts, specializes in generating bespoke apparel that reflects the distinct identity of each collective we work with.";var l=document.createElement("p");l.classList.add("article-text-content"),l.textContent="We offer a comprehensive service that seamlessly integrates design, production, and delivery, ensuring a tailored experience from start to finish.";var u=document.createElement("article");return u.classList.add("call-to-action-text-content"),u.append(r,c,s,l),t.append(u),t}(),function(){var t=document.createElement("div");t.setAttribute("id","call-to-action-right");var e=K("https://collective-cloth.s3.us-east-2.amazonaws.com/static-assets/product_images/animated/team-capsule-large-animated.webp","call-to-action-product-image","","3-Dimensional Product Showcase","3-Dimensional Product Showcase",["800","800"]);return t.append(e),t}()),t.append(e),t}(),function(t){var e=document.createElement("section");e.setAttribute("id","connections");var n=document.createElement("div");n.classList.add("content-container");var r=document.createElement("div");return r.classList.add("logo-container"),t.forEach((function(t){var e=document.createElement("img");e.classList.add("connection-logo"),e.src=t.logo,e.alt=t.name;var n=document.createElement("a");n.classList.add("connections-link"),n.href=t.link,n.target="_blank",n.rel="noopener noreferrer",n.append(e),r.append(n)})),n.append(r),e.append(n),e}(et),function(t){var e=document.createElement("section");e.setAttribute("id","who-are-we");var n=document.createElement("div");n.classList.add("content-container");var r=tt(t),a=document.createElement("h3");a.setAttribute("id","who-are-we-heading"),a.textContent="Who Are We?";var o=document.createElement("p");o.classList.add("article-text-content"),o.textContent="Conceived to craft custom couture for your collective, our company champions the creation of cohesive, captivating clothing that celebrates your unique camaraderie and character.";var i=document.createElement("p");i.classList.add("article-text-content"),i.textContent="From competitive teams to corporate circles, we commit to customizing chic, comfortable compositions. Utilizing choice materials and cutting-edge design techniques, we convert your vision into a wearable canvas, capturing the essence of your unity.",document.createElement("p").classList.add("article-text-content");var c=document.createElement("article");return c.setAttribute("id","who-are-we-text-content"),c.append(a,o,i),n.append(r,c),e.append(n),e}(nt),function(t){var e=document.createElement("section");e.setAttribute("id","how-does-it-work");var n=document.createElement("div");n.classList.add("content-container");var r=document.createElement("article");r.classList.add("how-does-it-work-text-content");var a=document.createElement("h3");a.setAttribute("id","how-does-it-work-heading"),a.textContent="How Does It Work?",n.append(a);var o=document.createElement("div");return o.setAttribute("id","instructions-container"),t.forEach((function(t,e){var n=document.createElement("article");n.classList.add("instruction-article");var r=document.createElement("div");r.classList.add("step-number"),r.textContent="0".concat(e+1," ");var a=document.createElement("h4");a.classList.add("instruction-number"),a.textContent=t.title;var i=document.createElement("div");i.classList.add("instruction-title-container"),i.append(r,a);var c=document.createElement("div");c.classList.add("instruction-text-content"),t.textContent.forEach((function(t){var e=document.createElement("p");e.classList.add("article-text-content"),e.textContent=t,c.appendChild(e)})),n.append(i,c),o.appendChild(n)})),r.appendChild(o),n.appendChild(r),e.append(n),e}(rt),function(t){var e=document.createElement("section");e.setAttribute("id","start-the-process");var n=document.createElement("div");n.classList.add("content-container");var r=document.createElement("button");r.setAttribute("id","start-the-process-button"),r.textContent="start the process";var a=function(t){var e=document.createElement("h2");e.setAttribute("id","dialog-heading"),e.textContent="The Process";var n=document.createElement("h3");n.setAttribute("id","step-number"),n.textContent="Step 1";var r=document.createElement("button");r.setAttribute("id","dialog-close-button"),r.setAttribute("type","button"),r.setAttribute("aria-label","Close Dialog"),r.textContent="✕";var a=document.createElement("div");a.setAttribute("id","dialog-top-container"),a.append(n,r);var o=document.createElement("button");o.setAttribute("id","previous-button"),o.setAttribute("disabled","true"),o.type="button",o.dataset.element="button",o.textContent="previous";var i=document.createElement("button");i.setAttribute("id","next-button"),i.type="button",i.dataset.element="button",i.textContent="next";var c=document.createElement("button");c.setAttribute("id","submit-button"),c.setAttribute("form","start-the-process-form"),c.setAttribute("type","submit"),c.setAttribute("disabled","true"),c.dataset.element="button",c.textContent="submit";var s=document.createElement("div");s.setAttribute("id","dialog-button-container"),s.append(o,i,c);var l=function(t){var e=document.createElement("fieldset");e.setAttribute("id","field-set-one"),e.classList.add("field-set","active"),e.dataset.fieldSet=1;var n=document.createElement("fieldset");n.setAttribute("id","field-set-two"),n.classList.add("field-set"),n.dataset.fieldSet=2;var r=document.createElement("fieldset");r.setAttribute("id","field-set-three"),r.classList.add("field-set"),r.dataset.fieldSet=3,t.forEach((function(t,a){var o,i=document.createElement("label");if(i.setAttribute("for",t.id),i.textContent=t.label,"select"===t.type){var c=document.createElement("option");c.setAttribute("value",""),c.setAttribute("disabled","true"),c.setAttribute("selected","true"),c.textContent="make a selection",(o=document.createElement("select")).setAttribute("id",t.id),o.setAttribute("name",t.id),o.appendChild(c),t.options.forEach((function(t){var e=document.createElement("option");e.setAttribute("value",t),e.textContent=t,o.appendChild(e)}))}else"textarea"===t.type?((o=document.createElement(t.type)).setAttribute("id",t.id),o.setAttribute("name",t.id),o.setAttribute("minlength",99),o.setAttribute("maxlength",999)):"number"===t.type?((o=document.createElement("input")).setAttribute("id",t.id),o.setAttribute("name",t.id),o.setAttribute("type",t.type),o.setAttribute("min",1)):((o=document.createElement("input")).setAttribute("id",t.id),o.setAttribute("name",t.id),o.setAttribute("type",t.type));if(t.pattern&&o.setAttribute("pattern",o.setAttribute("data-pattern",t.pattern)),t.placeholder&&o.setAttribute("placeholder",t.placeholder),t.required){o.setAttribute("required","true");var s=document.createElement("span");s.classList.add("required-asterisk"),s.textContent="✽ ",s.setAttribute("aria-label","required field asterisk"),i.prepend(s)}var l=document.createElement("div");l.classList.add("field-element-container"),l.append(o);var u=document.createElement("div");u.setAttribute("id","form-field-container-".concat(++a)),u.classList.add("form-field-container"),1===t.fieldSet?u.dataset.fieldSet=1:2===t.fieldSet?u.dataset.fieldSet=2:3===t.fieldSet&&(u.dataset.fieldSet=3),u.append(i,l),1===t.fieldSet?e.appendChild(u):2===t.fieldSet?n.appendChild(u):3===t.fieldSet&&r.appendChild(u)}));var a=document.createElement("p");a.setAttribute("id","form-requirement-text");var o=document.createElement("span");o.classList.add("asterisk-span"),o.textContent="✽",o.setAttribute("aria-label","required field asterisk");var i=document.createTextNode(" ＝ required");a.append(o,i);var c=document.createElement("p");c.setAttribute("id","character-count"),c.textContent="0/99";var s=document.createElement("div");s.setAttribute("id","form-requirements-container"),s.append(a,c);var l=document.createElement("div");l.setAttribute("id","form-field-main-container"),l.append(e,n,r),l.appendChild(s);var u=document.createElement("form");return u.setAttribute("id","start-the-process-form"),u.appendChild(l),u}(t);l.appendChild(s);var u=document.createElement("dialog");return u.setAttribute("id","start-the-process-dialog"),u.append(e,a,l),u}(t);return n.append(r,a),e.append(n),e}(at),function(t,e){var n=document.createElement("footer"),r=document.createElement("div");if(r.classList.add("content-container"),t.name){var a=(new Date).getFullYear(),o=document.createElement("p");o.setAttribute("id","footer-text"),o.textContent="© ".concat(a," ").concat(t.name),r.appendChild(o)}if(t.logo){var i=document.createElement("img");if(i.setAttribute("id","footer-logo"),i.setAttribute("src",t.logo),i.setAttribute("alt","".concat(t.name," logo")),t.link){var c=document.createElement("a");c.setAttribute("id","footer-logo-link"),c.setAttribute("href",t.link),c.setAttribute("target","_blank"),c.appendChild(i),r.appendChild(c)}else r.appendChild(i)}return n.appendChild(r),n}(ot)),dt=document.getElementById("dialog-heading"),lt=dt,ut=document.createDocumentFragment(),lt.textContent.split("").forEach((function(t,e){var n=document.createElement("span");n.setAttribute("id","".concat("split-text","-").concat(e+1)),n.classList.add("letter"),n.textContent=" "===t?" ":t,ut.appendChild(n)})),mt=ut,dt.textContent="",dt.appendChild(mt),document.querySelectorAll('a[href^="#"]').forEach((function(t){t.addEventListener("click",e)})),document.querySelector(".nav-toggle-button").addEventListener("click",o),document.getElementById("start-the-process-button").addEventListener("click",G),document.querySelector('.nav-link[href="#start-the-process"]').addEventListener("click",Z),window.addEventListener("load",R),window.addEventListener("resize",R),d(),it=document.querySelectorAll("section"),ct=document.querySelectorAll("p"),st=document.getElementById("start-the-process-button"),it.forEach((function(t){return J.observe(t)})),ct.forEach((function(t){return M.observe(t)})),U.observe(st)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,